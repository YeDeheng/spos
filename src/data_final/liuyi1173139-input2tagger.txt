Should	N
I	N
use	N
PHP	N
or	N
JSP	N
for	N
a	N
chat	N
website	N
?	N

I	N
want	N
to	N
develop	N
a	N
website	N
web	N
chat	N
application	N
like	N
yahoo	N
.	N
Only	N
difference	N
is	N
that	N
I	N
want	N
to	N
make	N
it	N
web	N
based	N
not	N
desktop	N
.	N
I	N
will	N
be	N
implementing	N
it	N
in	N
jsp	N
/	N
php	N
with	N
ajax	N
.	N
I	N
want	N
to	N
know	N
whether	N
jsp	N
or	N
php	N
will	N
be	N
better	N
for	N
this	N
.	N
What	N
will	N
be	N
advantages	N
or	N
disadvantages	N
of	N
both	N
.	N
Which	N
one	N
of	N
the	N
two	N
would	N
you	N
prefer	N
and	N
why	N
?	N
Will	N
jsp	N
applicatioon	N
will	N
be	N
slower	N
then	N
php	N
?	N
I	N
am	N
thinking	N
of	N
using	N
using	N
struts	N
with	N
jsp	N
and	N
ajax	N
.	N
Will	N
using	N
of	N
struts	N
decrease	N
speed	N
?	N
I	N
know	N
jsp	N
,	N
java	N
and	N
struts	N
but	N
not	N
php	N
.	N
Is	N
php	N
more	N
difficult	N
then	N
jsp	N
?	N

How	N
long	N
is	N
a	N
piece	N
of	N
string	N
?	N
Seriously	N
.	N
We	N
don't	N
know	N
exactly	N
what	N
you	N
want	N
to	N
do	N
but	N
I	N
imagine	N
most	N
of	N
the	N
backend	N
stuff	N
will	N
be	N
very	N
similar	N
in	N
difficulty	N
between	N
the	N
two	N
platforms	N
.	N
Most	N
of	N
the	N
work	N
will	N
be	N
platform	N
independent	N
front-end	N
stuff	N
.	N

It	N
won't	N
be	N
slower	N
because	N
you	N
are	N
using	N
one	N
over	N
the	N
other	N
.	N
It	N
will	N
be	N
slower	N
only	N
if	N
your	N
implementation	N
is	N
less	N
efficient	N
.	N

Whatever	N
you	N
choose	N
keep	N
in	N
mind	N
that	N
web	N
based	N
chat	N
app	N
would	N
probably	N
need	N
continuous	N
updates	N
from	N
server	N
to	N
the	N
clients	N
(	N
so	N
called	N
Comet	N
)	N
.	N

Use	N
whichever	N
one	N
that	N
you're	N
a	N
better	N
programmer	N
in	N
.	N
The	N
task	N
can	N
be	N
accomplished	N
in	N
either	N
language	N
just	N
the	N
same	N
.	N
You	N
can	N
argue	N
endlessly	N
about	N
language	N
features	N
,	N
the	N
bottom	N
line	N
will	N
be	N
whatever	N
works	N
best	N
for	N
you	N
.	N

JSP	N
based	N
web	N
applications	N
are	N
a	N
bit	N
more	N
harder	N
to	N
deploy	N
than	N
PHP	N
based	N
web	N
applications	N
,	N
but	N
you	N
gain	N
the	N
ability	N
of	N
creating	N
Servlets	N
.	N
PHP	N
requires	N
less	N
server	N
administration	N
skills	N
to	N
setup	N
properly	N
and	N
get	N
running	N
,	N
is	N
fast	N
to	N
learn	N
,	N
and	N
allows	N
fast	N
creation	N
of	N
simple	N
applications	N
.	N
None	N
is	N
better	N
than	N
the	N
other	N
,	N
they	N
are	N
different	N
in	N
nature	N
.	N
Check	N
your	N
requirements	N
,	N
and	N
take	N
a	N
decision	N
based	N
on	N
that	N
.	N
If	N
your	N
requirements	N
doesn't	N
favor	N
one	N
over	N
the	N
other	N
,	N
choose	N
whichever	N
your	N
team	N
is	N
more	N
comfortable	N
with	N
.	N

+1	N
for	N
basing	N
your	N
decision	N
on	N
*	N
your	N
requirements*	N
.	N

Exactly	N
!	N
Great	N
answer	N
.	N
Just	N
because	N
you	N
can	N
program	N
easier	N
in	N
PHP	N
doesn't	N
mean	N
it	N
will	N
always	N
be	N
the	N
best	N
choice	N
.	N
The	N
requirements	N
should	N
be	N
used	N
to	N
point	N
you	N
in	N
the	N
right	N
direction	N
.	N

I've	N
worked	N
with	N
both	N
JSP	N
and	N
PHP	N
.	N
Even	N
if	N
I	N
prefer	N
PHP	N
,	N
I	N
still	N
work	N
with	N
JSP	N
from	N
time	N
to	N
time	N
depending	N
on	N
my	N
requirements	N
.	N
There	N
is	N
not	N
really	N
a	N
better	N
choice	N
.	N
It	N
always	N
,	N
**	N
always	N
**	N
depends	N
on	N
your	N
requirements	N
.	N

JSP	N
isn't	N
a	N
language	N
-	N
it's	N
just	N
a	N
view	N
/	N
presentation	N
technology	N
-	N
so	N
it's	N
only	N
to	N
build	N
a	N
web	N
Frontend	N
-	N
while	N
the	N
main	N
programming	N
happens	N
somewhere	N
else	N
-	N
in	N
the	N
Java	N
Language	N
,	N
as	N
a	N
so-called	N
Java	N
Servlet	N
.	N
I	N
personally	N
like	N
Java	N
more	N
,	N
but	N
PHP	N
is	N
okay	N
,	N
and	N
if	N
you	N
only	N
know	N
PHP	N
(	N
which	N
I	N
must	N
assume	N
from	N
the	N
questions	N
:)	N
)	N
you're	N
better	N
off	N
doing	N
it	N
in	N
PHP	N
now	N
-	N
you	N
can	N
learn	N
Java	N
later	N
...	N
Apart	N
from	N
that	N
,	N
the	N
others	N
asking	N
for	N
more	N
background	N
info	N
are	N
right	N
-	N
you	N
need	N
to	N
see	N
what	N
technology	N
meets	N
your	N
requirements	N
best	N
...	N

People	N
refer	N
to	N
JSP	N
the	N
same	N
way	N
as	N
ASP.NET	N
is	N
referred	N
to	N
.	N
It	N
is	N
a	N
framework	N
.	N

Which	N
is	N
incorrect	N
,	N
and	N
therefore	N
I	N
point	N
out	N
how	N
it	N
really	N
is	N
:)	N
No	N
,	N
really	N
,	N
maybe	N
people	N
not	N
doing	N
Java	N
development	N
themselves	N
do	N
that	N
.	N
Java	N
folks	N
neither	N
say	N
they	N
build	N
something	N
in	N
JSP	N
instead	N
of	N
PHP	N
,	N
because	N
JSP	N
isn't	N
a	N
language	N
,	N
nor	N
do	N
they	N
refer	N
to	N
JSP	N
as	N
a	N
framework	N
(	N
because	N
it	N
does	N
not	N
deliver	N
a	N
complete	N
stack	N
of	N
functionalities	N
)	N
-	N
frameworks	N
are	N
things	N
like	N
struts	N
,	N
gwt	N
,	N
webwork	N
,	N
sitemesh	N
-	N
and	N
even	N
those	N
only	N
deliver	N
the	N
view	N
part	N
-	N
a	N
full	N
stack	N
web	N
framework	N
helps	N
you	N
with	N
a	N
lot	N
more	N
things	N
than	N
just	N
the	N
view	N
.	N

If	N
you	N
know	N
both	N
well	N
then	N
choose	N
any	N
.	N
But	N
if	N
facing	N
difficulty	N
then	N
PHP	N
is	N
better	N
to	N
stay	N
with	N
.	N
Reasons	N
:	N
fundamentally	N
easy	N
large	N
no	N
.	N
of	N
developer	N
libraries	N
are	N
available	N
.	N
Easy	N
to	N
integrate	N
with	N
other	N
scripting	N
languages	N
But	N
structural	N
syntax	N
becomes	N
a	N
problem	N
as	N
they	N
are	N
so	N
many	N
in	N
cumbersome	N
manner	N
.	N
Use	N
PHP	N
tag	N
library	N
for	N
that	N
works	N
just	N
like	N
JSTL	N
.	N
"	N
Choosing	N
language	N
is	N
not	N
the	N
problem	N
but	N
efficient	N
implementation	N
of	N
code	N
is	N
the	N
only	N
hurdle	N
.	N
"	N

