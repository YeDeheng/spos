Thanks for the detailed answer. I think I will go for the Node Based Tooling option. New to Grunt I like what I've seen so far, and would be great if I can have the best of two worlds. I didn't know about WRO4J and JAWR existance. Thanks again. wro4j integrates the less4j processor which is java based implementation of less.js whose performance is comparable to the node.js native one. The reason why wro4j isn't that fast with node.js, is mostly because it requires disk IO operations for each execution. This could be improved only if node.js based processes (such as lessc) would allow in-memory compilation of resources. Does this process support failing the Maven build if the grunt build fails? Any exec task that doesn't return properly should fail the build. stackoverflow.com/questions/3480162 JAWR is active again since 2014. The last update time as of this comment is 05/08/2014  You might want to checkout http://jhipster.github.io/ : it's a Yeoman generator, that generates an application which has Maven, Grunt and Bower all working together.  It's a bit like your third option, but everything is configured for you, which isn't that easy. It's also generating the basic AngularJS and Java REST services for you. It's too late for my project to start with a freshly generated application. But this is great and very helpful, I will lend some of the solutions from the generated application and use in my project. Thanks! 