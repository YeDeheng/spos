332337	Session management in GWT without using Java on the server ?	N N P ^ P V ^ P D N ,
332337	I am using GWT for my client side application . I am not using GWT / Java for the server . However , I am not sure how I can handle session management . The GWT application resides on one page , all server calls are done via AJAX . If a session expires on the server ... let's assume the user didn't close the browser , but left the application open , how could my server notify the application that the session has expired and that the client side portion should show the login screen again ? What is meant by client side session management ? That seems inherently insecure . I'm not looking for code . I'm looking for ideas , techniques , potential solutions etc . I've considered Comet http://en.wikipedia.org/wiki/Comet_(programming ) , but that doesn't seem like that will work very well without using Java on the server side . Maybe , I'm wrong ? I don't want to poll the server either . Any thoughts or insight ?	O V V V P D N N N , O V R V ^ ^ ^ P D N , R , O V R R R O V V N N , ^ ^ N V P $ N , D N V V V P ^ , P D N V P D N , L V D N V V D N , & V D N V , R V D N V D N P D N V A & P D N N N V V D N N R , O V V P N N N N , O V R A , L R V P N , L V P N , N , A N G , L A N U , , & O V V P O V V R R P V ^ P D N N , R , L A , O V V P N D N & , D N & N ,
332337	What should happen if the session expired on the server-side , then the next time the client sends a request to the server , it will either create a new session , or , more likely , send back a message to the client that it is trying to access a page without a session , and send them to the login screen . However , you will still need to wait until the client sends a message to the server .	O V V P D N V P D N , R D A N D N V D N P D N , O V D V D A N , & , R A , V T D N P D N P O V V P V D N P D N , & V O P D N N , R , O V R V P V P D N V D N P D N ,
332337	Without knowing how you're doing your RPC is working , its hard to give good advice . If your AJAX service requires a user to be authenticated ( IE have a valid session ) , it is ok to just send a 401 error saying that the user is invalid . Client-side can interpret the 401 error as a message that it should set the user up for re-authentication .	P V R L V D ^ V V , L R P V A N , P D ^ N V D N P V V , ^ V D A N , , O V ! P R V D $ N V P D N V A , ^ V V D $ N P D N P O V V D N P P N ,
332337	I'm not using RPC , the GWT request object is just a wrapper around XMLHttpRequest . Great idea ! I've never thought about changing the http status code . I may end up using this .	L R V ^ , D N N N V R D N P ^ , A N , L R V P V D U N N , O V N T V D ,
332337	We handled this in our application , by detecting when the server sent back a redirect to the login screen ( it would come through the response to the Ajax call ) , and popped up a dialog asking the user for their password again , but pre-filled their username . We then posted that to the same place the login page does , as if it was the login page , and so the user was logged into this new session automatically . Finally we just re-submitted the ajax call again , so it was a seamless process to the user ( eg : they didn't have to click the action again ) . Since we stored all the state on the client , and not in session variables we didn't have any problems trying to persist data across sessions .	O V D P D N , P V R D N V T D N P D N N , O V V P D N P D ^ V , , & V T D N V D N P D ^ R , & V D N , O R V O P D A N D N N V , R P O V D N N , & P D N V V P D A N R , R O R V D N V R , P O V D A N P D N , N , O V V P P D N R , , P O V X D N P D N , & R P N N O V V D N V P V N P N ,
