Java	N
ScriptEngine	N
:	N
using	N
value	N
on	N
Java	N
side	N
?	N

In	N
a	N
Java	N
program	N
I'm	N
invoking	N
a	N
user-defined	N
JavaScript	N
program	N
:	N
Now	N
I	N
would	N
like	N
to	N
use	N
'	N
result	N
'	N
:	N
how	N
can	N
I	N
have	N
an	N
access	N
to	N
it	N
?	N
Can	N
I	N
identify	N
it	N
as	N
an	N
array	N
(	N
Can	N
I	N
iterate	N
threw	N
its	N
members	N
)	N
,	N
a	N
String	N
,	N
an	N
Integer	N
,	N
etc	N
...	N
?	N
Thanks	N
EDITED	N
:	N
I	N
just	N
know	N
that	N
my	N
user	N
gave	N
me	N
a	N
script	N
returning	N
the	N
last	N
value	N
.	N
I	N
don't	N
know	N
anything	N
about	N
this	N
value	N
.	N
Is	N
it	N
a	N
String	N
,	N
an	N
array	N
,	N
etc	N
..	N
?	N
I	N
don't	N
known	N
but	N
I	N
want	N
to	N
use	N
it	N
.	N

This	N
link	N
may	N
be	N
helpful	N
.	N
It	N
seems	N
that	N
the	N
best	N
you	N
can	N
do	N
is	N
to	N
rely	N
on	N
an	N
implementation	N
specific	N
class	N
.	N

Except	N
perhaps	N
for	N
simple	N
values	N
,	N
I	N
would	N
rather	N
let	N
the	N
scripting	N
engine	N
coerce	N
its	N
values	N
to	N
Java	N
types	N
.	N
Even	N
if	N
you	N
can't	N
edit	N
the	N
script	N
,	N
you	N
could	N
take	N
the	N
return	N
value	N
and	N
pass	N
it	N
through	N
your	N
own	N
generated	N
script	N
to	N
do	N
the	N
coercion	N
.	N
This	N
assumes	N
you	N
know	N
something	N
about	N
the	N
value	N
being	N
returned	N
.	N
EDIT	N
:	N
since	N
nothing	N
is	N
known	N
about	N
the	N
return	N
value	N
,	N
I	N
would	N
first	N
test	N
it	N
using	N
Java	N
(	N
getClass()	N
)	N
to	N
see	N
if	N
it	N
was	N
one	N
of	N
the	N
java.lang	N
types	N
.	N
If	N
the	N
returned	N
object	N
is	N
from	N
some	N
API	N
private	N
to	N
the	N
library	N
,	N
I	N
would	N
introspect	N
it	N
using	N
the	N
scripting	N
language	N
(	N
in	N
this	N
case	N
JavaScript	N
)	N
,	N
possibly	N
coercing	N
it	N
to	N
a	N
Java	N
type	N
or	N
pushing	N
its	N
properties	N
into	N
some	N
Java	N
data	N
structure	N
during	N
the	N
process	N
.	N
My	N
JavaScript	N
is	N
rusty	N
,	N
but	N
John	N
Leach's	N
tutorial	N
looks	N
quite	N
good	N
:	N
JavaScript	N
Introspection	N
.	N
(	N
You	N
may	N
be	N
able	N
to	N
use	N
Java	N
reflection	N
,	N
but	N
since	N
the	N
engine	N
implementation	N
could	N
vary	N
between	N
Java	N
versions	N
/	N
JREs	N
/	N
JavaScript	N
engines	N
,	N
I	N
wouldn't	N
rely	N
on	N
it	N
.	N
)	N

This	N
question	N
was	N
asked	N
ages	N
ago	N
,	N
but	N
the	N
answers	N
still	N
seemed	N
correct	N
.	N
In	N
case	N
it's	N
of	N
interest	N
to	N
anyone	N
else	N
trying	N
to	N
pass	N
complex	N
objects	N
between	N
Java	N
and	N
Javascript	N
,	N
I	N
wanted	N
to	N
present	N
my	N
solution	N
.	N
I	N
wrote	N
a	N
script	N
that	N
converts	N
the	N
NativeObject	N
to	N
(	N
in-memory	N
)	N
JSON	N
objects	N
(	N
actually	N
I	N
use	N
MongoDB's	N
BSON-based	N
objects	N
,	N
but	N
you	N
should	N
just	N
be	N
able	N
to	N
substitute	N
1-1	N
for	N
JSONArray	N
and	N
JSONObject	N
in	N
the	N
sample	N
code	N
below	N
)	N
.	N
So	N
for	N
example	N
,	N
say	N
I	N
have	N
a	N
(	N
user	N
)	N
script	N
"	N
create_object_script	N
"	N
,	N
which	N
"	N
returns	N
"	N
some	N
object	N
or	N
array	N
of	N
interest	N
,	N
then	N
I	N
can	N
convert	N
it	N
into	N
JSON	N
(	N
ie	N
a	N
list	N
of	N
hashmaps	N
)	N
as	N
follows	N
:	N
Obviously	N
if	N
you	N
have	N
control	N
over	N
the	N
"	N
create_object_script	N
"	N
script	N
you	N
can	N
do	N
this	N
in	N
a	N
single	N
step	N
;	N
my	N
scripts	N
are	N
user-generated	N
so	N
hiding	N
away	N
this	N
complexity	N
is	N
necessary	N
-	N
the	N
users	N
just	N
write	N
scripts	N
where	N
the	N
"	N
return	N
value	N
"	N
is	N
the	N
final	N
line	N
.	N
I	N
gisted	N
the	N
"	N
parsing_script	N
"	N
here	N
to	N
keep	N
the	N
length	N
of	N
this	N
post	N
down	N
.	N
Functionally	N
this	N
works	N
very	N
nicely	N
;	N
I	N
haven't	N
developed	N
in	N
JS	N
much	N
so	N
it's	N
possible	N
there	N
are	N
more	N
efficient	N
ways	N
of	N
doing	N
this	N
.	N
(	N
Note	N
I	N
always	N
need	N
my	N
results	N
in	N
a	N
list	N
,	N
if	N
you	N
don't	N
then	N
you	N
could	N
pass	N
in	N
a	N
BasicDBObject	N
"	N
outObj	N
"	N
and	N
write	N
to	N
that	N
instead	N
in	N
the	N
singleton	N
case	N
)	N
.	N
Hope	N
this	N
helps	N
someone	N
who	N
finds	N
themselves	N
in	N
my	N
situation	N
at	N
1am	N
last	N
night	N
!	N

