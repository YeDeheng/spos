Scripting	N
in	N
Java	N

Me	N
and	N
some	N
friends	N
are	N
writing	N
a	N
MORPG	N
in	N
Java	N
,	N
and	N
we	N
would	N
like	N
to	N
use	N
a	N
scripting	N
language	N
to	N
,	N
eg	N
.	N
to	N
create	N
quests	N
.	N
We	N
have	N
non	N
experience	N
with	N
scripting	N
in	N
Java	N
.	N
We	N
have	N
used	N
Python	N
,	N
but	N
we	N
are	N
very	N
inexperienced	N
with	N
it	N
.	N
One	N
of	N
us	N
also	N
have	N
used	N
Javascript	N
.	N
What	N
scripting	N
language	N
should	N
we	N
use	N
?	N
What	N
scripting	N
language	N
should	N
we	N
not	N
use	N
?	N

How	N
about	N
Jython	N
?	N
http://www.jython.org/Project	N
/	N

I	N
agree	N
with	N
Viktor's	N
Jython	N
suggestion	N
.	N
Other	N
than	N
that	N
and	N
JavaScript	N
(	N
which	N
you've	N
mentioned	N
,	N
and	N
is	N
built	N
into	N
Java	N
6+	N
via	N
the	N
javax.script	N
package	N
)	N
,	N
Groovy	N
and	N
JRuby	N
are	N
also	N
worth	N
looking	N
at	N
too	N
.	N
By	N
the	N
way	N
,	N
you	N
should	N
look	N
at	N
Wyvern	N
,	N
also	N
an	N
MMORPG	N
written	N
in	N
Java	N
and	N
using	N
Jython	N
for	N
scripting	N
.	N
Steve	N
Yegge	N
,	N
its	N
author	N
,	N
has	N
much	N
to	N
say	N
about	N
it	N
from	N
time	N
to	N
time	N
.	N
:-)	N

Java	N
supports	N
a	N
variety	N
of	N
(	N
scripting	N
)	N
languages	N
,	N
some	N
are	N
listed	N
in	N
Wikipedia	N
here	N
and	N
here	N
.	N
You	N
probably	N
should	N
choose	N
language	N
with	N
powerful	N
DSL	N
and	N
metaprogramming	N
capabilities	N
,	N
such	N
as	N
Clojure	N
.	N
But	N
if	N
you	N
need	N
something	N
simpler	N
,	N
JavaScript	N
might	N
be	N
a	N
viable	N
alternative	N
.	N

See	N
Java	N
:	N
Scripting	N
language	N
(	N
macro	N
)	N
to	N
embed	N
into	N
a	N
Java	N
desktop	N
application	N

You	N
have	N
quite	N
a	N
few	N
options	N
:	N
Groovy	N
-	N
http://groovy.codehaus.org	N
Jython	N
-	N
http://www.jython.org/Project	N
JRuby	N
-	N
http://jruby.codehaus.org	N
Possibly	N
even	N
BeanShell	N
(	N
http://www.beanshell.org	N
)	N
I'm	N
a	N
fan	N
of	N
Python	N
myself	N
so	N
I'd	N
recommend	N
Jython	N
,	N
but	N
they're	N
probably	N
all	N
reasonable	N
options	N
.	N

what	N
about	N
creating	N
your	N
own	N
specialized	N
scripting	N
language	N
?	N
If	N
your	N
app	N
is	N
written	N
with	N
java	N
,	N
you	N
can	N
use	N
ANTLR	N
(	N
http://www.antlr.org	N
)	N
to	N
create	N
your	N
language	N
parsing	N
code	N
.	N
The	N
reason	N
I	N
say	N
this	N
is	N
because	N
a	N
general	N
purpose	N
scripting	N
language	N
may	N
provide	N
too	N
much	N
power	N
(	N
because	N
the	N
script	N
it	N
to	N
be	N
used	N
for	N
quests	N
only	N
i	N
assume	N
)	N
.	N
But	N
if	N
making	N
your	N
own	N
language	N
is	N
too	N
hard	N
then	N
any	N
of	N
the	N
above	N
suggestions	N
works	N
-	N
you	N
just	N
have	N
to	N
figure	N
out	N
how	N
to	N
bind	N
the	N
game's	N
runtime	N
into	N
the	N
script	N
.	N
I	N
also	N
suggest	N
Lua	N
(	N
http://www.lua.org	N
)	N
as	N
another	N
choice	N
that	N
lots	N
of	N
games	N
use	N
.	N

I	N
am	N
a	N
big	N
fan	N
of	N
Python	N
/	N
Jython	N
due	N
to	N
the	N
clean	N
syntax	N
-	N
which	N
may	N
suit	N
you	N
if	N
you	N
have	N
some	N
python	N
experience	N
.	N
Otherwise	N
Groovy	N
which	N
is	N
based	N
on	N
Java	N
syntax	N
and	N
may	N
be	N
an	N
easier	N
learning	N
curve	N
if	N
most	N
of	N
your	N
developers	N
are	N
Java	N
guys	N
.	N
It	N
also	N
has	N
the	N
advantage	N
of	N
closer	N
ties	N
with	N
the	N
Java	N
language	N
and	N
libraries	N
.	N
Beanshell	N
is	N
good	N
if	N
you	N
have	N
simple	N
scripting	N
in	N
mind	N
-	N
it	N
doesn't	N
support	N
classes	N
.	N
However	N
I	N
don't	N
think	N
it	N
has	N
had	N
any	N
support	N
over	N
the	N
last	N
few	N
years	N
(	N
the	N
JSR	N
seemed	N
to	N
kill	N
it	N
off	N
...	N
)	N
so	N
is	N
perhaps	N
a	N
bad	N
choice	N
if	N
support	N
is	N
important	N
to	N
you	N
.	N

I	N
would	N
have	N
to	N
recommend	N
Javascript	N
for	N
this	N
purpose	N
.	N
Mozilla	N
Rhino	N
http://www.mozilla.org/rhino	N
is	N
an	N
excellent	N
implementation	N
that	N
would	N
fit	N
your	N
needs	N
perfectly	N
.	N
I	N
recommend	N
Javascript	N
over	N
Jython	N
or	N
JRuby	N
because	N
of	N
familiarity	N
.	N
Trivial	N
Javascript	N
follows	N
a	N
very	N
familiar	N
syntax	N
that	N
anybody	N
can	N
use	N
.	N
However	N
if	N
someone	N
wants	N
to	N
do	N
something	N
more	N
intense	N
,	N
Javascript	N
is	N
a	N
very	N
powerful	N
functional	N
programming	N
language	N
.	N
I	N
regularly	N
use	N
Groovy	N
and	N
Ruby	N
professionally	N
and	N
believe	N
that	N
their	N
purpose	N
is	N
best	N
for	N
writing	N
parts	N
of	N
applications	N
with	N
particularly	N
complex	N
logic	N
where	N
Java	N
is	N
cumbersome	N
to	N
write	N
.	N
Javascript	N
is	N
a	N
much	N
better	N
choice	N
as	N
an	N
embedded	N
,	N
general	N
scripting	N
language	N
to	N
use	N
in	N
a	N
game	N
.	N
I	N
haven't	N
used	N
Python	N
,	N
but	N
it's	N
syntactically	N
similar	N
to	N
Ruby	N
and	N
I	N
would	N
believe	N
it's	N
purpose	N
would	N
also	N
be	N
similar	N
.	N

I'm	N
responsible	N
for	N
a	N
fairly	N
large	N
hybrid	N
Java	N
/	N
Jython	N
system	N
.	N
We	N
use	N
java	N
for	N
core	N
API	N
development	N
,	N
then	N
wire	N
Java	N
objects	N
together	N
using	N
Jython	N
.	N
This	N
is	N
in	N
a	N
scientific	N
computing	N
environment	N
where	N
we	N
need	N
to	N
be	N
able	N
to	N
put	N
together	N
ad-hoc	N
data	N
analysis	N
scripts	N
quickly	N
.	N
If	N
I	N
were	N
starting	N
this	N
system	N
from	N
scratch	N
today	N
,	N
I	N
would	N
not	N
choose	N
Jython	N
as	N
the	N
scripting	N
language	N
.	N
I	N
like	N
Python	N
fine	N
,	N
but	N
I	N
frequently	N
encounter	N
awkward	N
mismatches	N
between	N
the	N
Python	N
type	N
system	N
and	N
the	N
Java	N
type	N
system	N
.	N
For	N
example	N
,	N
if	N
you	N
just	N
want	N
a	N
hashtable	N
,	N
should	N
you	N
use	N
a	N
Python	N
dictionary	N
or	N
a	N
Java	N
HashMap	N
?	N
The	N
decision	N
might	N
be	N
different	N
depending	N
on	N
whether	N
you	N
are	N
just	N
using	N
the	N
data	N
structure	N
locally	N
in	N
Python	N
code	N
or	N
passing	N
it	N
across	N
the	N
Java	N
boundary	N
.	N
Jython	N
does	N
a	N
certain	N
amount	N
of	N
type	N
coercion	N
for	N
you	N
,	N
but	N
it's	N
not	N
perfect	N
.	N
It's	N
annoying	N
to	N
even	N
have	N
to	N
think	N
about	N
issues	N
like	N
this	N
when	N
the	N
purpose	N
of	N
using	N
a	N
scripting	N
language	N
in	N
the	N
first	N
place	N
is	N
to	N
enhance	N
your	N
productivity	N
.	N
I	N
assume	N
JavaScript	N
or	N
JRuby	N
would	N
have	N
similar	N
issues	N
.	N
Today	N
I	N
would	N
choose	N
a	N
scripting	N
language	N
that	N
is	N
specifically	N
targeted	N
to	N
the	N
JVM	N
and	N
leverages	N
the	N
Java	N
type	N
system	N
.	N
The	N
obvious	N
candidates	N
are	N
Groovy	N
and	N
Beanshell	N
;	N
Groovy	N
seems	N
to	N
have	N
been	N
picking	N
up	N
momentum	N
lately	N
so	N
I'd	N
look	N
most	N
closely	N
at	N
it	N
.	N

If	N
you	N
were	N
to	N
start	N
from	N
scratch	N
in	N
2012	N
would	N
you	N
approach	N
the	N
"	N
glue	N
components	N
together	N
"	N
differently	N
?	N

Short	N
version	N
Don	N
t	N
use	N
a	N
scripting	N
language	N
!	N
Instead	N
focus	N
on	N
configurability	N
(	N
which	N
is	N
something	N
that	N
a	N
non-programmer	N
can	N
do	N
well	N
)	N
.	N
Longer	N
version	N
One	N
oft-used	N
argument	N
in	N
favour	N
of	N
having	N
a	N
scripting	N
language	N
is	N
that	N
it	N
allows	N
for	N
lesser	N
programmers	N
to	N
more	N
trivial	N
tasks	N
.	N
Don't	N
belive	N
this	N
,	N
it	N
will	N
not	N
save	N
you	N
any	N
time	N
,	N
since	N
trivial	N
tasks	N
are	N
already	N
accomplished	N
by	N
real	N
programmers	N
in	N
no	N
time	N
.	N
Aim	N
for	N
configurability	N
instead	N
of	N
scripting	N
,	N
and	N
you	N
will	N
have	N
a	N
much	N
lower	N
risk	N
of	N
bleeding	N
over	N
complex	N
algorithms	N
and	N
concepts	N
into	N
the	N
incapable	N
hands	N
of	N
game	N
designers	N
.	N
:)	N
Lack	N
of	N
hotswapping	N
(	N
edit-and-continue	N
)	N
would	N
have	N
been	N
a	N
reason	N
to	N
implement	N
a	N
scripting	N
language	N
in	N
an	N
MMOG	N
(	N
you	N
don	N
t	N
want	N
to	N
reload	N
the	N
whole	N
game	N
for	N
a	N
minor	N
code	N
change	N
)	N
,	N
but	N
using	N
Java	N
,	N
with	N
built-in	N
hotswap	N
,	N
you	N
really	N
have	N
no	N
reason	N
for	N
adding	N
a	N
scripting	N
language	N
on	N
top	N
.	N
I	N
have	N
spent	N
years	N
pondering	N
these	N
questions	N
;	N
in	N
the	N
day	N
I	N
implemented	N
a	N
complete	N
scripting	N
language	N
,	N
IDE	N
,	N
VM	N
,	N
debugger	N
,	N
etc	N
for	N
an	N
MMOG	N
myself	N
.	N
Since	N
,	N
I	N
have	N
grown	N
wiser	N
.	N
If	N
you	N
still	N
choose	N
to	N
go	N
down	N
the	N
infinitely	N
crappy	N
path	N
of	N
no	N
return	N
,	N
keep	N
the	N
following	N
in	N
mind	N
.	N
Pick	N
a	N
mature	N
language	N
which	N
has	N
been	N
around	N
for	N
a	N
while	N
.	N
Auto	N
testing	N
,	N
debugging	N
and	N
editing	N
will	N
suck	N
bigtime	N
until	N
you	N
make	N
your	N
own	N
tools	N
/	N
plugins	N
/	N
start	N
hacking	N
around	N
in	N
the	N
VM	N
.	N
To	N
date	N
,	N
I	N
have	N
never	N
seen	N
a	N
DSL	N
that	N
improved	N
the	N
situation	N
(	N
getting	N
a	N
more	N
maintainable	N
product	N
)	N
.	N
Myself	N
,	N
I	N
integrated	N
Python	N
into	N
my	N
indie	N
game	N
engine	N
,	N
but	N
eventually	N
came	N
to	N
my	N
senses	N
and	N
ripped	N
it	N
out	N
.	N
"	N
Stackless	N
Python	N
"	N
is	N
just	N
a	N
way	N
of	N
saying	N
"	N
unmaintainable	N
but	N
fast	N
"	N
.	N
Please	N
,	N
anyone	N
correct	N
me	N
if	N
I'm	N
wrong	N
?	N

There	N
is	N
one	N
good	N
reason	N
for	N
including	N
a	N
scripting	N
language	N
,	N
namely	N
where	N
you	N
need	N
to	N
be	N
able	N
to	N
add	N
new	N
functionality	N
(	N
which	N
hence	N
cannot	N
be	N
configured	N
)	N
without	N
redeployment	N
.	N

But	N
Java	N
has	N
support	N
for	N
(	N
re-	N
)	N
loading	N
classes	N
,	N
and	N
using	N
some	N
thought	N
and	N
reflection	N
will	N
take	N
you	N
a	N
long	N
way	N
.	N
If	N
necessary	N
.	N

You	N
still	N
need	N
to	N
compile	N
the	N
revised	N
Java	N
classes	N
.	N

Compiling	N
should	N
an	N
be	N
infinitesimal	N
issue	N
compared	N
to	N
incorporating	N
a	N
scripting	N
language	N
,	N
in	N
all	N
the	N
ways	N
I	N
can	N
think	N
of	N
.	N

LuaJ	N
seems	N
to	N
be	N
a	N
nice	N
way	N
to	N
embed	N
Lua	N
into	N
Java	N
:	N
http://sourceforge.net/projects/luaj	N
/	N

