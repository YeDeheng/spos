Detecting	N
a	N
64-bit	N
jre	N
in	N
a	N
32-bit	N
browser	N
?	N

Is	N
there	N
any	N
way	N
to	N
detect	N
a	N
64-bit	N
java	N
install	N
in	N
a	N
32-bit	N
environment	N
?	N
The	N
Java	N
Deployment	N
Toolkit	N
detects	N
nothing	N
,	N
but	N
I	N
was	N
wondering	N
if	N
there	N
was	N
some	N
secret	N
browser	N
way	N
of	N
detecting	N
the	N
64-bit	N
install	N
client-side	N
.	N

Sun's	N
HotSpot	N
JVM	N
FAQ	N
:	N
When	N
writing	N
Java	N
code	N
,	N
how	N
do	N
I	N
distinguish	N
between	N
32	N
and	N
64-bit	N
operation	N
?	N
There's	N
no	N
public	N
API	N
that	N
allows	N
you	N
to	N
distinguish	N
between	N
32	N
and	N
64-bit	N
operation	N
.	N
Think	N
of	N
64-bit	N
as	N
just	N
another	N
platform	N
in	N
the	N
write	N
once	N
,	N
run	N
anywhere	N
tradition	N
.	N
However	N
,	N
if	N
you'd	N
like	N
to	N
write	N
code	N
which	N
is	N
platform	N
specific	N
(	N
shame	N
on	N
you	N
)	N
,	N
the	N
system	N
property	N
sun.arch.data.model	N
has	N
the	N
value	N
"	N
32	N
"	N
,	N
"	N
64	N
"	N
,	N
or	N
"	N
unknown	N
"	N
.	N
You	N
can	N
access	N
this	N
like	N
System.getProperty	N
(	N
"	N
sun.arch.data.model	N
")	N
.	N
This	N
property	N
will	N
obviously	N
only	N
actually	N
be	N
set	N
on	N
Sun	N
JVMs	N
/	N
JREs	N
.	N
You	N
might	N
also	N
try	N
to	N
parse	N
the	N
results	N
of	N
System.getProperty	N
(	N
"	N
java.vm.name	N
")	N
,	N
but	N
this	N
will	N
also	N
be	N
highly	N
vendor	N
specific	N
.	N

I	N
guess	N
I	N
could	N
do	N
this	N
in	N
an	N
applet	N
,	N
but	N
I	N
was	N
hoping	N
to	N
get	N
this	N
information	N
before	N
java	N
was	N
necessarily	N
loaded	N
or	N
available	N
.	N

