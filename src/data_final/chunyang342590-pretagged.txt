Sorting	A
domain	N
names	N

Has	V
anyone	O
implemented	V
sorting	V
a	D
list	N
of	P
domain	N
names	N
?	,
I	O
have	V
seen	V
some	D
applications	N
sort	N
them	O
as	R
flat	A
strings	N
,	,
but	&
the	D
problem	N
is	V
that	P
you	O
end	V
up	T
scattering	V
all	X
the	D
related	A
hosts	N
in	P
a	D
domain	N
:	,
a.me.com	U
a.you.com	U
b.me.com	U
b.you.com	U
So	P
,	,
the	D
basic	A
logic	N
I	O
came	V
up	T
with	P
reverse	V
the	D
order	N
of	P
the	D
labels	N
,	,
then	R
sort	N
.	,
FQDNs	^
of	P
one	$
label	N
should	V
be	V
treated	V
as	P
hostnames	^
,	,
and	&
probably	R
sorted	V
separately	R
,	,
maybe	R
at	P
the	D
top	N
.	,
Ideally	R
I	O
am	V
looking	V
for	P
javascript	^
and	&
java	N
versions	N
.	,
I	O
also	R
don't	V
know	V
if	P
this	D
design	N
works	V
well	R
for	P
the	D
newer	A
internationalized	V
domain	N
names	N
.	,

Err	!
,	,
what's	L
wrong	A
with	P
doing	V
exactly	R
what	O
you	O
suggest	V
,	,
reversing	V
the	D
strings	N
and	&
sorting	V
alphabetically	R
?	,

You	O
could	V
split	V
the	D
domain	N
names	N
into	P
individual	A
fields	N
and	&
do	V
successive	A
sorts	N
.	,
You	O
can	V
create	V
a	D
domain	N
name	N
object	N
to	P
have	V
three	$
fields	N
and	&
create	V
a	D
list	N
of	P
domain	N
names	N
to	P
sort	N
.	,
For	P
each	D
of	P
the	D
three	$
fields	N
,	,
do	V
a	D
sort	N
.	,
At	P
the	D
end	N
,	,
you	O
have	V
a	D
sort	N
list	N
of	P
domain	N
names	N
with	P
related	A
hosts	N
together	R
.	,

split	V
by	P
"	,
.	,
"	,
then	R
piece	N
together	R
"	,
.	,
com.au	O
"	,
and	&
"	,
.	,
co.uk	!
"	,
vs	V
"	,
.	,
com	!
"	,

@Bala	@
:	~
Three	$
fields	N
?	,

From	P
the	D
few	A
examples	N
given	V
,	,
I	O
assumed	V
there	R
were	V
three	$
fields	N
(	,
foo.bar.com)	E
.	,
If	P
there	X
were	V
only	A
two	$
fields	N
(	,
foo.com)	E
,	,
then	R
the	D
third	A
field	N
would	V
be	V
null	A
.	,

This	D
is	V
a	D
result	N
of	P
the	D
big-endian	^
vs	P
little-endian	^
war	N
of	P
the	D
early	A
80s	N
which	P
the	D
little-endian	A
team	N
won	V
.	,
In	P
the	D
UK	^
,	,
domain	N
names	N
were	V
originally	R
ordered	V
like	R
(	,
the	D
hypothetical	A
)	,
'	,
uk.ac.leeds	N
'	,
for	P
the	D
UK	^
'	,
academic	A
'	,
(	,
University	N
of	P
)	^
Leeds	^
.	,
This	D
is	V
big-endian	^
ordering	V
-	,
and	&
makes	V
your	D
sort	N
far	R
easier	A
.	,
It	O
would	V
also	R
make	V
it	O
far	R
harder	A
to	P
spoof	N
internet	N
sites	N
in	P
URLs	^
.	,
Of	P
course	N
,	,
nowadays	R
,	,
the	D
order	N
is	V
little-endian	^
,	,
and	&
the	D
hypothetical	A
URL	N
would	V
be	V
'	,
leeds.ac.uk	!
'	,
.	,
To	P
sort	N
related	A
domain	N
names	N
together	R
sensibly	R
,	,
you	O
will	V
have	V
to	P
achieve	V
the	D
effect	N
of	P
sorting	V
by	P
furthest	R
right	A
component	N
(	,
.	,
com	E
,	,
.	,
uk	^
,	,
.	,
org	E
)	,
first	R
,	,
then	R
the	D
next	A
left	N
,	,
and	&
repeat	V
...	,
In	P
other	A
words	N
(	,
as	P
@Bala	@
said	V
)	,
,	,
you	O
will	V
have	V
to	P
do	V
something	N
similar	A
to	P
splitting	V
the	D
names	N
up	T
and	&
sorting	V
from	P
right-to-left	^
.	,

I	O
don't	V
know	V
about	P
Java	^
and	&
Javascript	V
in	P
particular	A
,	,
but	&
many	A
languages	N
provide	V
some	D
sort	N
of	P
array	N
data	N
structure	V
that	O
can	V
be	V
lexicographically	R
sorted	V
.	,
So	P
,	,
like	V
you	O
said	V
,	,
convert	V
"	,
a.example.com	!
"	,
into	P
{	E
"	E
com	E
"	,
,	,
"	,
example	N
"	,
,	,
"	,
a	D
"	,
}	,
,	,
and	&
just	R
let	V
the	D
default	N
sorting	V
rules	N
run	V
.	,
A	^
lexicographical	^
sort	N
will	V
then	R
do	V
exactly	R
what	O
you	O
want	V
.	,
If	P
you	O
have	V
a	D
list	N
of	P
local	A
domains	N
as	P
well	R
as	P
FQDNs	^
,	,
I	O
agree	V
you'd	L
want	V
to	P
separate	V
those	O
out	T
.	,
Anything	N
that	O
doesn't	V
have	V
a	D
period	N
in	P
it	O
could	V
be	V
filtered	V
out	T
first	R
.	,
Or	^
,	,
you	O
could	V
resolve	V
those	O
all	R
to	P
FQDNs	^
and	&
then	R
just	R
sort	V
the	D
whole	A
list	N
.	,
Some	D
Python	N
code	N
that	O
does	V
this	D
(	,
should	V
map	N
to	P
Javascript	^
fairly	R
closely	R
):	,
This	D
prints	N
:	,

Based	V
on	P
Tom's	Z
answer	N
...	,
The	D
print	N
statements	N
work	N
(	,
when	R
uncommented	V
)	,
in	P
the	D
SquareFree	^
JavaScript	^
Development	^
Environment	^
,	,
a	D
handy	A
place	N
to	P
test	N
out	P
javascript	D
fragments	N
...	,

Thank	V
you	O
for	P
the	D
translation	N
,	,
Stobor	^
!	,

This	D
is	V
how	R
it's	L
done	V
in	P
Perl	^
:	,

