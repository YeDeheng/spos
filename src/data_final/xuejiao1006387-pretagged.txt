What	O
is	V
the	D
disadvantage	N
of	P
DWR	^
?	,

While	P
using	V
DWR	^
in	P
a	D
intranet	N
,	,
will	V
disadvantages	N
like	P
perfomance	N
or	&
security	N
issues	N
occur	V
?	,
Direct	N
web	N
remoting	V
is	V
a	D
tool	N
which	O
uses	V
Ajax	^
request	N
to	P
contact	V
a	D
server	N
from	P
a	D
js	S
file	N
.	,

One	$
thing	N
I	O
would	V
watch	V
out	T
for	P
is	V
that	P
your	D
server	N
will	V
most	R
likely	R
get	V
hit	V
by	P
more	A
HTTP	N
requests	N
than	P
if	P
you	O
have	V
the	D
(	,
normal	A
)	,
full	A
page	N
HTTP	N
delivery	N
.	,
Let	V
me	O
explain	V
.	,
When	R
your	D
web	N
page	N
is	V
AJAX-enabled	^
,	,
your	D
clients	N
will	V
end	N
up	T
creating	V
more	A
HTTP	N
requests	N
for	P
(	,
say	V
)	,
form	N
filling	V
,	,
page-fragment	A
regeneration	N
etc	G
.	,
I've	L
seen	V
scenarios	N
where	R
developers	N
have	V
gone	V
AJAX-crazy	^
,	,
and	&
made	V
the	D
web	N
page	N
a	D
largely	R
dynamic	A
document	N
.	,
This	D
results	N
in	P
a	D
great	A
user	N
experience	N
(	,
if	P
done	V
well	R
)	,
,	,
but	&
every	D
request	N
results	N
in	P
a	D
server	N
hit	V
,	,
leading	V
to	P
scalability	N
and	&
latency	A
issues	N
.	,
Note	N
-	,
this	O
isn't	V
particular	A
to	P
DWR	^
,	,
but	&
is	V
an	D
AJAX	^
issue	N
.	,
I've	L
used	V
DWR	^
,	,
and	&
it	O
works	V
nicely	R
.	,
Unfortunately	R
,	,
I	O
found	V
that	P
it	O
worked	V
so	R
well	R
,	,
and	&
so	R
easily	R
,	,
that	D
everything	N
becomes	V
a	D
candidate	N
for	P
remoting	V
,	,
and	&
you	O
can	V
end	N
up	T
with	P
huge	A
numbers	N
of	P
small	A
requests	N
.	,

I	O
agree	V
with	P
this	D
answer	N
.	,
I	O
used	V
DWR	^
in	P
an	D
web-based	A
application	N
.	,
The	D
application	N
gives	V
a	D
great	A
user	N
experience	N
,	,
but	&
I	O
think	V
the	D
application	N
doesn't	V
work	V
fast	R
,	,
because	P
of	P
all	X
the	D
JavaScript	^
and	&
httprequest	R
.	,

I	O
worked	V
on	P
a	D
project	N
with	P
DWR	^
-	,
a	D
really	R
nice	A
tool	N
.	,
I'm	L
not	R
convinced	A
about	P
the	D
pace	N
of	P
development	N
though	P
.	,
They	O
did	V
post	N
on	P
the	D
development	N
log	V
that	P
they're	L
working	V
on	P
getting	V
3.0	$
out	P
the	D
door	N
,	,
but	&
the	D
last	A
stable	A
release	N
-	,
2.0	$
-	,
was	V
out	T
in	P
summer	N
2006	$
.	,
It's	L
a	D
bit	N
worrying	V
taken	V
from	P
a	D
support	N
perspective	N
-	,
bug	N
fixes	N
especially	R
.	,

Main	A
problem	N
I've	L
experienced	V
is	V
trying	V
to	P
script	N
a	D
load	N
test	N
on	P
a	D
system	N
where	R
the	D
main	A
bulk	N
of	P
the	D
work	N
is	V
done	V
via	P
DWR	^
calls	V
.	,
The	D
format	N
of	P
the	D
calls	N
is	V
difficult	A
to	P
replicate	V
when	O
compared	V
with	P
just	R
replying	V
a	D
bunch	N
of	P
urls	^
with	P
changing	V
parameters	N
.	,
Still	R
DWR	^
is	V
an	D
excellent	A
framework	N
and	&
makes	V
implementing	V
Javascript	^
->	^
Java	^
RPC	^
pretty	R
damn	A
easy	A
.	,

DWR	^
is	V
a	D
great	A
tool	N
when	R
your	D
site	N
has	V
a	D
lot	N
of	P
ajax	^
calls	V
.	,
Each	D
page	N
that	O
makes	V
dwr	^
rpc	^
calls	V
needs	V
to	P
include	V
:	,
a	D
)	,
an	D
interface	N
file	V
corresponding	V
to	P
the	D
calls	N
being	V
made	V
.	,
and	&
b	V
)	,
a	D
js	N
file	V
bundled	V
with	P
dwr	^
that	O
contains	V
the	D
dwr	N
engine	N
code	N
that	O
makes	V
these	O
calls	V
possible	R
.	,
for	P
e.g.	D
script	N
src=	N
"	,
/	,
dwr	E
/	,
engine.js	N
"	,
/	,
script	N
one	$
technique	N
that	O
is	V
frequently	R
used	V
while	P
optimizing	V
web	N
applications	N
is	V
to	P
use	V
the	D
browser	N
cache	N
as	P
much	A
as	P
possible	R
when	R
a	D
resource	N
(	,
like	P
a	D
js	S
file	N
)	,
has	V
not	R
changed	V
on	P
a	D
server	N
.	,
engine.js	L
is	V
something	N
that	O
will	V
never	R
change	V
unless	P
you	O
upgrade	V
your	D
dwr	N
to	P
a	D
newer	A
version	N
.	,
But	&
,	,
by	P
default	N
,	,
engine.js	L
is	V
not	R
a	D
static	A
file	N
served	V
by	P
your	D
webserver	N
.	,
its	L
bundled	V
as	P
part	N
of	P
the	D
dwr	N
tool	N
itsef	,
and	&
is	V
served	V
by	P
the	D
dwr	^
controller	N
/	,
servlet.this	O
doesnt	V
aid	N
client	N
side	N
caching	V
.	,
So	P
,	,
it	O
is	V
beneficial	A
to	P
save	V
engine.js	V
under	P
the	D
document	N
root	N
of	P
your	D
webserver	N
and	&
let	V
the	D
webserver	N
serve	V
it	O
as	P
a	D
static	A
file	N
.	,

More	A
about	P
caching	V
engine.js	N
on	P
DWR's	Z
site	N
:	,
http://directwebremoting.org/dwr/browser/engine/static.html	U

One	$
feature	N
missing	V
of	P
current	A
DWR	N
3.x	$
that	P
any	D
user	N
should	V
take	V
good	A
care	N
is	V
that	O
when	R
an	D
instance	N
of	P
a	D
bean	N
has	V
properties	N
of	P
NULL	D
value	N
,	,
those	D
properties	N
will	V
be	V
still	R
injected	V
to	P
the	D
JSON	^
and	&
these	D
redundant	A
data	N
DO	V
affect	V
the	D
performance	N
.	,
When	R
a	D
property	N
has	V
the	D
value	N
of	P
NULL	^
,	,
usually	R
it	O
should	V
not	R
be	V
sent	V
to	P
frontend	N
.	,
Details	N
of	P
problem	N
:	,
http://dwr.2114559.n2.nabble.com/Creating-Custom-bean-converter-td6178318.html	U

The	D
biggest	A
difference	N
among	P
other	A
solutions	N
to	P
transfer	N
objects	N
(	,
marshaling	V
)	,
is	V
object	N
references	N
.	,
For	P
instance	N
,	,
if	P
you	O
use	V
it	O
to	P
transfer	V
a	D
tree	N
:	,
A	^
|-B	^
|-C	^
in	P
a	D
list	N
{	,
A	^
,	,
B	G
,	,
C}	^
:	,
B.parent	^
=	^
A	^
C.parent	^
=	^
A	^
then	R
A	^
is	V
the	D
same	A
object	N
in	P
Javascrit	^
!	,
On	P
the	D
bad	A
side	N
,	,
if	P
you	O
have	V
complex	A
structures	N
with	P
circular	A
dependencies	N
and	&
lot	N
of	P
objects	N
:	,
A	^
-B	^
,	,
B	G
-C	G
,	,
C	G
-B	G
,	,
C	G
.	,
A	^
,...	,
it	O
could	V
crash	V
.	,
Anyway	R
,	,
I	O
use	V
it	O
in	P
a	D
real	A
project	N
used	V
by	P
many	A
hundreds	N
of	P
companies	N
in	P
production	N
to	P
transfer	N
thousands	N
of	P
objects	N
to	P
a	D
single	A
html	N
page	N
in	P
order	N
to	P
draw	V
a	D
complex	A
graph	N
and	&
it	O
works	V
nicely	R
with	P
a	D
good	A
performance	N
.	,

