Has	V
anyone	O
used	V
GWT	^
and	&
can	V
say	V
it	O
really	R
delivers	V
what	O
it	O
promises	V
?	,

I	O
am	V
a	D
long	A
time	N
Java	^
web	N
developer	N
and	&
as	R
most	A
web	N
developers	N
I	O
have	V
used	V
quite	R
a	D
lot	N
of	P
JavaScript	^
.	,
Even	R
though	P
I	O
don't	V
hate	V
JavaScript	^
as	R
many	A
other	A
Java	^
developers	N
,	,
I	O
am	V
still	R
aware	A
of	P
its	D
faults	N
.	,
GWT	O
is	V
a	D
way	N
to	P
write	V
javascript	O
using	V
java	N
.	,
Since	P
I	O
know	V
both	D
languages	N
for	P
a	D
long	A
time	N
I	O
am	V
pretty	R
skeptical	A
about	P
this	D
claim	N
.	,
I	O
mean	V
,	,
I	O
having	V
a	D
hard	A
time	N
believing	V
that	P
you	O
can	V
really	R
create	V
full	A
Java	^
dynamic	A
web	N
applications	N
with	P
a	D
rich	A
GUI	^
using	V
just	R
GWT	A
.	,
That	O
is	V
why	R
I	O
am	V
asking	V
here	R
if	P
anyone	O
had	V
the	D
chance	N
to	P
work	N
with	P
GWT	^
on	P
a	D
large	A
scale	N
project	N
.	,
If	P
so	R
,	,
I	O
would	V
really	R
like	R
to	P
hear	V
what	O
they	O
think	V
of	P
it	O
.	,

Why	R
the	D
close	A
?	,
This	D
looks	V
like	P
an	D
interesting	A
question	N
to	P
me	O
..	,

Some	D
people	N
have	V
the	D
bad	A
habit	N
of	P
clicking	N
'	,
close	A
'	,
if	P
they	O
just	R
don't	V
like	P
the	D
question	N
.	,
I	O
don't	V
think	V
this	D
is	V
subjetive	A
nor	&
argumentative	N
at	P
all	X

Did	V
you	O
end	V
up	T
using	V
GWT	^
?	,
Did	V
it	O
deliver	V
?	,

Hi	^
Dave	^
,	,
No	!
,	,
finally	R
I	O
decided	V
not	R
using	V
it	O
.	,
My	D
final	A
conclusion	N
was	V
that	D
GWT	N
seems	V
like	P
a	D
really	R
good	A
product	N
and	&
the	D
people	N
who	O
use	V
it	O
mostly	R
love	V
it	O
.	,
Nevertheless	R
,	,
I	O
feel	V
like	V
since	P
GWT	O
has	V
a	D
totally	R
different	A
way	N
of	P
doing	V
things	N
,	,
it	O
is	V
a	D
product	N
that	P
once	R
you	O
start	V
using	V
it	O
,	,
you	O
commit	V
for	P
life	N
.	,
And	&
that	O
is	V
something	V
I	O
really	R
stay	V
away	R
from	P
.	,
Thanks	N
for	P
asking	V
.	,

I've	L
looked	V
at	P
it	O
briefly	R
for	P
an	D
older	A
application	N
at	P
one	$
of	P
my	D
jobs	N
,	,
and	&
I	O
must	V
admit	V
that	P
it	O
was	V
very	R
impressive	A
.	,
All	X
the	D
code	N
was	V
written	V
in	P
Java	^
,	,
and	&
the	D
javascript	N
was	V
built	V
beautifully	R
.	,
It	O
had	V
AJAX	^
,	,
dynamic	A
pages	N
,	,
the	D
works	V
.	,
There	X
are	V
plugins	N
for	P
it	O
as	R
well	R
,	,
such	A
as	P
the	D
Ext	^
GWT	^
framework	N
.	,
It's	L
definitely	R
worth	V
looking	V
into	P
and	&
trying	V
out	T
,	,
but	&
you	O
may	V
find	V
that	P
the	D
development	N
cycle	N
doesn't	V
"	,
feel	V
"	,
right	R
,	,
so	P
you	O
might	V
opt	V
to	P
use	V
regular	A
JavaScript	N
.	,

good	A
point	N
about	P
the	D
dev	N
environment	N
"	,
feel	V
.	,
"	,
GWT	O
is	V
definitely	R
only	A
for	P
those	O
that	O
enjoy	V
/	,
tolerate	V
the	D
constraints	N
of	P
a	D
language	N
like	P
Java	^
.	,

As	R
with	P
any	D
tool	N
,	,
it	O
needs	V
to	P
be	V
used	V
properly	R
.	,
One	O
can	V
wield	V
a	D
hammer	N
skillfully	R
and	&
build	V
something	R
nice	A
,	,
or	&
just	R
wave	V
it	O
around	P
at	O
stuff	N
and	&
do	V
more	A
harm	N
than	P
good	A
.	,
Google	^
Wave	^
,	,
I	O
think	V
,	,
has	V
become	V
the	D
prototype	N
of	P
"	,
what's	L
possible	A
"	,
with	P
GWT	^
.	,
It's	L
still	R
rather	R
hard	R
to	P
find	V
good	A
GWT	N
design	N
patterns	N
because	P
the	D
technology	N
is	V
too	R
new	A
,	,
so	P
that	O
can	V
harm	V
efforts	N
to	P
develop	V
a	D
very	A
rich	A
,	,
large-scale	A
web	N
app	N
in	P
GWT	^
.	,
Before	P
beginning	V
such	X
a	D
project	N
,	,
I	O
would	V
recommend	V
looking	V
at	P
examples	N
of	P
the	D
model-view-presenter	N
(	,
MVP	N
)	,
pattern	N
and	&
be	V
sure	A
to	P
use	V
it	O
,	,
or	&
something	N
like	P
it	O
,	,
as	P
a	D
foundation	N
for	P
the	D
control	N
flow	N
of	P
your	D
web	N
app	N
.	,
One	$
nice	A
thing	N
about	P
GWT	^
,	,
and	&
writing	V
your	D
code	N
in	P
Java	^
,	,
is	V
that	P
the	D
high	A
degree	N
of	P
abstraction	N
and	&
decoupling	V
necessary	A
for	P
a	D
clean	A
MVP	N
implementation	N
is	V
pretty	R
easy	A
(	,
thanks	N
to	P
the	D
compiler	N
)	,
.	,

I've	L
written	V
fairly	R
large	A
sized	A
app	N
in	P
GWT	^
,	,
and	&
i	O
have	V
to	P
say	V
that	D
i'm	G
even	R
more	R
impressed	A
by	P
GWT	^
than	P
i	O
was	V
when	R
the	D
project	N
started	V
.	,
My	D
general	N
'	,
feel	V
'	,
of	P
the	D
platform	N
is	V
that	D
things	N
are	V
really	R
well	R
thought	V
out	T
,	,
and	&
they	O
don't	V
do	V
things	N
unless	P
they	O
can	V
do	V
it	O
well	R
,	,
and	&
can	V
do	V
it	O
well	R
on	P
all	D
browsers	N
(	,
IE	^
users	N
are	V
still	R
your	D
users	N
!	,
)	,
Now	R
,	,
keep	V
in	P
mind	N
that	P
what	O
GWT	V
really	R
excels	V
at	P
is	V
the	D
creation	N
of	P
large	A
,	,
highly	R
dynamic	A
single-page	N
style	N
webapps	N
.	,
If	P
your	D
goal	N
is	V
to	P
enhance	V
an	D
otherwise	R
static	A
page	N
with	P
some	D
javascript	N
effects	N
,	,
than	P
GWT	O
is	V
massive	A
overkill	N
(	,
gquery	N
may	V
change	V
this	D
,	,
but	&
i	O
don't	V
have	V
experience	N
with	P
gquery	^
)	,
Some	O
features	V
I	O
enjoy	V
include	V
:	,
The	D
ability	N
to	P
share	V
code	N
between	P
the	D
server	N
side	N
and	&
the	D
client	N
side	N
.	,
(	,
if	P
your	D
server	N
side	N
is	V
written	V
in	P
java	N
,	,
of	P
course	N
)	,
.	,
I	O
didn't	V
expect	V
to	P
use	V
this	D
a	D
lot	N
of	P
this	D
at	P
first	R
,	,
but	&
in	P
practice	N
,	,
it	O
can	V
really	R
save	V
a	D
lot	N
of	P
code	N
duplication	N
.	,
However	R
,	,
i	O
find	V
that	O
in	P
general	^
,	,
this	D
only	A
works	V
with	P
code	N
that	O
has	V
been	V
written	V
with	P
GWT	^
in	P
mind	N
-	,
using	V
code	N
that	O
was	V
not	R
written	V
with	P
GWT	^
in	P
mind	V
often	R
doesn't	V
work	V
well	R
.	,
This	D
is	V
because	P
GWT	^
only	R
has	V
a	D
subset	N
of	P
the	D
classes	N
in	P
the	D
JDK	N
,	,
and	&
in	P
javascript	^
,	,
you	O
have	V
to	P
care	V
about	P
performance	N
a	D
lot	N
more	R
than	P
you	O
do	V
on	P
the	D
server	N
side	N
.	,
It	O
aims	V
to	P
achieve	V
the	D
fastest	A
javascript	N
,	,
faster	R
than	P
you	O
would	V
ever	R
write	V
by	P
hand	N
(	,
because	P
if	P
you	O
did	V
write	V
it	O
by	P
hand	N
,	,
the	D
code	N
would	V
be	V
unmaintainable	^
)	,
.	,
The	D
unfortunate	A
reality	N
is	V
that	P
the	D
browsers	N
that	P
a	D
lot	N
of	P
people	N
use	V
have	V
incredibly	R
slow	A
javascript	N
engines	N
,	,
so	P
the	D
performance	N
of	P
your	D
javascript	N
code	N
matters	V
a	D
lot	N
.	,
Gwt's	L
compiler	N
is	V
a	D
real	A
optimizing	V
compiler	N
-	,
it	O
will	V
inline	A
methods	N
,	,
intern	N
all	X
your	D
strings	N
.	,
devirtualize	V
your	D
method	N
calls	V
when	R
possible	A
,	,
etc	G
.	,
Because	P
you	O
are	V
compiling	V
for	P
each	D
browser	N
and	&
locale	N
,	,
the	D
compiler	N
can	V
also	R
inline	A
browser-specific	N
and	&
locale-specific	A
code	N
.	,
This	D
Google	^
I	E
/	E
O	^
presentation	N
has	V
some	D
benchmarks	N
a	D
few	A
slides	N
in	P
.	,
It	O
will	V
also	R
automatically	R
sprite	P
your	D
images	N
together	R
to	P
minimize	V
the	D
number	N
of	P
http	U
requests	N
needed	V
,	,
again	R
improving	V
the	D
speed	N
of	P
your	D
site	N
.	,
GWT	^
2.0	$
will	V
allow	V
you	O
to	P
combine	V
together	R
arbitrary	A
files	N
.	,
most	R
of	P
the	D
files	N
created	V
by	P
gwt	O
have	V
a	D
strong	A
hash	N
as	P
their	D
filename	N
,	,
which	O
lets	V
you	O
set	V
the	D
files	N
to	P
be	V
cached	V
forever	R
,	,
but	&
not	R
worry	V
about	P
people	N
having	V
old	A
versions	N
if	P
the	D
file	N
changes	V
The	D
code	N
splitting	V
in	P
GWT	^
2.0	$
is	V
very	R
impressive	A
and	&
would	V
be	V
very	R
difficult	A
to	P
do	V
by	P
hand	N
.	,
As	P
the	D
size	N
of	P
your	D
application	N
grows	V
,	,
dealing	V
with	P
the	D
size	N
of	P
your	D
javascript	N
matters	V
more	A
and	&
more	R
,	,
and	&
you	O
need	V
to	P
be	V
able	A
to	P
split	V
it	O
into	P
chunks	N
You	O
are	V
coding	N
in	P
a	D
statically	N
typed	V
language	N
.	,
I	O
know	V
some	D
people	N
prefer	V
dynamic	A
typing	N
,	,
but	&
i	O
like	V
to	P
compare	V
this	D
debate	N
to	P
the	D
emacs	N
vs	P
vi	^
debate	N
-	,
there	X
are	V
a	D
lot	N
of	P
smart	A
people	N
on	P
both	D
camps	N
,	,
and	&
arguing	V
on	P
the	D
internet	N
isn't	V
going	V
to	P
change	V
anyone's	S
preference	N
You	O
get	V
to	P
use	V
a	D
lot	N
of	P
the	D
great	A
tools	N
that	P
exist	V
in	P
the	D
java	^
ecosystem	^
,	,
which	O
are	V
generally	R
a	D
lot	N
more	R
mature	A
than	P
the	D
equivilant	N
javascript	N
tools	N
.	,
-	G
junit	G
,	,
java	^
IDEs	^
,	,
java	^
debuggers	^
,	,
refactoring	V
,	,
etc	G
.	,

Oh	!
,	,
and	&
i	O
guess	V
the	D
biggest	A
downsides	N
is	V
:	,
-	,
compile	V
time	N
-	,
hosted	V
mode	N
is	V
great	A
,	,
but	&
you	O
can't	V
currently	R
use	V
it	O
for	P
the	D
system	N
non-default	G
browser	N
-	,
GWT	~
2.0	$
and	&
out	R
of	P
process	N
hosted	V
mode	N
should	V
fix	V
this	D
though	P
.	,
-	,
The	^
java	N
language	N
can	V
be	V
verbose	V
at	P
times	^
,	,
although	P
that	O
is	V
far	R
from	P
a	D
showstopper	N
.	,
(	,
gwt	V
for	P
scala	^
would	V
be	V
awfully	R
nice	A
:)	E
)	E

If	P
you	O
have	V
familiarity	N
with	P
both	D
JavaScript	^
and	&
Java	^
,	,
you	O
really	R
are	V
perfectly	R
suited	V
to	P
get	V
the	D
most	A
out	N
of	P
GWT	^
.	,
What	D
many	A
people	N
do	V
not	R
realize	V
is	V
that	D
GWT	N
is	V
pretty	R
well	R
layered	A
and	&
that	P
you	O
can	V
really	R
decide	V
which	D
of	P
those	O
levels	V
you	O
want	V
to	P
work	V
at	P
.	,
For	P
instance	N
,	,
I	O
sometimes	R
write	V
directly	R
against	P
the	D
DOM	N
library	N
for	P
projects	N
.	,
Thats	L
a	D
lot	N
like	P
writing	V
JavaScript	A
code	N
except	V
you're	L
able	A
to	P
use	V
an	D
IDE	^
properly	R
and	&
get	V
the	D
power	N
of	P
a	D
compiler	N
.	,
From	P
the	D
compiler	N
I	O
get	V
static	A
type	N
checking	V
,	,
lots	N
of	P
good	A
compiler	^
optimizations	^
,	,
and	&
(	,
actually	R
my	D
favorite	N
for	P
maintaining	V
code	N
)	,
debug	N
mode	N
assertions	N
.	,
Nobody	^
ever	R
really	R
makes	V
much	R
of	P
the	D
ability	N
to	P
do	V
assertions	N
,	,
but	&
it's	L
so	R
nice	A
to	P
be	V
able	A
to	P
compile	V
a	D
debug	N
mode	N
that	O
does	V
expensive	A
checks	N
to	P
tease	V
out	T
bugs	N
and	&
then	R
turn	V
off	T
the	D
debug	N
mode	N
and	&
have	V
the	D
code	N
just	R
evaporate	V
.	,
(	,
Not	R
just	R
the	D
assert	V
statements	N
go	V
away	R
,	,
but	&
all	X
the	D
code	N
reachable	N
from	P
the	D
asserts	V
also	R
gets	V
compiled	V
out	T
)	,
.	,
Other	^
times	^
,	,
I	O
write	V
code	N
against	P
GWT's	^
UI	^
library	N
.	,
That	D
code	N
looks	V
a	D
bit	N
like	P
swing	V
or	&
SWT	A
code	N
so	P
it	O
is	V
most	R
comfortable	A
to	P
pure	A
java	N
developers	N
.	,
Working	V
at	P
this	D
level	N
,	,
you	O
don't	V
have	V
to	P
worry	V
as	R
much	A
about	P
the	D
DOM	N
and	&
it	O
is	V
usually	R
possible	A
to	P
construct	V
an	D
application	N
without	P
writing	V
any	D
JavaScript	N
.	,
You	O
do	V
occasionally	R
run	V
into	P
a	D
bug	N
where	R
something	N
doesn't	V
work	V
consistently	R
on	P
a	D
particular	A
browser	N
.	,
The	^
GWT	^
folks	N
consider	V
those	D
bugs	N
.	,
You	O
can	V
kind	N
of	P
pick	V
what	D
level	N
of	P
abstraction	N
you	O
want	V
to	P
work	V
at	P
.	,
There	X
are	V
tradeoffs	N
at	P
each	D
level	N
,	,
but	&
GWT	V
should	V
support	V
them	O
.	,
Also	R
,	,
full	A
disclosure	N
:	,
I'm	L
the	D
dude	N
in	P
the	D
video	N
that	P
Chi	^
linked	V
above	P
,	,
so	P
you	O
might	V
say	V
I'm	L
pretty	R
attached	V
to	P
GWT	^
.	,

I	O
have	V
created	V
two	$
quite	R
substantial	A
GWT	N
applications	N
in	P
my	D
three	$
years	N
at	P
Google	^
.	,
It	O
delivers	V
what	O
it	O
promises	V
-	,
my	D
apps	N
were	V
far	R
more	R
interactive	A
and	&
far	R
more	A
ajax-y	N
than	P
my	D
knowledge	N
of	P
Javascript	^
and	&
my	D
Javascript	N
tooling	V
would	V
have	V
let	V
me	O
produce	V
using	V
other	A
tools	N
.	,
I	O
also	R
found	V
the	D
apps	N
more	R
interactive	A
and	&
more	A
fun	N
than	P
the	D
purely	R
server-side	A
alternatives	N
I	O
had	V
used	V
before	P
moving	V
to	P
it	O
.	,
It	O
is	V
not	R
free	A
of	P
warts	N
,	,
but	&
it	O
is	V
a	D
very	R
productive	A
environment	N
to	P
do	V
the	D
kinds	N
of	P
apps	V
I	O
do	V
.	,
And	&
do	V
watch	V
Kelly's	Z
presentation	N
.	,
It	O
,	,
and	&
some	D
of	P
the	D
others	N
from	P
I	O
/	,
O	^
,	,
give	V
a	D
really	R
clear	A
idea	N
of	P
what	D
GWT	V
can	V
do	V
.	,
You	O
will	V
pretty	R
quickly	R
get	V
a	D
good	A
idea	N
of	P
whether	P
it	O
is	V
the	D
right	A
tool	N
for	P
the	D
task	N
you	O
are	V
envisioning	V
.	,

I	O
have	V
been	V
developing	V
a	D
green	A
field	N
application	N
on	P
GWT	^
for	P
a	D
year	N
and	&
it	O
has	V
been	V
surprisingly	R
pleasant	A
.	,
The	D
subset	N
of	P
Java	^
used	V
in	P
GWT	O
causes	V
some	D
headaches	N
but	&
nothing	R
major	A
after	P
all	X
.	,
I	O
didn't	V
have	V
too	R
much	A
JavaScript	N
knowledge	N
when	R
I	O
joined	V
the	D
project	N
but	&
I	O
think	V
that	O
was	V
not	R
a	D
problem	N
.	,
The	^
common	^
GWT	^
related	A
problems	N
I	O
have	V
encountered	V
had	V
usually	R
something	N
to	P
do	V
with	P
Ext	^
GWT	^
/	,
GXT	^
framework	N
or	&
FCKEditor	N
integration	N
.	,

Simply	^
GWT	^
rocks	^
google	^
is	V
making	V
"	,
google	^
wave	^
"	,
fully	R
on	P
GWT	^
.	,

I	O
think	V
GWT	O
does	V
what	O
it	O
says	V
on	P
the	D
tin	N
...	,
Top	A
5	$
Reasons	N
for	P
choosing	V
GWT	^
:	,
Tapestry	^
can	V
be	V
overly	R
complicated	A
and	&
the	D
learning	V
curve	N
is	V
pretty	R
steep	A
for	P
new	A
developers	N
who	O
are	V
starting	V
out	T
\	O
joining	V
the	D
team	N
.	,
Esp	!
.	,
on	P
larger	A
projects	N
.	,
I	O
found	V
that	P
I	O
could	V
develop	V
"	,
richer	A
"	,
applications	N
using	V
GWT	O
seeing	V
that	P
my	D
strength	N
is	V
Java	^
not	R
Javascript	A
.	,
In	P
order	N
for	P
me	O
to	P
implement	V
similar	A
functionality	N
using	V
Tapestry	^
I	O
would	V
have	V
to	P
hand	N
write	V
Javascript	V
which	O
would	V
later	R
become	V
a	D
maintenance	N
nightmare	N
.	,
Browser	N
compatibility	N
,	,
I	O
would	V
spend	V
large	A
amounts	N
of	P
time	N
trying	V
to	P
get	V
my	D
hand	N
written	V
Javascirpt	^
to	P
work	N
on	P
all	X
the	D
different	A
browsers	N
(	,
like	V
I	O
said	V
Javascript	^
is	V
not	R
my	D
strength	N
:-)	E
The	^
GWT	^
Compiler	^
hides	V
me	O
from	P
this	D
which	D
results	N
in	P
me	O
spending	V
more	A
time	N
writing	V
features	V
.	,
Back	R
button	N
blues	N
,	,
GWT's	Z
History	^
listener	N
is	V
handles	V
the	D
browsers	S
back	N
button	N
in	P
comparison	N
to	P
Tapestry	^
.	,
GWT	O
has	V
a	D
smaller	A
footprint	N
because	P
only	A
the	D
data	N
is	V
being	V
sent	V
across	P
the	D
wire	N
apposed	V
to	P
refreshing	V
the	D
entire	A
page	N
.	,
The	D
list	N
goes	V
on	P
but	&
all	R
in	P
all	X
,	,
I	O
am	V
very	R
happy	A
to	P
have	V
made	V
the	D
change	N
and	&
have	V
not	R
looked	V
back	R
since	P
.	,

I	O
didn't	V
know	V
much	A
Javascript	N
when	R
I	O
tried	V
to	P
create	V
my	D
website	N
.	,
In	P
fact	N
,	,
that	O
is	V
why	R
I	O
had	V
been	V
putting	V
off	T
creating	V
the	D
website	N
.	,
So	P
for	P
me	O
,	,
GWT	O
made	V
a	D
huge	A
difference	N
as	P
it	O
enabled	V
me	O
to	P
create	V
a	D
dynamic	A
,	,
cross-browser	A
website	N
that	P
I	O
definitely	R
would	V
not	R
have	V
been	V
able	A
to	P
create	V
without	P
putting	V
in	P
significant	A
effort	N
into	P
learning	V
Javascript	^
.	,

I've	L
done	V
a	D
few	A
projects	N
over	P
a	D
few	A
years	N
and	&
it	O
is	V
fantastic	A
.	,
Going	V
back	R
to	P
JS	^
/	^
JSP	^
/	,
request	N
based	V
framework	N
is	V
really	R
horrible	A
.	,
Don't	V
want	V
to	P
give	V
up	T
compile	V
time	N
checks	V
,	,
unit	N
tests	N
in	P
my	D
IDE	^
,	,
IDE	^
refactoring	N
etc	G
,	,
sharing	V
code	N
between	P
different	A
tiers	N
,	,
solid	A
set	N
of	P
widgets	N
,	,
incredibly	R
well	R
thought	V
out	T
framework	N
.	,
Can	V
do	V
so	R
much	R
more	R
so	R
much	R
faster	R
in	P
a	D
maintainable	A
way	N
.	,

There	X
is	V
a	D
steep	N
learning	V
curve	N
,	,
but	&
for	P
really	R
dynamic	A
ui	N
applications	N
,	,
there	X
is	V
just	R
no	D
way	N
that	P
you	O
can	V
build	V
from	P
hand	N
in	P
javascript	V
as	R
efficiently	R
.	,
What	O
I	O
mean	V
in	P
particular	^
is	V
for	P
instance	N
an	D
application	N
frontend	N
for	P
a	D
service	N
where	R
all	X
the	D
searchable	A
fields	N
and	&
result	N
type	N
s	G
and	&
length	N
were	V
completely	R
unknown	A
.	,
For	P
this	D
type	N
of	P
thing	N
,	,
a	D
dynamic	A
runtime	N
defined	A
ui	N
,	,
there	X
is	V
nothing	V
better	R
than	P
GWT	^
in	P
my	D
opinion	N
.	,
The	^
drawbacks	^
are	V
the	D
steep	N
learning	V
curve	N
(	,
especially	R
for	P
non-swing	V
Java	^
programmers	N
,	,
traditional	A
request	N
/	,
response	N
servlet	N
api	^
guys	N
and	&
gals	N
)	,
and	&
getting	V
cornered	V
into	P
GWT	^
once	R
you	O
make	V
that	D
decision	N
.	,

