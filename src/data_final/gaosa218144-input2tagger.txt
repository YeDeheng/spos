Wicket	N
+	N
Javascript	N

I'm	N
wrapping	N
up	N
a	N
Javascript	N
widget	N
in	N
a	N
Wicket	N
component	N
.	N
I	N
want	N
to	N
let	N
the	N
JS	N
side	N
talk	N
to	N
the	N
component	N
.	N
What	N
I've	N
got	N
so	N
far	N
:	N
Component	N
in	N
question	N
goes	N
like	N
in	N
constructor	N
and	N
then	N
,	N
later	N
on	N
,	N
puts	N
something	N
like	N
into	N
the	N
JS	N
.	N
where	N
GridAjaxBehavior	N
extends	N
AbstractDefaultAjaxBehavior	N
.	N
I	N
want	N
GridAjaxBehavior	N
to	N
spit	N
back	N
some	N
XML	N
when	N
the	N
JS	N
calls	N
it	N
.	N
Am	N
I	N
doing	N
this	N
the	N
right	N
way	N
?	N
What	N
should	N
GridAjaxBehaviour	N
do	N
to	N
spit	N
back	N
the	N
XML	N
?	N
Thanks	N

FYI	N
,	N
there's	N
an	N
error	N
in	N
your	N
javascript	N
emit	N
.	N
You're	N
missing	N
the	N
right	N
hand	N
paren	N
and	N
semicolon	N
,	N
but	N
you're	N
also	N
missing	N
quotes	N
around	N
the	N
supplied	N
string	N
.	N
...	N
new	N
talker	N
(	N
\	N
""	N
+	N
this.talker.getCallbackURL()	N
+	N
"	N
\	N
")	N
;	N
"	N
;	N
or	N
something	N
like	N
that	N
.	N

PSA	N
:	N
Wicket	N
~=	N
a	N
Java	N
Framework	N
.	N
http://wicket.apache.org/introduction.html	N

please	N
show	N
a	N
link	N
to	N
GridAjaxBehavior	N
-	N
i	N
know	N
wicket	N
a	N
bit	N
,	N
but	N
GridAjaxBehavior	N
is	N
new	N
to	N
me	N
.	N
is	N
this	N
a	N
custom	N
developed	N
behavior	N

I	N
don't	N
really	N
know	N
what	N
Wicket	N
is	N
or	N
what	N
it	N
does	N
,	N
but	N
there	N
is	N
a	N
minor	N
bug	N
in	N
your	N
code	N
(	N
as	N
it	N
appears	N
)	N
.	N
This	N
:	N
"	N
var	N
MyGridTalker	N
=	N
new	N
talker	N
(	N
"	N
+	N
this.talker.getCallbackUrl()	N
;	N
You	N
seem	N
to	N
be	N
missing	N
your	N
end	N
parens	N
:	N
"	N
var	N
MyGridTalker	N
=	N
new	N
talker	N
(	N
"	N
+	N
this.talker.getCallbackUrl()	N
+	N
")"	N
;	N
Anyway	N
,	N
not	N
a	N
big	N
deal	N
,	N
but	N
didn't	N
know	N
if	N
it	N
was	N
intentional	N
.	N

Spit	N
back	N
some	N
XML	N
for	N
what	N
?	N
Presumably	N
to	N
update	N
the	N
model	N
or	N
the	N
view	N
,	N
yes	N
?	N
The	N
strength	N
of	N
Wicket	N
is	N
that	N
you	N
don't	N
have	N
to	N
worry	N
about	N
the	N
rendered	N
HTML	N
.	N
In	N
Model-View-Controller	N
terms	N
,	N
you	N
set	N
up	N
the	N
Controller	N
to	N
correctly	N
modify	N
the	N
Model	N
,	N
and	N
Wicket	N
takes	N
care	N
of	N
the	N
View	N
.	N
The	N
separation	N
is	N
not	N
entirely	N
clear	N
:	N
in	N
fact	N
you	N
can	N
show	N
/	N
hide	N
view	N
components	N
,	N
or	N
change	N
then	N
,	N
and	N
that	N
can	N
be	N
seen	N
as	N
altering	N
the	N
View	N
.	N
But	N
what	N
you	N
generally	N
don't	N
have	N
to	N
do	N
is	N
directly	N
manage	N
the	N
browser	N
or	N
javascript	N
.	N
Wicket	N
takes	N
care	N
of	N
that	N
,	N
if	N
you	N
take	N
care	N
of	N
making	N
your	N
changes	N
in	N
the	N
Java	N
code	N
.	N
In	N
Wicket	N
,	N
the	N
Ajax	N
will	N
call	N
a	N
method	N
on	N
your	N
AjaxBehavior	N
with	N
an	N
AjaxRequestTarget	N
target	N
.	N
In	N
that	N
method	N
(	N
or	N
in	N
methods	N
called	N
from	N
it	N
)	N
,	N
you	N
do	N
whatever	N
you	N
need	N
to	N
do	N
,	N
updating	N
models	N
or	N
views	N
,	N
and	N
then	N
you	N
add	N
to	N
the	N
target	N
any	N
view	N
component	N
that	N
that	N
has	N
changed	N
.	N
Wicket	N
takes	N
care	N
of	N
updating	N
the	N
browser	N
.	N
Here's	N
an	N
example	N
.	N
It's	N
taken	N
from	N
some	N
code	N
I	N
did	N
,	N
but	N
heavily	N
altered	N
just	N
to	N
make	N
explication	N
clearer	N
.	N
The	N
idea	N
is	N
simple	N
:	N
"	N
chained	N
"	N
dropdown	N
choices	N
,	N
where	N
the	N
options	N
in	N
the	N
child	N
change	N
when	N
the	N
select	N
option	N
in	N
the	N
parent	N
changes	N
,	N
as	N
in	N
the	N
series	N
of	N
[	N
State	N
]	N
[	N
County	N
]	N
[	N
District]	N
.	N
(	N
In	N
the	N
actual	N
class	N
,	N
the	N
Model	N
change	N
is	N
passed	N
to	N
the	N
child	N
,	N
which	N
decides	N
for	N
itself	N
if	N
it	N
has	N
changed	N
,	N
and	N
adds	N
itself	N
to	N
the	N
target	N
if	N
it	N
has	N
,	N
then	N
passes	N
the	N
target	N
to	N
its	N
child	N
.	N
I've	N
removed	N
most	N
of	N
that	N
to	N
make	N
a	N
clearer	N
example	N
.	N
)	N
Here's	N
the	N
ctor	N
,	N
which	N
just	N
adds	N
to	N
itself	N
an	N
anonymous	N
subclass	N
of	N
an	N
AjaxBehavior	N
:	N
We	N
could	N
also	N
have	N
hidden	N
or	N
un-hidden	N
components	N
,	N
or	N
added	N
behaviors	N
like	N
CSS	N
styles	N
,	N
or	N
even	N
swapped	N
one	N
Panel	N
for	N
another	N
.	N
As	N
long	N
as	N
for	N
each	N
changed	N
component	N
we	N
:	N
1	N
)	N
called	N
setOutputMarkupId	N
(	N
true	N
);	N
so	N
that	N
the	N
javascript	N
can	N
find	N
it	N
,	N
and	N
2	N
)	N
added	N
it	N
to	N
the	N
AjaxRequestTarget	N
Note	N
that	N
different	N
types	N
(	N
subclases	N
)	N
of	N
Ajax	N
Behavior	N
have	N
different	N
callback	N
functions	N
,	N
so	N
be	N
sure	N
you're	N
overriding	N
the	N
right	N
one	N
(	N
add	N
an	N
@Override	N
annotation	N
so	N
the	N
compiler	N
can	N
complain	N
if	N
you	N
got	N
the	N
name	N
wrong	N
)	N
.	N
But	N
again	N
,	N
the	N
basic	N
wicket	N
idea	N
is	N
that	N
instead	N
of	N
sending	N
raw	N
data	N
for	N
the	N
client	N
to	N
parse	N
and	N
act	N
on	N
,	N
you	N
update	N
your	N
model	N
and	N
view	N
,	N
and	N
tell	N
Wicket	N
to	N
re-render	N
what	N
you've	N
changed	N
,	N
by	N
adding	N
the	N
chnaged	N
components	N
to	N
the	N
target	N
.	N
The	N
only	N
reason	N
I	N
can	N
think	N
of	N
to	N
send	N
straight	N
XML	N
would	N
to	N
be	N
to	N
feed	N
it	N
to	N
non-Wicket	N
javascript	N
.	N
Let	N
me	N
know	N
if	N
that's	N
your	N
aim	N
,	N
and	N
I	N
completely	N
missed	N
the	N
point	N
.	N
;)	N

