Java	N
<	N
->	N
Javascript	N
for	N
non-Applets	N
?	N

I'm	N
working	N
with	N
an	N
existing	N
Java	N
codebase	N
which	N
,	N
while	N
it	N
can	N
be	N
invoked	N
from	N
an	N
HTML	N
page	N
using	N
an	N
APPLET	N
tag	N
,	N
does	N
not	N
actually	N
subclass	N
the	N
Applet	N
class	N
.	N
The	N
same	N
jars	N
are	N
also	N
used	N
in	N
a	N
non-browser	N
context	N
,	N
so	N
they	N
did	N
not	N
subclass	N
Applet	N
.	N
Now	N
I	N
need	N
to	N
communicate	N
some	N
values	N
from	N
Java	N
back	N
to	N
the	N
Javascript	N
of	N
the	N
invoking	N
page	N
.	N
Normally	N
one	N
would	N
do	N
this	N
using	N
JSObject	N
,	N
but	N
so	N
far	N
as	N
I	N
can	N
one	N
has	N
to	N
use	N
JSObject.getWindow	N
which	N
only	N
works	N
for	N
subclasses	N
of	N
Applet	N
.	N
Is	N
there	N
either	N
:	N
a	N
way	N
to	N
use	N
JSObject	N
from	N
something	N
which	N
isn't	N
an	N
Applet	N
subclass	N
?	N
some	N
other	N
mechanism	N
to	N
communicate	N
back	N
to	N
the	N
Javascript	N
of	N
the	N
invoking	N
page	N
?	N

Call	N
JSObject.getWindow	N
(	N
this	N
)	N
in	N
the	N
applet	N
.	N
Then	N
pass	N
the	N
JSObject	N
into	N
the	N
code	N
that	N
needs	N
it	N
in	N
the	N
usual	N
fashion	N
.	N

I	N
think	N
you're	N
actually	N
going	N
to	N
need	N
to	N
implement	N
an	N
applet	N
in	N
a	N
jar	N
file	N
to	N
handle	N
the	N
communication	N
between	N
your	N
code	N
and	N
the	N
browser	N
itself	N
.	N
Perhaps	N
just	N
use	N
the	N
non-applet	N
jar	N
as	N
a	N
class	N
lib	N
and	N
make	N
the	N
applet	N
jar	N
a	N
simple	N
wrapper	N
that	N
proxies	N
your	N
calls	N
between	N
the	N
browser	N
and	N
the	N
Java	N
code	N
.	N

What's	N
wrong	N
with	N
returning	N
a	N
value	N
?	N
From	N
Javascript	N
You	N
can	N
access	N
the	N
Java-object	N
by	N
using	N
getElementById	N
(	N
"	N
id-of-embed-tag	N
")	N
.	N
Then	N
you	N
can	N
invoke	N
any	N
public	N
method	N
on	N
that	N
object	N
.	N
The	N
Java	N
object	N
returned	N
by	N
that	N
method	N
will	N
be	N
available	N
to	N
your	N
Javascript	N
code	N
.	N

Thats	N
an	N
approach	N
I	N
had	N
not	N
considered	N
.	N
I'd	N
end	N
up	N
polling	N
from	N
the	N
Javascript	N
until	N
something	N
changes	N
,	N
but	N
that	N
might	N
work	N
.	N

