Write	V
a	D
Servlet	N
that	P
Talks	^
to	P
JMS	^
(	,
ActiveMQ	N
)	,
and	&
OnMessage	N
Update	N
the	D
Site	N

I	O
am	V
building	V
a	D
site	N
that	P
uses	V
a	D
simple	A
AJAX	^
Servlet	N
to	P
talk	V
JMS	^
(	,
ActiveMQ	N
)	,
and	&
when	R
a	D
message	N
arrives	V
from	P
the	D
topic	N
to	P
update	V
the	D
site	N
.	,
I	O
have	V
Javascript	V
that	O
creates	V
an	D
XMLHttpRequest	N
for	P
data	N
.	,
The	D
Servlet	N
processes	V
the	D
Get	V
Request	^
and	&
sends	V
back	T
JSON	^
.	,
However	R
I	O
have	V
no	D
idea	N
how	R
to	P
connect	V
my	D
Servlet	N
into	P
my	D
ActiveMQ	N
Message	N
Broker	^
.	,
It	O
just	R
sends	V
back	R
dummy	A
data	N
right	R
now	R
.	,
I	O
am	V
thinking	V
the	D
Servelt	N
should	V
implement	V
the	D
messagelistener	N
.	,
Then	R
onMessage	O
send	V
data	N
to	P
the	D
JavaScript	N
page	N
.	,
But	&
I'm	L
not	R
sure	R
how	R
to	P
do	V
this	D
.	,

You	O
probably	R
need	V
to	P
get	V
a	D
JMS	N
connection	N
from	P
JNDI	^
,	,
like	P
this	D
:	,

Okay	A
...	,
this	O
is	V
a	D
good	A
way	N
to	P
connect	V
to	P
my	D
Topic	N
,	,
thanks	!
.	,
I	O
already	R
have	A
code	N
like	P
this	D
is	V
another	D
Java	^
Client	^
.	,
But	&
I	O
want	V
the	D
Servelt	N
to	P
implement	V
the	D
messagelistener	N
.	,
Then	R
onMessage	O
send	V
data	N
to	P
the	D
Javascript	N
page	N
.	,

The	D
problem	N
with	P
having	V
a	D
servlet	N
implement	V
MessageListener	N
is	V
that	D
servlets	N
are	V
synchronous	A
and	&
MessageListeners	^
are	V
asynchronous	A
.	,
Instead	R
you	O
should	V
create	V
some	D
other	A
object	N
to	P
act	V
as	P
the	D
MessageListener	N
and	&
update	V
some	D
state	N
somewhere	R
(	,
possibly	R
a	D
database	N
or	&
a	D
JMX	^
MBean	^
or	&
a	D
Stateful	^
Session	N
EJB	^
)	,
when	O
messages	N
come	V
in	T
.	,
Then	R
the	D
servlet	N
can	V
query	N
that	D
state	N
to	P
see	V
if	P
there's	S
data	N
to	P
report	N
back	N
to	P
the	D
client	N
,	,
and	&
your	D
web	N
page	N
can	V
periodically	R
ping	V
the	D
servlet	N
to	P
ask	V
for	P
fresh	A
data	N
.	,

Thanks	N
jodonnell	^
..	,
I	O
have	V
never	R
wrote	V
a	D
JMX	^
MBean	^
or	^
Stateful	^
Session	N
EJB	^
but	&
after	P
a	D
quick	^
google	^
search	V
I	O
think	V
this	D
is	V
the	D
right	A
path	N
to	P
look	V
down	T
.	,
Thanks	N
for	P
the	D
help	N
.	,

Have	V
you	O
tried	V
reading	V
the	D
answers	N
for	P
this	D
question	N
which	D
links	N
to	P
the	D
ActiveMQ	^
Ajax	^
support	N
.	,
Basically	R
ActiveMQ	O
has	V
native	A
support	N
for	P
Ajax	^
so	P
you	O
can	V
use	V
its	L
JavaScript	A
library	N
to	P
directly	R
subscribe	V
from	P
an	D
ActiveMQ	N
topic	N
.	,
Also	R
see	V
the	D
ActiveMQ	N
web	N
samples	N
which	D
show	N
how	R
to	P
do	V
things	N
like	R
real	A
time	N
chat	N
or	&
real	A
time	N
stock	N
portfolio	N
screens	N
using	V
Ajax	^
with	P
ActiveMQ	^

As	P
James	^
Strachan	^
says	V
-	G
http://activemq.apache.org/ajax.html	U
is	V
an	D
ideal	A
out-of-the-box	N
solution	N
for	P
your	D
problem	N
.	,
If	P
you	O
still	R
want	V
to	P
create	V
such	A
solution	N
manually	R
you	O
can	V
just	R
create	V
JMS	^
connection	N
in	P
your	D
Ajax	^
servlet	N
(	,
connection	N
per	P
request	N
)	,
.	,
Consider	V
using	V
Spring	^
JMS	^
template	N
for	P
that	D
reason	N
(	,
http://static.springsource.org/spring/docs/2.5.x/reference/jms.html	U
)	,
.	,
Then	R
just	R
receive	V
the	D
message	N
in	P
the	D
Servlet	N
doGet	N
/	,
doPost	A
method	N
.	,
Consider	V
low	A
timeout	N
value	N
for	P
receiving	V
in	P
that	D
case	N
.	,
Such	A
solution	N
will	V
work	V
for	P
the	D
Queues	^
and	&
durable	A
Topics	N
.	,
For	P
non-durable	^
Topics	^
consider	V
external	A
message	N
listener	N
.	,
Spring	^
MessageListenerContainer	^
is	V
an	D
excellent	A
tool	N
for	P
that	D
purpose	N
:	,
Bean	^
lastTenUpdatesCache	^
will	V
be	V
a	D
singleton	^
bean	N
implementing	V
MesssageListener	^
.	,
This	D
bean	N
would	V
be	V
responsible	A
for	P
caching	V
last	A
ten	$
messages	N
(	,
just	R
putting	V
it	O
into	P
a	D
java.util	N
list	N
)	,
.	,
It	O
will	V
be	V
injected	V
into	P
your	D
Ajax	^
servlet	N
so	R
in	P
your	D
doGet	N
/	,
doPost	A
method	N
you	O
can	V
ask	V
it	O
about	R
last	A
10	$
messages	N
sent	V
to	P
the	D
topic	N
.	,

