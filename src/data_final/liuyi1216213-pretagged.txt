javascript	A
injection	N
in	P
wicket	N

I	O
have	V
J2EE	A
project	N
which	O
uses	V
wicket	N
framework	N
.	,
I	O
want	V
to	P
know	V
how	R
can	V
I	O
prevent	V
from	P
javascript	D
injection	N
in	P
wicket	N
?	,

Although	P
I	O
didn't	V
think	V
the	D
way	N
in	P
which	D
you	O
formulated	V
your	D
question	N
deserved	V
it	O
(	,
no	D
details	N
,	,
no	D
background	N
,	,
no	D
example	N
problem	N
statement	N
,	,
implied	A
susceptability	N
to	P
injection	N
,	,
etc	G
)	,
,	,
I	O
dug	V
up	T
some	D
details	N
from	P
the	D
Excellent	A
Wicket	N
in	P
Action	^
:	,
Wicket	N
is	V
secure	A
by	P
default	N
You	O
never	R
need	V
to	P
worry	V
about	P
pimple-faced	A
14-year-olds	N
trying	V
to	P
hack	V
your	D
web	N
application	N
.	,
To	P
do	V
so	R
,	,
they	O
would	V
have	V
to	P
hijack	V
the	D
session	N
and	&
then	R
guess	V
the	D
right	A
page	N
identifiers	N
and	&
version	N
numbers	N
,	,
which	O
would	V
be	V
relative	A
to	P
the	D
session	N
and	&
the	D
relevant	A
component	N
paths	N
.	,
You	O
d	V
have	V
to	P
be	V
a	D
persistent	A
hacker	N
to	P
pull	V
that	D
off	T
.	,
You	O
can	V
make	V
your	D
Wicket	N
application	N
even	R
more	R
secure	A
from	P
the	D
default	N
by	P
encrypting	V
requests	N
with	P
,	,
for	P
instance	N
,	,
CryptedUrlWebRequestCodingStrategy	^
.	,

All	D
Wicket	N
components	N
escape	V
strings	N
by	P
default	N
(	,
by	P
Labels	^
,	,
TextFields	^
,	,
etc	G
.	,
)	E
,	,
which	O
avoids	V
most	A
common	N
issues	N
related	V
to	P
javascript	D
injection	N
.	,
You	O
should	V
take	V
appropriate	A
care	N
,	,
though	P
,	,
if	P
you	O
disable	V
this	D
behavior	N
(	,
component.setEscapeModelStrings	E
(	E
false	E
)	E
)	E
for	P
some	D
reason	N
,	,
or	&
create	V
custom-rendered	A
components	N
(	,
if	P
you	O
write	V
the	D
markup	N
directly	R
to	P
the	D
output	N
)	,
.	,

