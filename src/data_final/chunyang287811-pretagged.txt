Java	^
<	^
->	^
Javascript	^
for	P
non-Applets	^
?	,

I'm	L
working	V
with	P
an	D
existing	V
Java	^
codebase	P
which	D
,	,
while	P
it	O
can	V
be	V
invoked	V
from	P
an	D
HTML	N
page	N
using	V
an	D
APPLET	^
tag	N
,	,
does	V
not	R
actually	R
subclass	P
the	D
Applet	N
class	N
.	,
The	D
same	A
jars	N
are	V
also	R
used	V
in	P
a	D
non-browser	A
context	N
,	,
so	P
they	O
did	V
not	R
subclass	A
Applet	N
.	,
Now	R
I	O
need	V
to	P
communicate	V
some	D
values	N
from	P
Java	^
back	N
to	P
the	D
Javascript	N
of	P
the	D
invoking	V
page	N
.	,
Normally	R
one	O
would	V
do	V
this	D
using	V
JSObject	N
,	,
but	&
so	R
far	R
as	P
I	O
can	V
one	O
has	V
to	P
use	V
JSObject.getWindow	^
which	D
only	A
works	V
for	P
subclasses	V
of	P
Applet	N
.	,
Is	V
there	R
either	R
:	,
a	D
way	N
to	P
use	V
JSObject	N
from	P
something	N
which	O
isn't	V
an	D
Applet	N
subclass	N
?	,
some	D
other	A
mechanism	N
to	P
communicate	V
back	R
to	P
the	D
Javascript	N
of	P
the	D
invoking	V
page	N
?	,

Call	^
JSObject.getWindow	^
(	,
this	D
)	,
in	P
the	D
applet	N
.	,
Then	R
pass	V
the	D
JSObject	N
into	P
the	D
code	N
that	P
needs	V
it	O
in	P
the	D
usual	A
fashion	N
.	,

I	O
think	V
you're	L
actually	R
going	V
to	P
need	V
to	P
implement	V
an	D
applet	N
in	P
a	D
jar	N
file	V
to	P
handle	V
the	D
communication	N
between	P
your	D
code	N
and	&
the	D
browser	N
itself	O
.	,
Perhaps	R
just	R
use	V
the	D
non-applet	N
jar	N
as	P
a	D
class	N
lib	,
and	&
make	V
the	D
applet	N
jar	N
a	D
simple	A
wrapper	N
that	D
proxies	N
your	D
calls	V
between	P
the	D
browser	N
and	&
the	D
Java	^
code	N
.	,

What's	L
wrong	A
with	P
returning	V
a	D
value	N
?	,
From	P
Javascript	V
You	O
can	V
access	V
the	D
Java-object	N
by	P
using	V
getElementById	E
(	E
"	E
id-of-embed-tag	E
")	E
.	,
Then	R
you	O
can	V
invoke	V
any	D
public	A
method	N
on	P
that	D
object	N
.	,
The	^
Java	^
object	N
returned	V
by	P
that	D
method	N
will	V
be	V
available	A
to	P
your	D
Javascript	N
code	N
.	,

Thats	L
an	D
approach	V
I	O
had	V
not	R
considered	A
.	,
I'd	L
end	N
up	T
polling	N
from	P
the	D
Javascript	N
until	P
something	N
changes	N
,	,
but	&
that	O
might	V
work	N
.	,

