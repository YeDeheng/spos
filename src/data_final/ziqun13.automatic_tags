1089025	Accessing the JavaScript Table DOM in a Java Servlet	V D ^ ^ ^ P D ^ ^
1089025	HTML tables can be interpreted by Excel . That said , all you need is the markup and a content-type of " application / ms-excel "	A N V V V P ^ , O V , X O V V D N & D N P , N , G ,
1089025	Apparently you are generating the table in the JSP so why don't you just output the data you are creating the Table from ? For the actual JavaScript implementation just take a look at Ajax functionality and Dom Manipulation with jQuery ( http://jquery.com )	R O V V D N P D ^ R R V O R P D N O V V D N P , P D A N N R V D V P ^ ^ & ^ N P ^ , U ,
1089025	I don't understand , is there a question in here ?	O V V , V R D N P R ,
1089025	POST the table to the server . If you want to access the DOM like you would in JavaScript , you are going to need Rhino . But I recommend just sticking with something easier to drop in like JDOM . Then echo back the table with the content-type modified in the header to be " application / ms-excel " .	V D N P D N , P O V P V D N P O V P ^ , O V V P V ^ , & O V R V P N A P V P V ^ , R V T D N P D N V P D N P V , N , G , ,
1089025	I'd serialize the data from the cells into a simple JSON object , then use one of the many JSON libraries available on the Java-side to convert it back into a usable object . Something like this : This uses the Public Domain JSON.stringify() routine , available directly here . You can now take this string , pass it to a server , and re-hydrate the object in Java-land . You'll get a multidimensional array of values corresponding directly to the contents of the table . NOTE : This retrieves the entire table . If you just want to get the table's body , you'll have to modify the above code to iterate over the tBodies , like this :	L V D N P D N P D A N N , R V $ P D A N N R P D N P V O R P D A N , N P D , D V D ^ ^ ^ A , R R R , O V R V D N , V O P D N , & V D N P ^ , L V D A N P V V R P D N P D N , ^ , D N D A N , P O R V P V D S N , L V P V D A N P N P D N , P D ,
