How	R
can	V
you	O
run	V
Javascript	^
using	V
Rhino	^
for	P
Java	^
in	P
a	D
sandbox	N
?	,

Part	N
of	P
our	D
java	N
application	N
needs	V
to	P
run	V
javascript	V
that	O
is	V
written	V
by	P
non-developers	^
.	,
These	O
non-developers	V
are	V
using	V
javascript	V
for	P
data	N
formatting	N
.	,
(	,
Simple	A
logic	N
and	&
string	N
concatenation	N
mostly	R
)	,
.	,
My	D
question	N
is	V
how	R
can	V
I	O
setup	V
the	D
execution	N
of	P
these	D
scripts	N
to	P
make	V
sure	A
scripting	N
errors	N
don't	V
have	V
a	D
major	A
negative	A
impact	N
on	P
the	D
rest	N
of	P
the	D
application	N
.	,
Need	V
to	P
guard	V
against	P
infinite	A
loops	N
Guard	N
against	P
spawning	V
new	A
threads	N
.	,
Limit	N
access	N
to	P
services	N
and	&
environment	N
File	N
system	N
(	,
Example	N
:	,
If	P
a	D
disgruntled	A
script	N
writer	N
decided	V
to	P
delete	V
files	N
)	,
Database	N
(	,
Same	A
thing	N
delete	V
database	N
records	N
)	,
Basically	R
I	O
need	V
to	P
setup	N
the	D
javascript	N
scope	N
to	P
only	A
include	V
exactly	R
what	O
they	O
need	V
and	&
no	D
more	A
.	,

Do	V
you	O
mean	V
to	P
say	V
(	,
Javascript	^
using	V
Rhino	^
)	,
for	P
(	,
Java	^
in	P
a	D
sandbox	^
)	,
,	,
or	&
(	,
Javascript	^
using	V
(	,
Rhino	^
for	P
Java	^
))	E
(	E
in	P
a	D
sandbox	^
)	,
?	,

Javascript	^
is	V
single-threaded	A
and	&
can't	V
access	V
the	D
filesystem	^
,	,
so	P
I	O
don't	V
think	V
you	O
have	V
to	P
worry	V
about	P
those	O
.	,
I'm	L
not	R
sure	A
if	P
there's	Y
a	D
way	N
to	P
set	V
a	D
timeout	N
to	P
guard	V
against	P
infinite	A
loops	N
,	,
but	&
you	O
could	V
always	R
spawn	V
a	D
(	,
Java	^
)	,
thread	N
that	O
executes	V
the	D
script	N
,	,
and	&
then	R
kill	V
the	D
thread	N
after	P
so	R
much	A
time	N
.	,

Rhino	^
has	V
a	D
threading	V
library	N
available	R
to	P
it	O
(	,
java.lang.Thread	N
!	,
)	E
,	,
and	&
can	V
access	V
the	D
file	N
system	N
.	,

To	P
guard	V
against	P
infinite	A
loops	N
,	,
you'd	L
need	V
to	P
put	V
it	O
in	P
a	D
separate	A
process	N
so	P
that	D
it	O
could	V
be	V
killed	V
.	,
To	P
guard	V
against	P
creating	V
threads	N
,	,
you'd	L
need	V
to	P
extend	V
SecurityManager	^
(	,
the	D
default	N
implementation	N
allows	V
untrusted	A
code	N
to	P
access	V
non-root	A
thread	N
groups	N
)	,
.	,
Java	^
security	N
does	V
allow	V
you	O
to	P
prevent	V
access	V
to	P
the	D
file	N
system	N
.	,
For	P
database	N
restrictions	N
,	,
you	O
might	V
be	V
able	A
to	P
use	V
the	D
standard	A
SQL	N
user	N
security	N
,	,
but	&
that	O
is	V
quite	R
weak	A
.	,
Otherwise	R
,	,
you	O
need	V
to	P
provide	V
an	D
API	^
that	O
enforces	V
your	D
restrictions	N
.	,
Edit	!
:	,
I	O
should	V
point	N
out	P
that	P
the	D
version	N
of	P
Rhino	^
provided	V
with	P
JDK6	^
has	V
had	V
security	N
work	N
done	V
on	P
it	O
,	,
but	&
doesn't	V
include	V
the	D
compiler	N
.	,

To	P
guard	V
against	P
infinite	A
loops	N
,	,
you	O
can	V
observe	V
the	D
instruction	N
count	V
as	P
the	D
script	N
runs	N
(	,
this	O
works	V
only	A
with	P
interpreted	V
scripts	N
,	,
not	R
with	P
compiled	V
ones	N
)	,
.	,
There	X
is	V
this	D
example	N
in	P
the	D
Rhino	^
JavaDocs	^
to	P
prevent	V
a	D
script	N
from	P
running	V
for	P
more	A
than	P
ten	$
seconds	N
:	,

To	P
block	^
Java	^
class	N
and	&
method	N
access	N
have	V
a	D
look	V
at	P
...	~
http://codeutopia.net/blog/2009/01/02/sandboxing-rhino-in-java	U
/	,

I	O
just	R
ran	V
across	P
this	D
blog	N
post	N
that	O
seems	V
to	P
be	V
useful	A
for	P
sandboxing	V
more	A
or	&
less	A
anything	N
(	,
not	R
just	R
Rhino	^
):	,
http://calumleslie.blogspot.com/2008/06/simple-jvm-sandboxing.html	U

