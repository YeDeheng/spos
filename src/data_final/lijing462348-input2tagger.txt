String	N
length	N
differs	N
from	N
Javascript	N
to	N
Java	N
code	N

I've	N
got	N
a	N
JSP	N
page	N
with	N
a	N
piece	N
of	N
Javascript	N
validation	N
code	N
which	N
limits	N
to	N
a	N
certain	N
amount	N
of	N
characters	N
on	N
submit	N
.	N
I'm	N
using	N
a	N
textarea	N
so	N
I	N
can't	N
simply	N
use	N
a	N
length	N
attribute	N
like	N
in	N
a	N
input	N
type=	N
"	N
text	N
"	N
.	N
I	N
use	N
document.getElementById	N
(	N
"	N
text	N
")	N
.	N
value.length	N
to	N
get	N
the	N
string	N
length	N
.	N
I'm	N
running	N
Firefox	N
3.0	N
on	N
Windows	N
(	N
but	N
I've	N
tested	N
this	N
behavior	N
with	N
IE	N
6	N
also	N
)	N
.	N
The	N
form	N
gets	N
submitted	N
to	N
a	N
J2EE	N
servlet	N
.	N
In	N
my	N
Java	N
servlet	N
the	N
string	N
length	N
of	N
the	N
parameter	N
is	N
larger	N
than	N
2000	N
!	N
I've	N
noticed	N
that	N
this	N
can	N
easily	N
be	N
reproduced	N
by	N
adding	N
carriage	N
returns	N
in	N
the	N
textarea	N
.	N
I've	N
used	N
Firebug	N
to	N
assert	N
the	N
length	N
of	N
the	N
textare	N
and	N
it	N
really	N
is	N
2000	N
characters	N
long	N
.	N
On	N
the	N
Java	N
side	N
though	N
,	N
the	N
carriage	N
returns	N
get	N
converted	N
to	N
UNIX	N
style	N
(	N
\r\n	N
,	N
instead	N
of	N
\n	N
)	N
,	N
thus	N
the	N
string	N
length	N
differs	N
!	N
Am	N
I	N
missing	N
something	N
obvious	N
here	N
or	N
what	N
?	N
If	N
not	N
,	N
how	N
would	N
you	N
reliably	N
(	N
cross-platform	N
/	N
browser	N
)	N
make	N
sure	N
that	N
the	N
textarea	N
is	N
limited	N
.	N

@Fran	N
ois	N
:	N
Always	N
enclose	N
things	N
in	N
tag	N
brackets	N
in	N
back-ticks	N
(	N
e.g.	N
format	N
them	N
as	N
code	N
)	N
,	N
or	N
they	N
will	N
be	N
stripped	N
out	N
on	N
display	N
of	N
your	N
question	N
.	N

just	N
stumbled	N
across	N
such	N
situation	N
.	N
your	N
topic	N
made	N
my	N
day	N
,	N
sir	N
!	N
thanks	N
a	N
lot	N
!	N

Do	N
you	N
particularly	N
care	N
which	N
line-endings	N
are	N
used	N
?	N
Why	N
not	N
just	N
make	N
the	N
Java	N
convert	N
"	N
\r\n	N
"	N
to	N
"	N
\n	N
"	N
?	N
(	N
Note	N
that	N
"	N
\r\n	N
"	N
is	N
the	N
Windows	N
style	N
;	N
"	N
\n	N
"	N
is	N
the	N
Unix	N
style	N
.	N
)	N
Alternatively	N
,	N
do	N
the	N
reverse	N
when	N
checking	N
the	N
length	N
within	N
the	N
JavaScript	N
.	N

OK	N
.	N
I	N
get	N
it	N
.	N
I	N
guess	N
that	N
means	N
that	N
Javascript	N
always	N
represents	N
carriage	N
returns	N
the	N
UNIX	N
way	N
internally	N
and	N
through	N
its	N
APIs	N
(	N
i.e.	N
`	N
length()	N
`)	N
.	N
Somehow	N
I	N
gets	N
converted	N
to	N
`	N
\r\n	N
`	N
because	N
the	N
Java	N
VM	N
is	N
running	N
on	N
Windows	N
.	N
I	N
wish	N
it	N
was	N
more	N
uniform	N
...	N

+1	N
,	N
normalizing	N
sounds	N
good	N
here	N

I	N
don't	N
know	N
what	N
rules	N
different	N
browsers	N
on	N
servlet	N
engines	N
will	N
apply	N
,	N
but	N
normalization	N
should	N
remove	N
the	N
differences	N
either	N
way	N
.	N
Btw	N
,	N
it's	N
worth	N
trying	N
on	N
macs	N
too	N
,	N
where	N
\r	N
is	N
the	N
normal	N
linebreak	N
.	N

+1	N
Just	N
remove	N
all	N
"	N
\r	N
"	N
and	N
everybody	N
will	N
be	N
happy	N
,	N
whatever	N
platform	N
you	N
are	N
using	N
.	N
Macs	N
included	N
.	N

Are	N
you	N
limiting	N
it	N
to	N
2000	N
chars	N
so	N
it	N
fits	N
inside	N
an	N
nvarchar	N
(	N
2000	N
)	N
column	N
in	N
a	N
database	N
?	N
Otherwise	N
maybe	N
just	N
allow	N
a	N
2%	N
overrun	N
to	N
be	N
flexible	N
on	N
the	N
Java	N
side	N
.	N
And	N
Java	N
should	N
be	N
using	N
Unicode	N
UTF16	N
to	N
represent	N
Strings	N
.	N
That	N
/	N
r	N
must	N
have	N
got	N
in	N
there	N
somewhere	N
else	N
,	N
maybe	N
a	N
conversion	N
in	N
the	N
web	N
browser	N
when	N
submitting	N
?	N
Have	N
you	N
tried	N
different	N
browsers	N
?	N
On	N
different	N
platforms	N
?	N
You	N
might	N
just	N
have	N
to	N
strip	N
out	N
the	N
/	N
r	N
s	N
.	N

This	N
isn't	N
really	N
a	N
JavaScript	N
(	N
or	N
Java	N
)	N
problem	N
-	N
both	N
layers	N
report	N
an	N
accurate	N
length	N
for	N
the	N
string	N
they	N
are	N
dealing	N
with	N
.	N
The	N
problem	N
in	N
your	N
case	N
is	N
that	N
the	N
string	N
gets	N
transformed	N
during	N
the	N
HTTP	N
transmission	N
.	N
If	N
you	N
absolutely	N
must	N
ensure	N
that	N
the	N
string	N
doesn't	N
exceed	N
a	N
certain	N
length	N
,	N
you	N
can	N
mimic	N
this	N
transformation	N
on	N
the	N
client	N
by	N
replacing	N
every	N
instance	N
of	N
"	N
\n	N
"	N
with	N
"	N
\n\r	N
"	N
-	N
but	N
only	N
for	N
length	N
verification	N
purposes	N
:	N

Note	N
:	N
The	N
code	N
should	N
be	N
`	N
textarea.value.replace	N
(/	N
\n	N
/	N
g	N
,	N
"	N
\n\r	N
")	N
.	N
length	N
`	N
to	N
find	N
all	N
occurrences	N
.	N
The	N
original	N
code	N
only	N
looks	N
for	N
the	N
first	N
match	N
.	N

Thanks	N
.	N
Fixed	N
it	N
.	N

It	N
should	N
be	N
`"	N
\r\n	N
"`	N
,	N
not	N
`"	N
\n\r	N
"`	N
.	N

To	N
remember	N
that	N
the	N
right	N
order	N
is	N
`	N
\r\n	N
`	N
,	N
remember	N
`	N
\r	N
`	N
stands	N
for	N
Carriage	N
?	N
eturn	N
(	N
`	N
Cr	N
`)	N
and	N
`	N
\n	N
`	N
stands	N
for	N
(	N
?	N
ew	N
)	N
Line	N
Feed	N
(	N
`	N
Lf	N
`)	N
in	N
`	N
CrLf	N
`	N
.	N

I	N
think	N
you	N
need	N
to	N
do	N
the	N
line	N
ending	N
conversion	N
/	N
check	N
on	N
both	N
client	N
and	N
server	N
because	N
you	N
don't	N
know	N
what	N
line	N
endings	N
the	N
client	N
browser	N
is	N
going	N
to	N
use	N
(	N
Firefox	N
submits	N
\n	N
even	N
on	N
Windows	N
)	N
and	N
if	N
you	N
develop	N
server	N
side	N
on	N
Windows	N
and	N
deploy	N
on	N
Linux	N
then	N
the	N
line	N
endings	N
will	N
be	N
handled	N
differently	N
.	N

