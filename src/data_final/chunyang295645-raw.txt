How to register a JavaScript callback in a Java Applet?
I'm developing an invisible Java Applet, that will be controlled entirely from JavaScript. I can call the applet's Java methods easily, and I can call JavaScript methods from within the applet by using  netscape.javascript.JSObject.getWindow(this).call() . But in order to register a JavaScript callback in the applet, I guess I would need an JavaScript function object of some sort. I would like to do: Which I could call from Javascript: So I could call this function in later code: Does something like this exist? How can I do this? Rigth now I'm thinking of creating some Javascript to handle this callback mechanism instead of doing so from the applet.
I am brand new to Java  -> JavaScript communication, as I planned to explore it this week. A good opportunity here... :-) After some tests, it seems you cannot pass a JS function to a Java applet. Unless I am doing it the wrong way... I tried: where Call is (are) defined as: When I pass a JS function (all tests in FF3), I get a null on the Java side. Note that the following Java routine allows to display the JS code of DumberTest function! To the point: I made a JS function: I extract the name of the JS function from the toString result and pass it to Java applet. I don't think we can handle anonymous functions because Java call JS functions by name. Java side:
It seems that you can only pass functions to Java by name, therefore what you'd need to do is create a fa ade object which would wrap the applet and which would take function references and come up with temporary names for them.
win.eval() will call a predefined javascript.
eval is more generic, hence less efficient than call for this precise task, and it is more complex to pass parameters to the JS function.
I realise this is a  really  old question, but it ranked 2nd in one of my searches for something else, and I think the below may help someone else that finds this. I've recently done something similar whereby a Java applet needs to call back into JavaScript on completion of a task, calling different functions on success or error.  As has been the trend over recent times, my needs were to call into anonymous functions defined as parameters being passed to other functions.  This is the javascript on the client side: As mentioned in the other answers, Java can only call into JavaScript methods by name.  This means you need a global callback method, which can then call into other methods as need be: This function is called directly from within the Java applet: You could hold on to the reference of the parameter object being passed in indefinitely if you wanted to use it as some form of registered callback rather than a throwaway one if need be etc. In our case the processing can be time intenstive, so we actually spin up another thread - the callbacks still work here also:
