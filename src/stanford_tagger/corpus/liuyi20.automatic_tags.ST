Has_VBZ anyone_NN used_VBN GWT_NNP and_CC can_MD say_VB it_PRP really_RB delivers_VBZ what_WP it_PRP promises_VBZ ?_.
I_PRP am_VBP a_DT long_JJ time_NN Java_NNP web_NN developer_NN and_CC as_IN most_JJS web_NN developers_NNS I_PRP have_VBP used_VBN quite_RB a_DT lot_NN of_IN JavaScript_NNP ._. Even_RB though_IN I_NNP don't_NNP hate_VBP JavaScript_NNP as_IN many_JJ other_JJ Java_NNP developers_NNS ,_, I_PRP am_VBP still_RB aware_JJ of_IN its_PRP$ faults_NNS ._. GWT_NNP is_VBZ a_DT way_NN to_TO write_VB javascript_NN using_VBG java_NN ._. Since_IN I_PRP know_VBP both_DT languages_NNS for_IN a_DT long_JJ time_NN I_PRP am_VBP pretty_RB skeptical_JJ about_IN this_DT claim_NN ._. I_PRP mean_VBP ,_, I_PRP having_VBG a_DT hard_JJ time_NN believing_VBG that_IN you_PRP can_MD really_RB create_VB full_JJ Java_NNP dynamic_NN web_NN applications_NNS with_IN a_DT rich_JJ GUI_NN using_VBG just_RB GWT_NNP ._. That_DT is_VBZ why_WRB I_PRP am_VBP asking_VBG here_RB if_IN anyone_NN had_VBD the_DT chance_NN to_TO work_VB with_IN GWT_NN on_IN a_DT large_JJ scale_NN project_NN ._. If_IN so_RB ,_, I_PRP would_MD really_RB like_VB to_TO hear_VB what_WP they_PRP think_VBP of_IN it_PRP ._.
Why_WRB the_DT close_NN ?_. This_DT looks_VBZ like_IN an_DT interesting_JJ question_NN to_TO me_PRP .._NN
Some_DT people_NNS have_VBP the_DT bad_JJ habit_NN of_IN clicking_VBG '_POS close_NN '_'' if_IN they_PRP just_RB don't_VBP like_IN the_DT question_NN ._. I_PRP don't_VBP think_VB this_DT is_VBZ subjetive_JJ nor_CC argumentative_JJ at_IN all_DT
Did_VBD you_PRP end_VB up_RP using_VBG GWT_NNP ?_. Did_VBD it_PRP deliver_VB ?_.
Hi_NNP Dave_NNP ,_, No_NNP ,_, finally_RB I_PRP decided_VBD not_RB using_VBG it_PRP ._. My_PRP$ final_JJ conclusion_NN was_VBD that_IN GWT_NNP seems_VBZ like_IN a_DT really_RB good_JJ product_NN and_CC the_DT people_NNS who_WP use_VBP it_PRP mostly_RB love_VBP it_PRP ._. Nevertheless_RB ,_, I_PRP feel_VBP like_IN since_IN GWT_NNP has_VBZ a_DT totally_RB different_JJ way_NN of_IN doing_VBG things_NNS ,_, it_PRP is_VBZ a_DT product_NN that_WDT once_RB you_PRP start_VBP using_VBG it_PRP ,_, you_PRP commit_VBP for_IN life_NN ._. And_CC that_DT is_VBZ something_NN I_PRP really_RB stay_VBP away_RB from_IN ._. Thanks_NNS for_IN asking_VBG ._.
I've_NN looked_VBD at_IN it_PRP briefly_RB for_IN an_DT older_JJR application_NN at_IN one_CD of_IN my_PRP$ jobs_NNS ,_, and_CC I_PRP must_MD admit_VB that_IN it_PRP was_VBD very_RB impressive_JJ ._. All_PDT the_DT code_NN was_VBD written_VBN in_IN Java_NNP ,_, and_CC the_DT javascript_NN was_VBD built_VBN beautifully_RB ._. It_PRP had_VBD AJAX_NNP ,_, dynamic_JJ pages_NNS ,_, the_DT works_NNS ._. There_EX are_VBP plugins_NNS for_IN it_PRP as_RB well_RB ,_, such_JJ as_IN the_DT Ext_NN GWT_NN framework_NN ._. It's_NNS definitely_RB worth_JJ looking_VBG into_IN and_CC trying_VBG out_RP ,_, but_CC you_PRP may_MD find_VB that_IN the_DT development_NN cycle_NN doesn't_NN "_`` feel_NN "_'' right_NN ,_, so_IN you_PRP might_MD opt_VB to_TO use_VB regular_JJ JavaScript_NNP ._.
good_JJ point_NN about_IN the_DT dev_JJ environment_NN "_'' feel_NN ._. "_'' GWT_NNP is_VBZ definitely_RB only_RB for_IN those_DT that_WDT enjoy_VBP /_: tolerate_VB the_DT constraints_NNS of_IN a_DT language_NN like_IN Java_NNP ._.
As_IN with_IN any_DT tool_NN ,_, it_PRP needs_VBZ to_TO be_VB used_VBN properly_RB ._. One_CD can_MD wield_VB a_DT hammer_NN skillfully_RB and_CC build_VB something_NN nice_JJ ,_, or_CC just_RB wave_VB it_PRP around_RB at_IN stuff_NN and_CC do_VB more_JJR harm_NN than_IN good_JJ ._. Google_NNP Wave_NNP ,_, I_PRP think_VBP ,_, has_VBZ become_VBN the_DT prototype_NN of_IN "_`` what's_FW possible_JJ "_'' with_IN GWT_NN ._. It's_NNS still_RB rather_RB hard_JJ to_TO find_VB good_JJ GWT_NN design_NN patterns_NNS because_IN the_DT technology_NN is_VBZ too_RB new_JJ ,_, so_IN that_DT can_MD harm_VB efforts_NNS to_TO develop_VB a_DT very_RB rich_JJ ,_, large-scale_JJ web_NN app_NN in_IN GWT_NNP ._. Before_IN beginning_VBG such_PDT a_DT project_NN ,_, I_PRP would_MD recommend_VB looking_VBG at_IN examples_NNS of_IN the_DT model-view-presenter_JJ (_NN MVP_NN )_NN pattern_NN and_CC be_VB sure_JJ to_TO use_VB it_PRP ,_, or_CC something_NN like_IN it_PRP ,_, as_IN a_DT foundation_NN for_IN the_DT control_NN flow_NN of_IN your_PRP$ web_NN app_NN ._. One_CD nice_JJ thing_NN about_IN GWT_NNP ,_, and_CC writing_VBG your_PRP$ code_NN in_IN Java_NNP ,_, is_VBZ that_IN the_DT high_JJ degree_NN of_IN abstraction_NN and_CC decoupling_NN necessary_JJ for_IN a_DT clean_JJ MVP_NN implementation_NN is_VBZ pretty_RB easy_JJ (_NN thanks_NNS to_TO the_DT compiler_FW )_FW ._.
I've_NN written_VBD fairly_RB large_JJ sized_VBN app_NN in_IN GWT_NNP ,_, and_CC i_LS have_VBP to_TO say_VB that_DT i'm_NN even_RB more_RBR impressed_JJ by_IN GWT_NN than_IN i_LS was_VBD when_WRB the_DT project_NN started_VBD ._. My_PRP$ general_JJ '_'' feel_NN '_'' of_IN the_DT platform_NN is_VBZ that_IN things_NNS are_VBP really_RB well_RB thought_VBN out_RP ,_, and_CC they_PRP don't_VBP do_VBP things_NNS unless_IN they_PRP can_MD do_VB it_PRP well_RB ,_, and_CC can_MD do_VB it_PRP well_RB on_IN all_DT browsers_FW (_FW IE_NN users_NNS are_VBP still_RB your_PRP$ users_NNS !_. )_NNP Now_NNP ,_, keep_VBP in_IN mind_NN that_IN what_WP GWT_NNP really_RB excels_VBZ at_IN is_VBZ the_DT creation_NN of_IN large_JJ ,_, highly_RB dynamic_JJ single-page_JJ style_NN webapps_NNS ._. If_IN your_PRP$ goal_NN is_VBZ to_TO enhance_VB an_DT otherwise_RB static_JJ page_NN with_IN some_DT javascript_NN effects_NNS ,_, than_IN GWT_NNP is_VBZ massive_JJ overkill_NN (_NN gquery_NN may_MD change_VB this_DT ,_, but_CC i_FW don't_FW have_VBP experience_NN with_IN gquery_FW )_FW Some_DT features_NNS I_PRP enjoy_VBP include_VBP :_: The_DT ability_NN to_TO share_VB code_NN between_IN the_DT server_NN side_NN and_CC the_DT client_NN side_NN ._. (_CD if_IN your_PRP$ server_NN side_NN is_VBZ written_VBN in_IN java_NN ,_, of_IN course_NN )_NN ._. I_PRP didn't_VBP expect_VB to_TO use_VB this_DT a_DT lot_NN of_IN this_DT at_IN first_JJ ,_, but_CC in_IN practice_NN ,_, it_PRP can_MD really_RB save_VB a_DT lot_NN of_IN code_NN duplication_NN ._. However_RB ,_, i_FW find_VBP that_IN in_IN general_JJ ,_, this_DT only_RB works_VBZ with_IN code_NN that_WDT has_VBZ been_VBN written_VBN with_IN GWT_NN in_IN mind_NN -_: using_VBG code_NN that_WDT was_VBD not_RB written_VBN with_IN GWT_NN in_IN mind_NN often_RB doesn't_JJ work_NN well_RB ._. This_DT is_VBZ because_IN GWT_NNP only_RB has_VBZ a_DT subset_NN of_IN the_DT classes_NNS in_IN the_DT JDK_NN ,_, and_CC in_IN javascript_NN ,_, you_PRP have_VBP to_TO care_VB about_IN performance_NN a_DT lot_NN more_JJR than_IN you_PRP do_VBP on_IN the_DT server_NN side_NN ._. It_PRP aims_VBZ to_TO achieve_VB the_DT fastest_JJS javascript_NN ,_, faster_RBR than_IN you_PRP would_MD ever_RB write_VB by_IN hand_NN (_NN because_IN if_IN you_PRP did_VBD write_VB it_PRP by_IN hand_NN ,_, the_DT code_NN would_MD be_VB unmaintainable_JJ )_NN ._. The_DT unfortunate_JJ reality_NN is_VBZ that_IN the_DT browsers_NNS that_IN a_DT lot_NN of_IN people_NNS use_VBP have_VBP incredibly_RB slow_JJ javascript_NN engines_NNS ,_, so_IN the_DT performance_NN of_IN your_PRP$ javascript_NN code_NN matters_VBZ a_DT lot_NN ._. Gwt's_FW compiler_FW is_VBZ a_DT real_JJ optimizing_VBG compiler_NN -_: it_PRP will_MD inline_VB methods_NNS ,_, intern_VB all_DT your_PRP$ strings_NNS ._. devirtualize_VB your_PRP$ method_NN calls_VBZ when_WRB possible_JJ ,_, etc_FW ._. Because_IN you_PRP are_VBP compiling_VBG for_IN each_DT browser_NN and_CC locale_NN ,_, the_DT compiler_NN can_MD also_RB inline_VB browser-specific_JJ and_CC locale-specific_JJ code_NN ._. This_NNP Google_NNP I_NNP /_: O_NN presentation_NN has_VBZ some_DT benchmarks_NNS a_DT few_JJ slides_NNS in_IN ._. It_PRP will_MD also_RB automatically_RB sprite_VB your_PRP$ images_NNS together_RB to_TO minimize_VB the_DT number_NN of_IN http_JJ requests_NNS needed_VBN ,_, again_RB improving_VBG the_DT speed_NN of_IN your_PRP$ site_NN ._. GWT_NN 2.0_CD will_MD allow_VB you_PRP to_TO combine_VB together_RB arbitrary_JJ files_NNS ._. most_JJS of_IN the_DT files_NNS created_VBN by_IN gwt_NN have_VBP a_DT strong_JJ hash_NN as_IN their_PRP$ filename_NN ,_, which_WDT lets_VBZ you_PRP set_VBD the_DT files_NNS to_TO be_VB cached_VBN forever_RB ,_, but_CC not_RB worry_VB about_IN people_NNS having_VBG old_JJ versions_NNS if_IN the_DT file_NN changes_VBZ The_DT code_NN splitting_NN in_IN GWT_NN 2.0_CD is_VBZ very_RB impressive_JJ and_CC would_MD be_VB very_RB difficult_JJ to_TO do_VB by_IN hand_NN ._. As_IN the_DT size_NN of_IN your_PRP$ application_NN grows_VBZ ,_, dealing_VBG with_IN the_DT size_NN of_IN your_PRP$ javascript_NN matters_VBZ more_JJR and_CC more_JJR ,_, and_CC you_PRP need_VBP to_TO be_VB able_JJ to_TO split_VB it_PRP into_IN chunks_NNS You_PRP are_VBP coding_VBG in_IN a_DT statically_RB typed_VBN language_NN ._. I_PRP know_VBP some_DT people_NNS prefer_VBP dynamic_JJ typing_NN ,_, but_CC i_LS like_IN to_TO compare_VB this_DT debate_NN to_TO the_DT emacs_NNS vs_CC vi_LS debate_NN -_: there_EX are_VBP a_DT lot_NN of_IN smart_JJ people_NNS on_IN both_DT camps_NNS ,_, and_CC arguing_VBG on_IN the_DT internet_FW isn't_FW going_VBG to_TO change_VB anyone's_NN preference_NN You_PRP get_VBP to_TO use_VB a_DT lot_NN of_IN the_DT great_JJ tools_NNS that_WDT exist_VBP in_IN the_DT java_NN ecosystem_NN ,_, which_WDT are_VBP generally_RB a_DT lot_NN more_RBR mature_JJ than_IN the_DT equivilant_JJ javascript_NN tools_NNS ._. -_: junit_NN ,_, java_NN IDEs_NNS ,_, java_NN debuggers_NNS ,_, refactoring_NN ,_, etc_NN ._.
Oh_UH ,_, and_CC i_FW guess_VB the_DT biggest_JJS downsides_NNS is_VBZ :_: -_: compile_VB time_NN -_: hosted_VBN mode_NN is_VBZ great_JJ ,_, but_CC you_PRP can't_VBP currently_RB use_VBP it_PRP for_IN the_DT system_NN non-default_JJ browser_NN -_: GWT_NN 2.0_CD and_CC out_IN of_IN process_NN hosted_VBD mode_NN should_MD fix_VB this_DT though_IN ._. -_: The_DT java_NN language_NN can_MD be_VB verbose_JJ at_IN times_NNS ,_, although_IN that_DT is_VBZ far_RB from_IN a_DT showstopper_NN ._. (_FW gwt_FW for_IN scala_NN would_MD be_VB awfully_RB nice_JJ :)_FW )_FW
If_IN you_PRP have_VBP familiarity_NN with_IN both_DT JavaScript_NNP and_CC Java_NNP ,_, you_PRP really_RB are_VBP perfectly_RB suited_VBN to_TO get_VB the_DT most_JJS out_IN of_IN GWT_NNP ._. What_WP many_JJ people_NNS do_VBP not_RB realize_VB is_VBZ that_IN GWT_NN is_VBZ pretty_RB well_RB layered_JJ and_CC that_IN you_PRP can_MD really_RB decide_VB which_WDT of_IN those_DT levels_NNS you_PRP want_VBP to_TO work_VB at_IN ._. For_IN instance_NN ,_, I_PRP sometimes_RB write_VB directly_RB against_IN the_DT DOM_NNP library_NN for_IN projects_NNS ._. Thats_VBZ a_DT lot_NN like_IN writing_VBG JavaScript_NNP code_NN except_IN you're_NN able_JJ to_TO use_VB an_DT IDE_NNP properly_RB and_CC get_VB the_DT power_NN of_IN a_DT compiler_NN ._. From_IN the_DT compiler_NN I_PRP get_VBP static_JJ type_NN checking_NN ,_, lots_NNS of_IN good_JJ compiler_NN optimizations_NNS ,_, and_CC (_NN actually_RB my_PRP$ favorite_NN for_IN maintaining_VBG code_NN )_FW debug_FW mode_NN assertions_NNS ._. Nobody_NN ever_RB really_RB makes_VBZ much_JJ of_IN the_DT ability_NN to_TO do_VB assertions_NNS ,_, but_CC it's_NNS so_RB nice_JJ to_TO be_VB able_JJ to_TO compile_VB a_DT debug_NN mode_NN that_WDT does_VBZ expensive_JJ checks_NNS to_TO tease_VB out_RP bugs_NNS and_CC then_RB turn_VB off_RP the_DT debug_NN mode_NN and_CC have_VBP the_DT code_NN just_RB evaporate_VBP ._. (_NN Not_RB just_RB the_DT assert_VBP statements_NNS go_VB away_RB ,_, but_CC all_PDT the_DT code_NN reachable_JJ from_IN the_DT asserts_VBZ also_RB gets_VBZ compiled_VBN out_RP )_NN ._. Other_JJ times_NNS ,_, I_PRP write_VBP code_NN against_IN GWT's_NNP UI_NNP library_NN ._. That_DT code_NN looks_VBZ a_DT bit_NN like_IN swing_NN or_CC SWT_NN code_NN so_IN it_PRP is_VBZ most_RBS comfortable_JJ to_TO pure_JJ java_NN developers_NNS ._. Working_VBG at_IN this_DT level_NN ,_, you_PRP don't_VBP have_VB to_TO worry_VB as_RB much_JJ about_IN the_DT DOM_NNP and_CC it_PRP is_VBZ usually_RB possible_JJ to_TO construct_VB an_DT application_NN without_IN writing_VBG any_DT JavaScript_NNP ._. You_PRP do_VBP occasionally_RB run_VB into_IN a_DT bug_NN where_WRB something_NN doesn't_NN work_NN consistently_RB on_IN a_DT particular_JJ browser_NN ._. The_DT GWT_NNP folks_NNS consider_VBP those_DT bugs_NNS ._. You_PRP can_MD kind_NN of_IN pick_NN what_WDT level_NN of_IN abstraction_NN you_PRP want_VBP to_TO work_VB at_IN ._. There_EX are_VBP tradeoffs_NNS at_IN each_DT level_NN ,_, but_CC GWT_NNP should_MD support_VB them_PRP ._. Also_RB ,_, full_JJ disclosure_NN :_: I'm_NN the_DT dude_NN in_IN the_DT video_NN that_IN Chi_NNP linked_VBD above_IN ,_, so_IN you_PRP might_MD say_VB I'm_NN pretty_RB attached_VBN to_TO GWT_NNP ._.
I_PRP have_VBP created_VBN two_CD quite_RB substantial_JJ GWT_NNP applications_NNS in_IN my_PRP$ three_CD years_NNS at_IN Google_NNP ._. It_PRP delivers_VBZ what_WP it_PRP promises_VBZ -_: my_PRP$ apps_NNS were_VBD far_RB more_RBR interactive_JJ and_CC far_RB more_JJR ajax-y_NN than_IN my_PRP$ knowledge_NN of_IN Javascript_NNP and_CC my_PRP$ Javascript_NNP tooling_NN would_MD have_VB let_VB me_PRP produce_VB using_VBG other_JJ tools_NNS ._. I_PRP also_RB found_VBD the_DT apps_NNS more_RBR interactive_JJ and_CC more_JJR fun_NN than_IN the_DT purely_RB server-side_JJ alternatives_NNS I_PRP had_VBD used_VBN before_IN moving_VBG to_TO it_PRP ._. It_PRP is_VBZ not_RB free_JJ of_IN warts_NNS ,_, but_CC it_PRP is_VBZ a_DT very_RB productive_JJ environment_NN to_TO do_VB the_DT kinds_NNS of_IN apps_NNS I_PRP do_VBP ._. And_CC do_VBP watch_VB Kelly's_NN presentation_NN ._. It_PRP ,_, and_CC some_DT of_IN the_DT others_NNS from_IN I_PRP /_: O_NN ,_, give_VBP a_DT really_RB clear_JJ idea_NN of_IN what_WP GWT_NNP can_MD do_VB ._. You_PRP will_MD pretty_RB quickly_RB get_VB a_DT good_JJ idea_NN of_IN whether_IN it_PRP is_VBZ the_DT right_JJ tool_NN for_IN the_DT task_NN you_PRP are_VBP envisioning_VBG ._.
I_PRP have_VBP been_VBN developing_VBG a_DT green_JJ field_NN application_NN on_IN GWT_NNP for_IN a_DT year_NN and_CC it_PRP has_VBZ been_VBN surprisingly_RB pleasant_JJ ._. The_DT subset_NN of_IN Java_NNP used_VBN in_IN GWT_NNP causes_VBZ some_DT headaches_NNS but_CC nothing_NN major_JJ after_IN all_DT ._. I_NNP didn't_NNP have_VBP too_RB much_JJ JavaScript_NNP knowledge_NN when_WRB I_PRP joined_VBD the_DT project_NN but_CC I_PRP think_VBP that_DT was_VBD not_RB a_DT problem_NN ._. The_DT common_JJ GWT_NN related_JJ problems_NNS I_PRP have_VBP encountered_VBN had_VBD usually_RB something_NN to_TO do_VB with_IN Ext_NN GWT_NN /_: GXT_NN framework_NN or_CC FCKEditor_NN integration_NN ._.
Simply_RB GWT_NNP rocks_NNS google_NN is_VBZ making_VBG "_`` google_NN wave_NN "_'' fully_RB on_IN GWT_NNP ._.
I_PRP think_VBP GWT_NNP does_VBZ what_WP it_PRP says_VBZ on_IN the_DT tin_NN ..._: Top_NNP 5_CD Reasons_NNS for_IN choosing_VBG GWT_NNP :_: Tapestry_NN can_MD be_VB overly_RB complicated_VBN and_CC the_DT learning_NN curve_NN is_VBZ pretty_RB steep_JJ for_IN new_JJ developers_NNS who_WP are_VBP starting_VBG out_RP joining_VBG the_DT team_NN ._. Esp_NNP ._. on_IN larger_JJR projects_NNS ._. I_PRP found_VBD that_IN I_PRP could_MD develop_VB "_`` richer_JJR "_'' applications_NNS using_VBG GWT_NN seeing_VBG that_IN my_PRP$ strength_NN is_VBZ Java_NNP not_RB Javascript_NNP ._. In_IN order_NN for_IN me_PRP to_TO implement_VB similar_JJ functionality_NN using_VBG Tapestry_NN I_PRP would_MD have_VB to_TO hand_VB write_VB Javascript_NNP which_WDT would_MD later_RB become_VB a_DT maintenance_NN nightmare_NN ._. Browser_NN compatibility_NN ,_, I_PRP would_MD spend_VB large_JJ amounts_NNS of_IN time_NN trying_VBG to_TO get_VB my_PRP$ hand_NN written_VBN Javascirpt_NNP to_TO work_VB on_IN all_PDT the_DT different_JJ browsers_NNS (_VBP like_IN I_PRP said_VBD Javascript_NNP is_VBZ not_RB my_PRP$ strength_NN :-)_CD The_DT GWT_NN Compiler_NN hides_VBZ me_PRP from_IN this_DT which_WDT results_VBZ in_IN me_PRP spending_VBG more_JJR time_NN writing_VBG features_NNS ._. Back_NNP button_NN blues_NNS ,_, GWT's_JJ History_NN listener_NN is_VBZ handles_VBZ the_DT browsers_NNS back_VBP button_NN in_IN comparison_NN to_TO Tapestry_NNP ._. GWT_NNP has_VBZ a_DT smaller_JJR footprint_NN because_IN only_RB the_DT data_NN is_VBZ being_VBG sent_VBN across_IN the_DT wire_NN apposed_VBN to_TO refreshing_VBG the_DT entire_JJ page_NN ._. The_DT list_NN goes_VBZ on_IN but_CC all_DT in_IN all_DT ,_, I_PRP am_VBP very_RB happy_JJ to_TO have_VB made_VBN the_DT change_NN and_CC have_VBP not_RB looked_VBN back_RB since_IN ._.
I_PRP didn't_VBP know_VB much_JJ Javascript_NNP when_WRB I_PRP tried_VBD to_TO create_VB my_PRP$ website_NN ._. In_IN fact_NN ,_, that_WDT is_VBZ why_WRB I_PRP had_VBD been_VBN putting_VBG off_RP creating_VBG the_DT website_NN ._. So_RB for_IN me_PRP ,_, GWT_NNP made_VBD a_DT huge_JJ difference_NN as_IN it_PRP enabled_VBD me_PRP to_TO create_VB a_DT dynamic_JJ ,_, cross-browser_JJ website_NN that_IN I_PRP definitely_RB would_MD not_RB have_VB been_VBN able_JJ to_TO create_VB without_IN putting_VBG in_IN significant_JJ effort_NN into_IN learning_VBG Javascript_NNP ._.
I've_NN done_VBD a_DT few_JJ projects_NNS over_IN a_DT few_JJ years_NNS and_CC it_PRP is_VBZ fantastic_JJ ._. Going_VBG back_RB to_TO JS_NN /_: JSP_NNP /_: request_NN based_JJ framework_NN is_VBZ really_RB horrible_JJ ._. Don't_NN want_VBP to_TO give_VB up_RP compile_VB time_NN checks_NNS ,_, unit_NN tests_NNS in_IN my_PRP$ IDE_NN ,_, IDE_NN refactoring_NN etc_NN ,_, sharing_VBG code_NN between_IN different_JJ tiers_NNS ,_, solid_JJ set_NN of_IN widgets_NNS ,_, incredibly_RB well_RB thought_VBN out_RP framework_NN ._. Can_MD do_VB so_RB much_RB more_RBR so_RB much_RB faster_RBR in_IN a_DT maintainable_JJ way_NN ._.
There_EX is_VBZ a_DT steep_JJ learning_NN curve_NN ,_, but_CC for_IN really_RB dynamic_JJ ui_NN applications_NNS ,_, there_EX is_VBZ just_RB no_DT way_NN that_IN you_PRP can_MD build_VB from_IN hand_NN in_IN javascript_NN as_RB efficiently_RB ._. What_WP I_PRP mean_VBP in_IN particular_JJ is_VBZ for_IN instance_NN an_DT application_NN frontend_NN for_IN a_DT service_NN where_WRB all_PDT the_DT searchable_JJ fields_NNS and_CC result_NN type_NN s_NN and_CC length_NN were_VBD completely_RB unknown_JJ ._. For_IN this_DT type_NN of_IN thing_NN ,_, a_DT dynamic_JJ runtime_NN defined_VBN ui_RB ,_, there_EX is_VBZ nothing_NN better_RBR than_IN GWT_NNP in_IN my_PRP$ opinion_NN ._. The_DT drawbacks_NNS are_VBP the_DT steep_JJ learning_NN curve_NN (_NN especially_RB for_IN non-swing_JJ Java_NNP programmers_NNS ,_, traditional_JJ request_NN /_: response_NN servlet_NN api_NN guys_NNS and_CC gals_NNS )_NN and_CC getting_VBG cornered_VBN into_IN GWT_NNP once_IN you_PRP make_VBP that_DT decision_NN ._.
