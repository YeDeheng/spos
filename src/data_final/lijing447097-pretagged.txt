java	N
and	&
javascript	V
callbacks	^
compared	V

It	O
seems	V
I	O
don't	V
understand	V
javascript	^
callbacks	^
quite	R
as	R
well	R
as	P
I	O
thought	V
.	,
In	P
the	D
following	N
example	N
,	,
I	O
would	V
think	V
that	P
each	D
copy	N
of	P
function	N
in	P
setTimeout	O
would	V
refer	V
to	P
its	L
own	A
copy	N
of	P
the	D
variable	A
"	,
index	N
"	,
.	,
Therefore	R
,	,
running	V
the	D
example	N
should	V
produce	V
the	D
following	N
alerts	V
:	,
"	,
zero	$
"	,
"	,
one	$
"	,
"	,
two	$
"	,
.	,
However	R
,	,
it	O
seems	V
that	P
theres	O
only	A
one	$
copy	N
of	P
the	D
index	N
variable	N
,	,
and	&
all	D
copies	N
of	P
the	D
callback	N
function	N
point	N
to	P
the	D
same	A
variable	N
,	,
giving	V
me	O
the	D
following	N
alerts	V
:	,
"	,
two	$
"	,
"	,
two	$
"	,
"	,
two	$
"	,
.	,
The	^
following	V
analagous	A
(	,
I	O
thought	V
)	,
example	N
in	P
java	^
prints	^
"	,
zero	$
"	,
"	,
one	$
"	,
"	,
two	$
"	,
,	,
as	P
expected	V
.	,
Can	V
anyone	O
explain	V
to	P
me	O
why	R
the	D
js	S
example	N
doesn't	V
work	N
,	,
and	&
perhaps	R
compare	V
what's	L
going	V
on	P
in	P
the	D
two	$
examples	N
?	,

Have	V
you	O
seen	V
:	,
http://stackoverflow.com/questions/442985/how-can-one-de-reference-javascript-variables-when-enclosing-an-outer-scope	U

Prestaul	^
,	,
thank	V
,	,
that's	L
pretty	R
much	A
my	D
same	A
question	N
.	,
I	O
looked	V
for	P
similar	A
questions	N
before	P
I	O
posted	V
but	&
didn't	V
find	V
this	D
one	$
.	,

I	O
asked	V
[	,
an	D
almost	R
identical][1	$
]	,
question	N
yesterday	N
and	&
got	V
a	D
couple	N
of	P
different	A
variations	N
in	P
the	D
answers	N
and	&
some	D
discussion	N
on	P
the	D
merits	N
of	P
each	D
.	,
Might	V
be	V
worth	V
a	D
look	V
[	,
1	$
]:	,
http://stackoverflow.com/questions/442985/how-can-one-de-reference-javascript-variables-when-enclosing-an-outer-scope	U

index	N
changes	V
with	P
each	D
iteration	N
of	P
the	D
loop	N
.	,
What	O
you	O
want	V
is	V
to	P
place	N
index	N
into	P
a	D
closure	N
not	R
affected	V
by	P
the	D
loop	N
:	,

Thanks	N
.	,
I	O
guess	V
I	O
thought	V
that	P
each	D
iteration	N
of	P
the	D
for	P
loop	N
would	V
create	V
a	D
closure	N
.	,

Well	!
yes	!
,	,
technically	R
I	O
left	V
that	D
part	N
out	P
.	,
There	X
*	,
is	V
*	,
a	D
closure	N
around	P
index	N
.	,
But	&
it	O
is	V
declared	V
in	P
an	D
outer	A
scope	N
to	P
the	D
function	N
passed	V
to	P
setTimeout	^
.	,
"	,
closure	N
"	,
!	,
=	G
"	,
unchanging	A
variable	A
"	,
.	,

Cool	A
.	,
One	$
more	A
question	N
:	,
why	R
does	V
the	D
function	N
declaration	N
need	V
to	P
be	V
wrapped	V
in	P
parens	^
?	,

@morgancodes	@
:	~
that's	L
just	R
convention	N
;	,
also	R
,	,
there	X
might	V
be	V
some	D
cases	N
where	R
the	D
parser	N
might	V
otherwise	R
produce	V
incorrect	A
results	N

Firefox	^
tells	V
me	O
there's	Y
a	D
syntax	N
error	N
if	P
I	O
leave	V
them	O
out	T
.	,

closures	N
in	P
javascript	^
(	,
references	N
to	P
variables	N
outside	P
the	D
function	N
)	,
retain	V
their	D
association	N
...	,
if	P
you	O
refer	V
to	P
a	D
loop	N
variable	N
in	P
a	D
function	N
called	V
after	P
the	D
loop	N
ends	N
,	,
in	P
the	D
function	N
call	V
you	O
get	V
the	D
value	N
of	P
that	D
variable	A
after	P
the	D
loop	N
.	,

the	D
function	N
call	V
/	,
parens	N
/	,
etc	G
create	V
a	D
copy	N
of	P
the	D
value	N
"	,
i	G
"	,
into	P
the	D
variable	A
"	,
index	N
"	,
,	,
at	P
the	D
time	N
of	P
each	D
iteration	N
of	P
the	D
loop	N
.	,

In	P
javascript	V
the	D
for	P
loop	N
does	V
not	R
have	V
it's	L
own	A
scope	N
-	,
so	P
a	D
var	N
you	O
create	V
inside	P
a	D
loop	N
is	V
not	R
different	A
from	P
one	$
defined	A
outside	N
of	P
it	O
.	,

Private	A
Members	N
In	P
JavaScript	^
is	V
my	D
favorite	A
reference	N
on	P
closures	N
.	,
It	O
is	V
written	V
as	P
a	D
recipe	N
for	P
providing	V
private	A
variables	N
in	P
JS	^
objects	N
(	,
maybe	R
useful	A
,	,
maybe	R
not	R
)	,
but	&
in	P
the	D
process	N
goes	V
through	P
an	D
excellent	A
introduction	N
of	P
how	R
closures	N
work	V
in	P
general	^
,	,
and	&
especially	R
in	P
JS	^
.	,
The	^
comp.lang.javascript	^
FAQ	^
has	V
a	D
worthwhile	A
section	N
on	P
closures	N
as	P
well	R
.	,
Closures	O
can	V
be	V
confusing	A
so	P
I	O
put	V
together	R
a	D
working	V
example	N
of	P
the	D
shortest	R
useful	A
closure	N
I've	L
come	V
across	P
,	,
which	O
was	V
in	P
the	D
Rhino	^
book	N
.	,
Oh	!
and	&
I	O
don't	V
have	V
enough	A
rep	N
to	P
comment	V
yet	R
:)	E
but	&
I	O
saw	V
your	D
question	N
above	P
about	P
why	R
you	O
have	V
to	P
put	V
parenthesis	N
around	P
functions	N
sometimes	R
.	,
That's	L
only	R
necessary	A
when	R
you	O
invoke	V
an	D
anonymous	A
function	N
inline	N
.	,
For	P
example	N
the	D
parenthesis	N
are	V
required	V
here	R
:	,
Because	P
you	O
are	V
creating	V
a	D
function	N
and	&
then	R
immediately	R
invoking	V
it	O
.	,
But	&
the	D
parens	N
are	V
not	R
necessary	A
in	P
the	D
usual	A
case	N
where	R
you	O
are	V
just	R
declaring	V
a	D
named	V
function	N
for	P
later	R
use	V
.	,

Thanks	^
Noah	^
.	,
that	D
rhino	N
book	N
example	N
is	V
cool	A
.	,

