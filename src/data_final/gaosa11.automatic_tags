129451	JavaScript or Java String Subtraction	^ ^ ^ ^ ^
129451	If you are using Java or JavaScript , is there a good way to do something like a String subtraction so that given two strings : you just get I know that I could just write code to walk the string comparing characters , but I was hoping there was a way to do it in really compact way . EDIT TO A DD: As I was analyzing the data I get when I use this I realized that I missed the statement of the case a bit . It should be : So , I actually only want to remove the sections that are identical . That said , the answer that I accepted is closest to my goal .	P O V V ^ & ^ , V R D A N P V N P D N N P O V $ N , O R V O V P O V R V N P V D N V N , & O V V R V D N P V O P R A N , V P ^ ^ P O V V D N O V R O V D O V P O V D N P D N D N , O V V , P , O R A V P V D N P V A , O V , D N P O V V A P D N ,
129451	I don't see how JavaScript is relevant here ...	O V V R O V A R ,
129451	How isn't it ? You never need to remove a string from another string in javascript ? Granted , all solutions have been posted in java , but that doesn't invalidate the question .	R V O , O R V P V D N P D N P ^ , N , D N V V V P N , & O V V D N ,
129451	LOL - okay then , let's tag this as Java / JavaScript / C# / VB.NET / Python / Ruby / erlang / Smalltalk / Lisp / etc ... My point is , JavaScript and Java have nothing in common other than syntax shared with C# , C , C++ , etc . and this is not really a JavaScript solution .	! , ! R , L V D P ^ ^ ^ , ^ , ^ , ^ ^ ^ , ! , ^ , ^ , G ~ D N V , ^ & ^ V N P ^ A P N V P ^ , G , ^ , G , & D V R R D N N ,
129451	Should work ... EDIT : Apache commons libraries are also great to use As noted below , the StringUtils class does in fact have a method for this : StringUtils.remove()	V N , V , ^ N N V R A P V P V P , D ^ N V P N V D N P D , ^
129451	Can't you just replace the occurrences of the first string in the second with an empty string ?	V O R V D N P D A N P D A P D A N ,
129451	Depends on precisely what you want . If you're looking for a way to compare strings in the general case -- meaning finding common sub-strings between arbitrary inputs -- then you're looking at something closer to the Levenshtein distance and similar algorithms . However , if all you need is prefix / suffix comparison , this should work : ... or something roughly to that effect .	V P R O O V , P L V P D N P V N P D A N , V V N N P A N , R L V P N R P D N N & A N , R , P X O V V N , N N , O V N , ~ & N R P D N ,
129451	Thanks Chris and Daniel ( and all the rest of you ) . That was amazingly fast .	^ ^ & ^ , & X D N P O , , O V R R ,
129451	This seems like way too much code for what's requested - Erickson's approach ( replace string B in string A with empty string ) is much simpler and readable .	D V P N R A N P L V , Z N , V N G P V ^ P A N , V R A & A ,
129451	@Herb Agreed , I do like Erickson's ( and Chris's ) approach much better for readability . However , his doesn't enforce strict prefix / suffix . The problem I have is the question is a bit ill-defined : what does String difference really mean ?	@ ! , O V P Z , & Z , V R R P N , R , D V V A N , N , D N O V V D N V D N A , O V N N R V ,
129451	If you're just trying to get whatever's after the last dot , I find this method easy in Javascript : subString will contain the value you're looking for .	P L R V P V Z P D A N , O V D N A P ^ , V V V D N L V P ,
129451	At first glance , I thought of RegExp , but adding to the question , you removed that possibility by adding to the start-string ... So you'll have to make a procedure , that takes every character that are equal out of the resulting string , something like this : By the way it doesn't have a meaning to set Java and javascript as equals in any context , a popular way of putting it could be : Java and javascript has four things in common : j - a - v - a ! - )	P A N , O V P ^ , & V P D N , O V D N P V P D G ~ P L V P V D N , O V D N P V A N P D A N , N P D , P D N O V V D N P V ^ & V P V P D N , D A N P V O V V , ^ & N V $ N P N , N , D G G , D , E E
129451	Though this relies on that the character with code 1 does not appear in any of those strings .	P D V P O D N P N $ V R V P D P D N ,
