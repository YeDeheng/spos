Java	^
:	,
Scripting	V
language	N
(	,
macro	E
)	E
to	P
embed	V
into	P
a	D
Java	^
desktop	A
application	N

I	O
am	V
writing	V
a	D
graphics	N
application	N
in	P
Java	^
.	,
Eventually	R
I	O
would	V
like	V
to	P
build	V
in	P
a	D
scripting	N
language	N
so	P
things	N
are	V
programmable	A
.	,
Which	D
language	N
library	N
do	V
you	O
recommend	V
?	,
Likely	A
suspects	N
are	V
:	,
Rhino	^
(	,
JavaScript	^
)	,
JRuby	^
(	,
Ruby	^
)	,
Jython	^
(	,
Python	N
)	,
Less	R
likely	A
candidates	N
are	V
:	,
Whip	^
up	P
my	D
own	A
language	N
using	V
JavaCC	^
LuaJava	^
(	,
Lua	^
)	,
Groovy	^
JavaFX	^
Script-Fu	^
The	^
target	N
audience	N
are	V
probably	R
not	R
hardcore	A
programmers	N
,	,
so	R
less	A
arcane	A
language	N
is	V
preferred	A
.	,
My	D
guess	N
is	V
that	D
JavaScript	N
is	V
more	R
acceptable	A
by	P
them	O
even	R
with	P
its	D
quirks	N
just	R
because	P
they've	L
seen	V
it	O
more	R
.	,
Lua	^
seems	V
to	P
be	V
popular	A
in	P
C	G
/	,
C++	^
,	,
but	&
at	P
least	R
LuaJava	^
requires	V
additional	A
.	,
dll	^
/	,
.	,
so	R
,	,
which	O
makes	V
deployment	N
complicated	V
.	,
EDIT	V
:	,
PhiLho	^
wrote	V
that	D
there's	Y
a	D
Java	^
implementation	N
of	P
Lua	^
called	V
kahlua	^
.	,
Related	V
questions	N
:	,
Which	^
scripting	V
language	N
to	P
support	V
in	P
an	D
existing	V
codebase	N
?	,
(	,
in	P
C	G
/	E
C++	E
)	E
Adding	V
Scripting	V
functionality	N
to	P
.	,
net	N
Apps	V
What	O
is	V
the	D
best	A
scripting	N
language	N
to	P
embed	V
in	P
a	D
C#	^
desktop	A
application	N
.	,

if	P
the	D
target	N
audience	N
is	V
"	,
no	D
programming	N
skills	N
....	,
"	,
choose	V
jython	N
(	,
python	N
)	,
it	O
is	V
easy	A
to	P
learn	V
.	,
(	,
my	D
7	$
year	A
old	A
daugther	N
learned	V
it	O
very	R
quick	A
)	,
Bruce	^
Eckel	^
made	V
a	D
chapter	N
with	P
jython	N
in	P
"	,
thinking	V
in	P
java	N
"	,
.	,
at	P
the	D
danger	N
getting	V
a	D
"	,
down-vote	N
"	,
python	N
is	V
easier	A
as	P
BASIC	^
:-)	E

+1	$
for	P
-BASIC	^
;o	E
)	E

Lua	^
is	V
appreciated	V
,	,
among	P
other	A
things	N
,	,
by	P
the	D
simplicity	N
of	P
the	D
language	N
,	,
making	V
it	O
easy	A
to	P
learn	V
.	,
LuaJava	^
uses	V
the	D
original	A
Lua	^
implementation	N
,	,
making	V
it	O
complete	A
,	,
but	&
as	P
you	O
point	V
it	O
,	,
maybe	R
delicate	A
to	P
install	V
.	,
I	O
know	V
at	P
least	R
a	D
pure	A
Java	^
implementation	N
of	P
Lua	^
:	,
Kahlua	^
.	,
It	O
is	V
not	R
complete	A
(	,
lacking	V
coroutine	O
support	V
among	P
other	A
things	N
,	,
but	&
one	$
can	V
do	V
much	R
without	P
them	O
)	,
but	&
perhaps	R
already	R
usable	A
for	P
your	D
goal	N
.	,
Unlike	P
,	,
say	V
,	,
Groovy	^
,	,
it	O
shouldn't	V
add	V
much	R
overhead	A
to	P
your	D
application	N
...	,

There's	L
also	R
BeanShell	^
,	,
which	O
has	V
the	D
advantage	N
of	P
being	V
a	D
fully-approved	A
JSR	N
,	,
and	&
so	R
perhaps	R
more	R
likely	A
to	P
stick	V
around	P
.	,
http://www.beanshell.org	U
/	,

Plus	A
side	N
:	,
it's	L
basically	R
dynamic	A
Java	^
,	,
so	P
it's	L
really	R
easy	A
to	P
attach	V
it	O
to	P
a	D
Java	^
program	N
.	,
Minus	P
side	N
:	,
it's	L
basically	R
dynamic	A
Java	^
,	,
so	P
it	O
might	V
not	R
be	V
the	D
easiest	A
language	N
to	P
learn	V
.	,

If	P
I	O
like	V
Java	^
,	,
and	&
I	O
use	V
Java	^
,	,
but	&
I	O
don't	V
want	V
my	D
users	N
to	P
know	V
that	P
they	O
are	V
running	V
Java	^
app	N
,	,
is	V
that	D
sort	N
of	P
like	V
being	V
ashamed	A
of	P
ugly	A
girl	N
friend	N
?	,
No	!
,	,
right	R
?	,

You	O
might	V
consider	V
Jacl	^
.	,
It	O
is	V
based	V
on	P
Tcl	^
which	O
was	V
originally	R
designed	V
to	P
be	V
an	D
embeddable	N
scripting	N
language	N
.	,
So	P
,	,
one	O
could	V
argue	V
it	O
is	V
much	R
more	R
suited	V
for	P
that	D
purpose	N
than	P
other	A
scripting	N
languages	N
that	O
had	V
the	D
ability	N
to	P
be	V
embedded	V
tacked-on	^
.	,
Particularly	R
if	P
the	D
target	N
audience	N
is	V
"	,
not	R
hardcore	A
programmers	N
"	,
,	,
Jacl	^
makes	V
a	D
fine	A
choice	N
.	,
Intelligent	A
people	N
(	,
and	&
especially	R
those	O
without	P
hard-wired	A
programming	N
prejudices	N
)	,
can	V
easily	R
pick	V
up	T
the	D
Tcl	^
syntax	N
in	P
a	D
morning	N
.	,

If	P
you	O
wanted	V
to	P
go	V
all	R
out	P
you	O
could	V
utilize	V
scripting	V
for	P
the	D
Java	^
Platform	^
as	P
defined	A
by	P
JSR	^
223	$
.	,
Taking	V
that	D
approach	N
would	V
allow	V
the	D
application	N
to	P
utilize	V
any	D
language	N
that	P
has	V
a	D
conforming	V
script	N
engine	N
.	,

"	,
The	^
Mozilla	^
Rhino	^
engine	N
for	P
the	D
JavaScript	N
programming	N
language	N
,	,
however	R
,	,
is	V
currently	R
included	V
as	P
a	D
feature	N
in	P
the	D
JDK	^
6	$
and	&
JRE	^
6	$
libraries	N
.	,
"	,
Does	V
this	D
put	V
Rhino	^
slightly	R
ahead	R
of	P
everyone	N
else	R
?	,

In	P
theory	N
it	O
does	V
.	,
I'm	L
not	R
really	R
sure	A
that	O
is	V
what	O
has	V
happened	V
in	P
reality	N
yet	R
.	,

Java	^
6	$
already	R
has	V
javascript	R
available	A
as	P
a	D
JSR	^
223	$
scripting	N
language	N
,	,
out	R
of	P
the	D
box	N
.	,

It	D
ships	N
with	P
Rhino	^
,	,
which	D
I	O
commented	V
on	P
laz's	Z
answer	N
too	R
.	,
In	P
theory	N
,	,
this	O
is	V
the	D
official	N
endorsement	N
.	,

You	O
can	V
use	V
RelProxy	^
-	,
Java	^
,	,
it	O
provides	V
real	A
and	&
pure	A
Java	^
as	P
a	D
scripting	N
language	N
,	,
including	V
shell	N
scripts	N
made	V
with	P
Java	^
,	,
thanks	N
to	P
its	D
compilation	N
on	P
the	D
fly	N
.	,
Because	P
the	D
Java	^
"	,
script	N
"	,
is	V
executed	V
sharing	V
the	D
launcher	N
ClassLoader	^
,	,
integration	N
is	V
straightforward	A
.	,

