javascript_NN injection_NN in_IN wicket_NN
I_PRP have_VBP J2EE_NN project_NN which_WDT uses_VBZ wicket_NN framework_NN ._. I_PRP want_VBP to_TO know_VB how_WRB can_MD I_PRP prevent_VB from_IN javascript_NN injection_NN in_IN wicket_NN ?_.
Although_IN I_NNP didn't_NNP think_VBP the_DT way_NN in_IN which_WDT you_PRP formulated_VBD your_PRP$ question_NN deserved_VBD it_PRP (_VBD no_DT details_NNS ,_, no_DT background_NN ,_, no_DT example_NN problem_NN statement_NN ,_, implied_JJ susceptability_NN to_TO injection_NN ,_, etc_FW )_FW ,_, I_PRP dug_VBD up_RP some_DT details_NNS from_IN the_DT Excellent_NNP Wicket_NNP in_IN Action_NNP :_: Wicket_NNP is_VBZ secure_JJ by_IN default_NN You_PRP never_RB need_VBP to_TO worry_VB about_IN pimple-faced_JJ 14-year-olds_NNS trying_VBG to_TO hack_VB your_PRP$ web_NN application_NN ._. To_TO do_VB so_RB ,_, they_PRP would_MD have_VB to_TO hijack_VB the_DT session_NN and_CC then_RB guess_VB the_DT right_JJ page_NN identifiers_NNS and_CC version_NN numbers_NNS ,_, which_WDT would_MD be_VB relative_JJ to_TO the_DT session_NN and_CC the_DT relevant_JJ component_NN paths_NNS ._. You_PRP d_NN have_VBP to_TO be_VB a_DT persistent_JJ hacker_NN to_TO pull_VB that_IN off_IN ._. You_PRP can_MD make_VB your_PRP$ Wicket_NNP application_NN even_RB more_RBR secure_JJ from_IN the_DT default_NN by_IN encrypting_VBG requests_NNS with_IN ,_, for_IN instance_NN ,_, CryptedUrlWebRequestCodingStrategy_NNP ._.
All_DT Wicket_NNP components_NNS escape_VBP strings_NNS by_IN default_NN (_NN by_IN Labels_NNP ,_, TextFields_NNP ,_, etc_FW ._. )_NN ,_, which_WDT avoids_VBZ most_RBS common_JJ issues_NNS related_VBN to_TO javascript_NN injection_NN ._. You_PRP should_MD take_VB appropriate_JJ care_NN ,_, though_RB ,_, if_IN you_PRP disable_VBP this_DT behavior_NN (_FW component.setEscapeModelStrings_FW (_FW false_JJ )_FW )_FW for_IN some_DT reason_NN ,_, or_CC create_VB custom-rendered_JJ components_NNS (_VBP if_IN you_PRP write_VBP the_DT markup_NN directly_RB to_TO the_DT output_NN )_NN ._.
