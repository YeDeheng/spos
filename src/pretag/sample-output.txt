a	D
=	G
b	V

that's	L
my	D
fault	N

that	O
is	V
faulty	A

it's	L
my	D
fault	N

I'm	L
android	^
What's	Z
the	D
equivalent	N
of	P
Java's	Z
thread.sleep()	^
in	P
javascript	^
?	,

What	O
is	V
the	D
equivalent	N
of	P
Java's	^
Thread.sleep()	^
in	P
Javascript	^
?	,

You	O
can	V
either	D
write	V
a	D
spin	V
loop	N
(	,
a	D
loop	N
that	P
just	R
loops	V
for	P
a	D
long	A
period	N
of	P
time	N
performing	V
some	D
sort	N
of	P
computation	N
to	P
delay	V
the	D
function	N
)	,
or	&
use	V
:	,
This	D
will	V
call	V
'	,
Func1()	^
'	,
after	P
3	$
seconds	N
.	,
Edit	!
:	,
Credit	N
goes	V
to	P
the	D
commenters	N
,	,
but	&
you	O
can	V
pass	V
anonymous	A
functions	N
to	P
setTimeout	^
.	,
This	D
is	V
much	R
more	R
efficient	A
and	&
does	V
not	R
invoke	V
javascript's	L
eval	N
function	N
.	,

I	O
want	V
the	D
current	A
thread	N
to	P
go	V
for	P
waiting	V
state	N
for	P
specified	A
number	N
of	P
seconds	N

Spinning	V
a	D
loop	N
cause	R
High	A
CPU	N
utilization	N
.	,

I'd	L
prefer	V
to	P
provide	V
the	D
function	N
directly	R
as	P
an	D
argument	N
instead	R
of	P
quoting	V
the	D
function	N
name	N
:	,
setTimeout	E
(	E
function()	E
{	E
...	~
}	,
,	,
3000	$
);	G

You	O
should	V
*	,
never	R
*	,
quote	V
the	D
first	A
parameter	N
for	P
setTimeout	O
pass	V
an	D
anonymous	A
function	N
or	&
a	D
function	N
reference	N
.	,
The	D
corrected	A
version	N
is	V
:	,
setTimeout	N
(	,
Func1	^
,	,
3000	$
);	G

(	,
Quoting	V
the	D
first	A
parameter	N
of	P
setTimeout	O
invokes	V
"	,
eval()	E
"	,
unnecessarily	R
.	,
)	E

@Steve	@
,	,
if	P
you	O
want	V
to	P
pass	V
any	D
parameters	N
to	P
the	D
method	N
,	,
you	O
really	R
don't	V
have	V
that	D
option	N
,	,
you	O
must	V
quote	V
.	,

What's	L
the	D
downside	N
of	P
quoting	V
the	D
first	A
parameter	N
?	,
It	O
essentially	R
executes	V
whatever's	Z
in	P
that	D
block	N
...	,
is	V
it	O
a	D
matter	N
of	P
style	N
or	&
are	V
there	R
other	A
considerations	N
?	,

@Nick	@
:	~
No	!
,	,
if	P
you	O
want	V
to	P
pass	V
parameters	N
,	,
you	O
use	V
a	D
closure	N
.	,

Ah	!
,	,
nevermind	!
,	,
missed	V
your	D
later	R
comment	V
.	,
Thanks	^
Steve	^
.	,

@Nick	@
:	~
Daniel	^
is	V
correct	A
you	O
wrap	V
the	D
code	N
in	P
an	D
anonymous	A
function	N
.	,

There's	L
no	R
direct	A
equivalent	N
,	,
as	P
it'd	L
pause	V
a	D
webpage	N
.	,
However	R
there	R
is	V
a	D
setTimeout()	^
,	,
e.g.	N
:	,
Closure	A
example	N
(	,
thanks	!
Daniel	^
):	^
The	^
second	A
argument	N
is	V
milliseconds	N
before	P
firing	V
,	,
you	O
can	V
use	V
this	D
for	P
time	N
events	N
or	&
waiting	V
before	P
performing	V
an	D
operation	N
.	,
Edit	!
:	,
Updated	V
based	V
on	P
comments	V
for	P
a	D
cleaner	A
result	N
.	,

Again	R
,	,
*	,
never	R
*	,
quote	V
the	D
first	A
parameter	N
of	P
setTimeout	^
.	,
See	V
my	D
comments	N
on	P
Malaxeur's	Z
answer	N
for	P
more	A
info	N
.	,

The	D
simple	A
answer	N
is	V
that	O
there	R
is	V
no	D
such	A
function	N
.	,
The	D
closest	A
thing	N
you	O
have	V
is	V
:	,
Note	V
that	P
you	O
especially	R
don't	V
want	V
to	P
busy-wait	V
(	,
e.g.	N
in	P
a	D
spin	V
loop	N
)	,
,	,
since	P
your	D
browser	N
is	V
almost	R
certainly	R
executing	V
your	D
JavaScript	N
in	P
a	D
single-threaded	A
environment	N
.	,
Here	R
are	V
a	D
couple	N
of	P
other	A
SO	P
questions	N
that	D
deal	N
with	P
threads	N
in	P
JavaScript	^
:	,
http://stackoverflow.com/questions/30036/javascript-and-threads	U
http://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading	U
And	&
this	D
question	N
may	V
also	R
be	V
helpful	A
:	,
http://stackoverflow.com/questions/797115/javascript-settimeout-without-putting-code-into-a-string	U

(	E
+1	E
)	E
look	V
at	P
setTimeout()	^
and	&
setInterval()	V
in	P
javascript	D

To	P
promote	V
good	A
coding	N
practices	N
,	,
it	O
might	V
be	V
best	A
to	P
insert	V
a	D
semi-colon	N
after	P
"	,
500	$
"	,
and	&
initialise	N
"	,
millisecondsToWait	V
"	,
in	P
the	D
code	N
sample	N
(	,
e.g.	N
by	P
preceding	V
it	O
with	P
"	,
var	^
")	E
(	,
this	D
way	N
,	,
if	P
someone	N
copies	N
and	&
pastes	N
the	D
sample	N
,	,
they	O
won't	V
end	N
up	T
with	P
an	D
implied	A
global	A
)	,
.	,

Good	A
catch	N
,	,
Steve	^
.	,
I've	L
edited	V
my	D
answer	N
to	P
reflect	V
your	D
comments	N
.	,

ES6	^
will	V
have	V
a	D
new	A
operator	N
`yield`	P
which	O
can	V
be	V
used	V
to	P
"	,
simulate	V
"	,
threads	N
.	,
See	V
http://taskjs.org	U
for	P
an	D
example	N
library	N
.	,

Or	&
maybe	R
you	O
can	V
use	V
the	D
setInterval	N
function	N
,	,
to	P
call	V
a	D
particular	A
function	N
,	,
after	P
the	D
specified	A
number	N
of	P
milliseconds	N
.	,
Just	R
do	V
a	D
google	^
for	P
the	D
setInterval	N
prototype.I	^
don't	V
quite	R
recollect	V
it	O
.	,

Try	V
with	P
this	D
code	N
.	,
I	O
hope	V
it's	L
useful	A
for	P
you	O
.	,

does	V
exactly	R
what	O
it	O
is	V
supposed	A
to	P

This	D
doesn't	V
put	V
the	D
thread	N
to	P
sleep	V
,	,
it	O
just	R
consumes	V
the	D
thread	N
with	P
wasteful	A
calculation	N
that	P
is	V
likely	R
to	P
block	V
the	D
UI	^
.	,
Not	R
recommended	A
.	,

That's	L
a	D
"	,
busy	A
wait	N
"	,
a.k.a	A
you	O
are	V
"	,
burning	V
the	D
thread	N
"	,

For	P
my	D
unit	N
testing	V
purposes	N
its	L
useful	A
.	,
Surely	R
,	,
not	R
for	P
production	N
.	,

This	D
eventually	R
helped	V
me	O
:	,

setTimeout	P
was	V
already	R
mentioned	V
a	D
looong	N
time	N
ago	R
.	,
and	&
the	D
rest	N
of	P
the	D
code	N
has	V
nothing	N
to	P
do	V
with	P
the	D
question	N
.	,

love	V
you	O
baby	N

@ciaranyree	@
it	O
was	V
on	P
football	N
wives	N
,	,
one	$
of	P
the	D
players	N
and	&
his	D
wife	N
own	N
smash	V
burger	N

RT	~
@TheRealQuailman	@
:	~
Currently	R
laughing	V
at	P
Laker	^
haters	^
.	,

RT	~
@HollywoodOompa	@
:	~
Sat	^
November	^
6	$
ill	R
be	V
at	P
Nashville	^
center	N
stage	N
for	P
the	D
ice	N
kream	N
party	N
for	P

