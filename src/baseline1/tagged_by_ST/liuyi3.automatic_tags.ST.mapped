Detecting_V a_D 64-bit_A jre_N in_P a_D 32-bit_A browser_N ?_.
Is_V there_R any_D way_N to_P detect_V a_D 64-bit_A java_N install_V in_P a_D 32-bit_A environment_N ?_. The_D Java_^ Deployment_^ Toolkit_^ detects_V nothing_N ,_, but_& I_O was_V wondering_V if_P there_X was_V some_D secret_A browser_N way_N of_P detecting_V the_D 64-bit_A install_V client-side_A ._.
Sun's_G HotSpot_G JVM_N FAQ_N :_: When_R writing_V Java_^ code_N ,_, how_R do_V I_O distinguish_V between_P 32_$ and_& 64-bit_A operation_N ?_. There's_V no_D public_A API_N that_D allows_V you_O to_P distinguish_V between_P 32_$ and_& 64-bit_A operation_N ._. Think_V of_P 64-bit_A as_P just_R another_D platform_N in_P the_D write_V once_R ,_, run_V anywhere_R tradition_N ._. However_R ,_, if_P you'd_N like_P to_P write_V code_N which_D is_V platform_N specific_A (_N shame_N on_P you_O )_V ,_, the_D system_N property_N sun.arch.data.model_N has_V the_D value_N "_`` 32_$ "_'' ,_, "_'' 64_$ "_'' ,_, or_& "_`` unknown_A "_'' ._. You_O can_V access_V this_D like_A System.getProperty_N (_N "_'' sun.arch.data.model_G ")_G ._. This_D property_N will_V obviously_R only_R actually_R be_V set_V on_P Sun_^ JVMs_^ /_: JREs_N ._. You_O might_V also_R try_V to_P parse_V the_D results_N of_P System.getProperty_N (_N "_'' java.vm.name_G ")_G ,_, but_& this_D will_V also_R be_V highly_R vendor_N specific_A ._.
I_O guess_V I_O could_V do_V this_D in_P an_D applet_N ,_, but_& I_O was_V hoping_V to_P get_V this_D information_N before_P java_N was_V necessarily_R loaded_A or_& available_A ._.
