Upload	^
image	N
thumbnail	N
to	P
server	N
,	,
without	P
uploading	V
whole	A
image	N

As	R
far	R
as	P
I	O
know	V
,	,
what	O
I	O
ask	V
here	R
isn't	V
possible	R
,	,
but	&
I	O
thought	V
I'd	L
ask	V
anyway	R
in	P
case	N
I'm	L
missing	V
something	N
.	,
Suppose	V
you	O
want	V
to	P
let	V
users	N
upload	^
JPG	^
images	N
,	,
and	&
these	D
images	N
are	V
scaled	V
into	P
smaller	A
icons	N
and	&
the	D
original	A
images	N
are	V
always	R
discarded	V
and	&
never	R
required	A
again	R
.	,
Is	V
there	R
any	D
way	N
that	P
would	V
commonly	R
work	V
in	P
most	R
modern	A
browsers	N
that	O
would	V
let	V
the	D
user	N
select	V
a	D
single	A
image	N
on	P
their	D
hard	A
drive	N
,	,
have	V
that	D
LOCALLY	N
turned	V
into	P
a	D
thumbnail	N
and	&
upload	V
the	D
created	V
thumbnail	N
to	P
a	D
server	N
?	,
In	P
a	D
case	N
where	R
the	D
server	N
just	R
needs	V
a	D
small	A
image	N
,	,
it	O
would	V
be	V
wasteful	A
both	$
in	P
user	N
time	N
and	&
server	N
resources	N
to	P
proceed	V
uploading	V
the	D
whole	A
image	N
,	,
only	A
to	P
immediately	R
discard	V
it	O
.	,
It	O
would	V
be	V
much	R
better	R
to	P
just	R
scale	V
it	O
on	P
the	D
client	N
.	,
I	O
can	V
imagine	V
three	$
options	N
.	,
Just	R
plain	A
HTML	N
/	,
Javascript	^
,	,
using	V
Flash	^
or	&
using	V
Java	^
.	,
If	P
this	D
were	V
possible	A
with	P
Flash	^
,	,
that	O
would	V
seem	V
like	P
the	D
best	A
option	N
.	,
But	&
reading	V
flash.net.FileReference	N
documentation	N
,	,
it	O
seems	V
that	P
you	O
can	V
upload	V
a	D
file	N
from	P
the	D
HD	^
yes	!
,	,
but	&
you	O
cannot	V
look	V
inside	P
the	D
file	V
you	O
are	V
uploading	V
.	,
On	P
the	D
other	A
hand	N
,	,
if	P
you	O
enable	V
"	,
can	V
access	V
local	A
files	N
"	,
in	P
Flash	^
publishing	N
options	N
,	,
it	O
seems	V
that	P
you	O
can	V
then	R
no	R
longer	A
access	N
the	D
net	N
,	,
so	P
that	O
doesn't	V
work	N
.	,
With	P
HTML	^
/	,
Javascript	^
,	,
it	O
is	V
possible	R
to	P
load	N
images	N
and	&
display	V
them	O
on	P
a	D
canvas	N
,	,
but	&
if	P
you	O
try	V
to	P
access	V
the	D
pixels	^
of	P
these	D
images	N
,	,
you	O
get	V
security	N
violations	N
,	,
so	P
that	O
doesn't	V
seem	V
to	P
work	N
.	,
Java	^
I	O
hesitate	V
to	P
use	V
,	,
because	P
only	A
96.52	$
%	N
of	P
my	D
users	N
have	V
it	O
installed	V
,	,
and	&
the	D
file	N
upload	V
dialogs	V
I	O
have	V
seen	V
implemented	V
in	P
Java	^
(	,
at	P
Facebook	^
for	P
example	N
)	,
have	V
not	R
worked	V
well	R
(	,
unresponsive	A
interface	N
)	,
.	,
I	O
wonder	V
though	P
if	P
Java	^
is	V
the	D
only	A
thing	N
allowing	V
resizing	V
images	N
from	P
local	^
HD	^
?	,

I	O
think	V
if	P
there	X
was	V
a	D
reasonably	R
reliable	A
and	&
user-friendly	A
way	N
to	P
accomplish	V
this	D
,	,
it'd	L
be	V
done	V
on	P
sites	N
like	P
Facebook	^
already	R
.	,
People	N
are	V
used	V
to	P
having	V
to	P
upload	V
the	D
original	A
image	N
...	,
it's	L
always	R
nice	A
to	P
be	V
able	A
to	P
improve	V
on	P
an	D
established	A
UX	^
,	,
but	&
if	P
you	O
can	V
only	A
match	N
it	O
,	,
you're	L
not	R
exactly	R
losing	V
out	T
.	,
JavaScript	^
is	V
out	T
,	,
because	P
JS	^
cannot	V
read	V
anything	N
directly	R
from	P
the	D
client	N
;	,
it	O
can	V
only	R
direct	A
the	D
browser	N
to	P
load	N
a	D
pre-defined	A
local	A
path	N
,	,
or	&
load	N
bytes	V
from	P
the	D
server	N
.	,
Flash's	Z
security	N
sandbox	N
also	R
prevents	V
this	D
,	,
as	P
you	O
pointed	V
out	T
.	,
Java	^
has	V
a	D
different	A
set	N
of	P
problems	N
-	,
people	N
rarely	R
install	V
applets	P
these	D
days	N
unless	P
they	O
trust	V
the	D
site	N
more	R
than	P
their	D
own	A
family	N
members	N
.	,
It's	L
also	R
apparently	R
extremely	R
difficult	A
to	P
build	V
something	R
reliable	A
and	&
usable	A
,	,
as	P
evidenced	V
by	P
Facebook-esque	A
companies	N
which	O
have	V
practically	R
unlimited	A
resources	N
to	P
throw	V
at	P
the	D
problem	N
and	&
still	R
fail	V
.	,
So	P
,	,
in	P
summary	N
-	,
no	!
,	,
and	&
don't	V
worry	V
too	R
much	A
about	P
it	O
.	,

If	P
the	D
jpeg	N
image	N
is	V
progressive	A
,	,
you	O
could	V
stop	V
uploading	V
after	P
a	D
certain	A
amount	N
of	P
resolution	N
is	V
acquired	A
.	,
This	D
will	V
require	V
a	D
bit	N
of	P
your	D
own	N
processing	N
of	P
the	D
jpeg	N
loader	N
and	&
http	U
handling	V
code	N
.	,
It's	L
also	R
a	D
pretty	R
big	A
"	,
IF	!
"	,
,	,
since	P
most	A
jpegs	N
are	V
not	R
progressive	A
by	P
default	N
.	,

"	,
If	P
this	D
were	V
possible	A
with	P
Flash	^
,	,
that	O
would	V
seem	V
like	P
the	D
best	A
option	N
.	,
"	,
As	P
I	O
understand	V
it	O
,	,
it	O
is	V
possible	R
with	P
Flash	^
Player	^
10	$
.	,
Here's	L
an	D
example	N
:	,
http://blog.kukiel.net/2009/02/file-manipulation-client-side-with.html	U
Flash	^
Player	^
10	$
currently	R
has	V
a	D
general	A
market	N
penetration	N
of	P
about	P
85-90%	$
,	,
so	R
if	P
you	O
hesitate	V
to	P
use	V
Java	^
because	P
only	A
96.52	$
%	N
of	P
your	D
user	N
have	V
it	O
installed	V
,	,
I	O
guess	V
you	O
wouldn't	V
want	V
to	P
require	V
Flash	^
Player	^
10	$
either	&
.	,

Good	A
Link	N
.	,
Since	P
FlashPlayer	^
10	$
,	,
it's	L
possible	A
to	P
manipulate	V
,	,
or	&
,	,
better	R
said	V
,	,
interpret	V
data	N
on	P
client	N
side	N
.	,

Another	D
way	N
is	V
to	P
use	V
Google's	^
Gears	^
,	,
ex	N
.	,
:	,
Gears	^
Uploader	^
.	,

I	O
think	V
that	P
you	O
can	V
upload	V
the	D
image	N
to	P
server	N
,	,
then	R
show	V
it	O
in	P
the	D
browser	N
,	,
then	R
the	D
user	N
will	V
be	V
resize	V
it	O
using	V
javascript	N
,	,
but	&
not	R
real	A
resize	N
,	,
only	R
capture	V
the	D
coordenate	N
of	P
it	O
,	,
then	R
you	O
can	V
use	V
the	D
coordeante	N
to	P
resize	V
the	D
image	N
in	P
the	D
server	N
and	&
save	V
the	D
new	A
image	N
(	,
thumb	N
)	,
and	&
discard	V
the	D
original	N
.	,

