URL	N
decoding	N
in	N
Javascript	N

I	N
want	N
to	N
decode	N
a	N
string	N
that	N
has	N
been	N
encoded	N
using	N
the	N
java.net.URLEncoder.encode()	N
method	N
.	N
I	N
tried	N
using	N
the	N
unescape()	N
function	N
in	N
javascript	N
,	N
but	N
a	N
problem	N
occurs	N
for	N
blank	N
spaces	N
because	N
java.net.URLEncoder.encode()	N
converts	N
a	N
blank	N
space	N
to	N
'	N
+	N
'	N
but	N
unescape()	N
won't	N
convert	N
'	N
+	N
'	N
to	N
a	N
blank	N
space	N
.	N

Try	N
decodeURI	N
(	N
"")	N
or	N
decodeURIComponent	N
(	N
"")	N
!	N
-	N
)	N

Just	N
because	N
it	N
takes	N
a	N
string	N
as	N
argument	N
!	N
-	N
)	N

Using	N
JavaScript's	N
escape	N
/	N
unescape	N
function	N
is	N
almost	N
always	N
the	N
wrong	N
thing	N
,	N
it	N
is	N
incompatible	N
with	N
URL-encoding	N
or	N
any	N
other	N
standard	N
encoding	N
on	N
the	N
web	N
.	N
Non-ASCII	N
characters	N
are	N
treated	N
unexpectedly	N
as	N
well	N
as	N
spaces	N
,	N
and	N
older	N
browsers	N
don't	N
necessarily	N
have	N
the	N
same	N
behaviour	N
.	N
As	N
mentioned	N
by	N
roenving	N
,	N
the	N
method	N
you	N
want	N
is	N
decodeURIComponent()	N
.	N
This	N
is	N
a	N
newer	N
addition	N
which	N
you	N
won't	N
find	N
on	N
IE	N
5.0	N
,	N
so	N
if	N
you	N
need	N
to	N
support	N
that	N
browser	N
(	N
let's	N
hope	N
not	N
,	N
nowadays	N
!	N
)	N
you'd	N
need	N
to	N
implement	N
the	N
function	N
yourself	N
.	N
And	N
for	N
non-ASCII	N
characters	N
that	N
means	N
you	N
need	N
to	N
implement	N
a	N
UTF-8	N
encoder	N
.	N
Code	N
is	N
available	N
if	N
you	N
need	N
it	N
.	N

decodeURI[Component	N
]	N
doesn't	N
handle	N
+	N
as	N
space	N
either	N
(	N
at	N
least	N
on	N
FF3	N
,	N
where	N
I	N
tested	N
)	N
.	N
Simple	N
workaround	N
:	N
Indeed	N
,	N
unescape	N
chokes	N
on	N
this	N
URL	N
:	N
it	N
knows	N
only	N
UTF-16	N
chars	N
like	N
%u2318	N
which	N
are	N
not	N
standard	N
(	N
see	N
Percent-encoding	N
)	N
.	N

Try	N

