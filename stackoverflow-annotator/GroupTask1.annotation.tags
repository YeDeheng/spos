1		I am wondering about any " best practices " to integrate a " modern JavaScript build workflow " into a Maven build that produces a WAR artifact . I have found several maven plugins that handle concatenation and minification : WRO4J : https://code.google.com/p/wro4j/wiki/MavenPlugin Minify Maven Plugin : https://github.com/samaxes/minify-maven-plugin YUI : http://alchim.sourceforge.net/yuicompressor-maven-plugin/ However I am still missing how they fit into a full build workflow , since I think it is mandatory to be able to switch concatenation/minification on and off : For development I want to build a WAR that does not contain the concatenated/minified resources so that I can conveniently debug . For a production build I want to produce a WAR that contains the concatenated/minified resources . Additionally for the production build I then have to " rewrite " the script URLs in my html to point to the concatenate/minified version(s) of the script(s) . In the JavaScript world I would use Grunt with different grunt tasks ( uglify , usemin ) to achieve the above workflow . How can I achieve the same in a Maven build ?	O V V P D , A N , P V D , A ^ V N , P D ^ V D V D ^ N . O V V A ^ N D V N & N , ^ , U ^ ^ N , U ^ , U R O V R V R O V P D A V N , P O V O V A P V A P V N P & P : P N O V P V D ^ D V R V D V N P P O V R V , P D N V O V P V D ^ D V D V N . R P D N V O R V P , V , D N N P D ^ P V P D V N P D N . P D ^ N O V V ^ P A ^ N , N , N , P V D A N , R V O V D A P D ^ V ,		Mon Aug 10 2015 22:41:24 GMT+0800 (Malay Peninsula Standard Time)
1		I am wondering about any " best practices " to integrate a " modern JavaScript build workflow " into a Maven build that produces a WAR artifact . I have found several maven plugins that handle concatenation and minification : WRO4J : https://code.google.com/p/wro4j/wiki/MavenPlugin Minify Maven Plugin : https://github.com/samaxes/minify-maven-plugin YUI : http://alchim.sourceforge.net/yuicompressor-maven-plugin/ However I am still missing how they fit into a full build workflow , since I think it is mandatory to be able to switch concatenation/minification on and off : For development I want to build a WAR that does not contain the concatenated/minified resources so that I can conveniently debug . For a production build I want to produce a WAR that contains the concatenated/minified resources . Additionally for the production build I then have to " rewrite " the script URLs in my html to point to the concatenate/minified version(s) of the script(s) . In the JavaScript world I would use Grunt with different grunt tasks ( uglify , usemin ) to achieve the above workflow . How can I achieve the same in a Maven build ?	O V V P D G A N V P V D N A ^ V N N P D ^ V D V D N N . O V V A N N D V N & N : ^ : U ^ ^ N : U ^ : U R O V R V R O V P D A V N , P O V O V A P V A P V N P & P : P N O V P V D N D V R V D V N P P O V R V . P D N V O V P V D N D V D V N . R P D N V O R V P V V P D N N P D N P V P D V N P D N . P D ^ N O V V ^ P A N N V N , N N P V D A N . R V O V D A P D ^ V .		Mon Aug 10 2015 22:43:22 GMT+0800 (SGT)
1		I am wondering about any " best practices " to integrate a " modern JavaScript build workflow " into a Maven build that produces a WAR artifact . I have found several maven plugins that handle concatenation and minification : WRO4J : https://code.google.com/p/wro4j/wiki/MavenPlugin Minify Maven Plugin : https://github.com/samaxes/minify-maven-plugin YUI : http://alchim.sourceforge.net/yuicompressor-maven-plugin/ However I am still missing how they fit into a full build workflow , since I think it is mandatory to be able to switch concatenation/minification on and off : For development I want to build a WAR that does not contain the concatenated/minified resources so that I can conveniently debug . For a production build I want to produce a WAR that contains the concatenated/minified resources . Additionally for the production build I then have to " rewrite " the script URLs in my html to point to the concatenate/minified version(s) of the script(s) . In the JavaScript world I would use Grunt with different grunt tasks ( uglify , usemin ) to achieve the above workflow . How can I achieve the same in a Maven build ?	O V V P D G A N V P V D N A ^ V N N P D ^ V D V D N N . O V V A N N D V N & N : ^ : ^ ^ ^ ^ : A ^ : A R O V R V R O V P D A V N , P O V O V A P V A P V N P & P : P N O V P V D N D V R V D V N P P O V R V . P D N V O V P V D N D V D V N . R P D N V O R V P V V P D N N P D N P V P D V N P D N . P D ^ N O V V ^ P A N N V N , N N P V D A N . R V O V D A P D ^ A A		Wed Aug 12 2015 13:30:29 GMT+0800 (SGT)
18553292		JavaScript minification workflow with Maven	^ N N P ^		Mon Aug 24 2015 17:34:06 GMT+0800 (Malay Peninsula Standard Time)
