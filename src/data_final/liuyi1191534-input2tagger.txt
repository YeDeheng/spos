Closing	N
popups	N
on	N
session	N
expiry	N

Here	N
is	N
the	N
thing	N
:	N
my	N
webapp	N
has	N
loads	N
of	N
popups	N
and	N
my	N
boss	N
wants	N
'	N
em	N
closed	N
on	N
session	N
expiry	N
,	N
coz	N
when	N
session	N
expires	N
and	N
an	N
user	N
presses	N
refresh	N
on	N
a	N
popup	N
,	N
he	N
is	N
being	N
shown	N
the	N
logon	N
page	N
->	N
user	N
logs	N
on	N
->	N
user	N
is	N
directed	N
to	N
the	N
dashboard	N
.	N
Now	N
,	N
a	N
dashboard	N
screen	N
in	N
a	N
popup	N
is	N
totally	N
uncool	N
.	N
Here	N
is	N
where	N
google	N
got	N
me	N
:	N
Have	N
javascript	N
to	N
close	N
popup	N
onload	N
.	N
Generate	N
this	N
onload	N
script	N
into	N
the	N
response	N
if	N
session	N
has	N
expired	N
(	N
checking	N
session	N
expiry	N
from	N
jsp	N
and	N
including	N
onload	N
script	N
conditionally	N
)	N
.	N
Do	N
you	N
think	N
this	N
is	N
a	N
good	N
way	N
to	N
it	N
?	N
What	N
is	N
the	N
best	N
practice	N
for	N
this	N
scenario	N
?	N
P.S	N
:	N
I	N
am	N
not	N
allowed	N
to	N
use	N
AJAX	N

The	N
best	N
practice	N
is	N
to	N
not	N
use	N
"	N
loads	N
of	N
popups	N
"	N
.	N
That	N
aside	N
,	N
when	N
you	N
talk	N
about	N
closing	N
popup	N
in	N
"	N
onload	N
"	N
event	N
what	N
would	N
really	N
happen	N
is	N
user	N
would	N
refresh	N
the	N
popup	N
and	N
it	N
would	N
close	N
(	N
which	N
would	N
be	N
REALLY	N
weird	N
from	N
user's	N
standpoint	N
)	N
OR	N
user	N
would	N
get	N
a	N
prompt	N
from	N
the	N
browser	N
(	N
close	N
this	N
window	N
?	N
yes	N
/	N
no	N
)	N
which	N
is	N
equally	N
weird	N
.	N

@ChssPly76	N
-	N
yes	N
,	N
from	N
an	N
user	N
standpoint	N
,	N
it's	N
probably	N
weird	N
.	N
But	N
,	N
designing	N
data-oriented	N
applications	N
without	N
pop-ups	N
is	N
one	N
heck	N
of	N
a	N
challenge	N
.	N

I'm	N
ok	N
with	N
popups	N
as	N
long	N
as	N
I	N
don't	N
need	N
any	N
of	N
the	N
information	N
behind	N
it	N
.	N
If	N
I	N
do	N
,	N
I	N
get	N
pissed	N
at	N
them	N
and	N
curse	N
the	N
designers	N
.	N

The	N
_only_	N
possible	N
excuse	N
for	N
using	N
popup	N
windows	N
is	N
a	N
requirement	N
for	N
application	N
to	N
function	N
without	N
javascript	N
because	N
then	N
you	N
can	N
at	N
least	N
do	N
some	N
stuff	N
via	N
`	N

The	N
best	N
way	N
would	N
be	N
an	N
XMLHTTP	N
request	N
to	N
check	N
login	N
and	N
close	N
them	N
if	N
required	N
-	N
do	N
this	N
periodically	N
.	N
Astute	N
readers	N
(	N
meaning	N
everyone	N
)	N
will	N
notice	N
that	N
this	N
is	N
an	N
AJAX	N
request	N
,	N
but	N
if	N
you	N
phrase	N
it	N
that	N
way	N
it	N
might	N
get	N
accepted	N
as	N
whoever	N
dictated	N
that	N
you	N
'	N
aren't	N
allowed	N
to	N
use	N
AJAX	N
'	N
is	N
clearly	N
an	N
idiot	N
.	N

@Luke	N
the	N
corporate	N
IT	N
teams	N
of	N
non-IT	N
core	N
companies	N
are	N
loaded	N
with	N
idiots	N
who	N
would	N
tell	N
you	N
not	N
to	N
use	N
AJAX	N
:-)	N
:	N
And	N
my	N
boss	N
is	N
one	N
of	N
'	N
em	N
!	N

Won't	N
the	N
periodic	N
HTTP	N
request	N
keep	N
the	N
session	N
alive	N
?	N

then	N
they	N
are	N
screwed	N
.	N
and	N
so	N
are	N
you	N
if	N
your	N
boss	N
reads	N
that	N
you	N
just	N
called	N
him	N
an	N
idiot	N
...	N

@matt	N
b	N
:	N
not	N
if	N
you	N
keep	N
record	N
of	N
the	N
last	N
user	N
activity	N
.	N

@matt	N
b	N
-	N
George	N
said	N
what	N
I	N
was	N
going	N
to	N
say	N
:)	N

In	N
a	N
past	N
life	N
,	N
I	N
made	N
a	N
popup	N
manager	N
object	N
that	N
maintained	N
what	N
windows	N
were	N
open	N
.	N
You	N
should	N
probably	N
make	N
one	N
of	N
these	N
if	N
not	N
already	N
done	N
.	N
Then	N
,	N
you	N
can	N
use	N
setTimeout	N
to	N
call	N
a	N
function	N
after	N
so	N
many	N
minutes	N
(	N
or	N
whatever	N
time	N
you	N
want	N
)	N
have	N
gone	N
by	N
.	N
This	N
will	N
check	N
for	N
recent	N
activity	N
(	N
probably	N
via	N
AJAX	N
)	N
and	N
close	N
the	N
popup	N
if	N
you	N
determine	N
that	N
the	N
session	N
has	N
expired	N
.	N
If	N
not	N
,	N
call	N
setTimeout	N
again	N
with	N
your	N
new	N
time	N
,	N
properly	N
adjusted	N
for	N
most	N
recent	N
activity	N
.	N
^^before	N
the	N
AJAX	N
edit	N
.	N
Well	N
,	N
since	N
you	N
can't	N
use	N
AJAX	N
,	N
can	N
you	N
put	N
something	N
in	N
the	N
url	N
that	N
will	N
tell	N
you	N
it's	N
a	N
popup	N
?	N
Then	N
you'll	N
know	N
not	N
to	N
show	N
the	N
login	N
screen	N
when	N
the	N
user	N
hits	N
reload	N
.	N

If	N
your	N
boss	N
is	N
asking	N
you	N
to	N
achieve	N
this	N
,	N
without	N
using	N
AJAX	N
,	N
then	N
you're	N
in	N
trouble	N
.	N
He	N
should	N
understand	N
that	N
the	N
only	N
connection	N
a	N
browser	N
has	N
to	N
the	N
server	N
(	N
without	N
refreshing	N
the	N
page	N
)	N
is	N
javascript	N
(	N
what	N
he	N
understands	N
to	N
be	N
ajax	N
)	N
.	N
The	N
best	N
way	N
to	N
do	N
this	N
is	N
to	N
setup	N
a	N
script	N
on	N
the	N
pages	N
to	N
ask	N
the	N
server	N
if	N
the	N
user	N
is	N
still	N
logged	N
in	N
every	N
30	N
seconds	N
or	N
so	N
.	N
This	N
script	N
assumes	N
you're	N
using	N
the	N
jQuery	N
framework	N
for	N
rapid	N
development	N
of	N
javascript	N
solutions	N
.	N
This	N
also	N
uses	N
JSON	N
(	N
Javascript	N
Object-notation	N
)	N
to	N
test	N
a	N
return-value	N
from	N
the	N
loggedin.php	N
file	N
.	N
Bottom	N
line	N
,	N
you	N
need	N
to	N
use	N
AJAX	N
.	N
Tell	N
your	N
boss	N
there	N
is	N
no	N
other	N
way	N
.	N
If	N
he	N
still	N
doesn't	N
get	N
it	N
,	N
ask	N
him	N
to	N
balance	N
his	N
checkbook	N
without	N
using	N
math	N
.	N

Or	N
just	N
tell	N
your	N
boss	N
that	N
you're	N
brilliant	N
and	N
figured	N
out	N
a	N
way	N
to	N
do	N
it	N
with	N
Javascript	N
instead	N
of	N
AJAX	N

Well	N
,	N
the	N
J	N
in	N
AJAX	N
is	N
javascript	N
.	N
If	N
its	N
not	N
async	N
(	N
A	N
)	N
and	N
not	N
xml	N
(	N
X	N
)	N
based	N
,	N
then	N
he	N
can	N
build	N
a	N
case	N
saying	N
that	N
he's	N
not	N
using	N
AJAX	N
,	N
unfortunately	N
,	N
the	N
example	N
uses	N
JQuery	N
and	N
underneath	N
the	N
hood	N
,	N
it	N
is	N
using	N
the	N
A	N
,	N
J	N
and	N
X	N
of	N
AJAX	N
.	N

An	N
alternative	N
way	N
to	N
implement	N
modal	N
dialogs	N
in	N
a	N
web	N
application	N
is	N
to	N
:	N
Model	N
the	N
dialog	N
in	N
a	N
DIV	N
,	N
default	N
styled	N
to	N
display	N
:	N
none	N
;	N
On	N
desired	N
action	N
,	N
inject	N
/	N
append	N
the	N
Modal	N
dialog	N
DIV	N
into	N
the	N
page	N
source	N
Reset	N
the	N
CSS	N
display	N
so	N
the	N
modal	N
dialog	N
DIV	N
is	N
visible	N
,	N
overlaid	N
on	N
top	N
of	N
the	N
page	N
by	N
setting	N
the	N
CSS	N
z-index	N
property	N
Make	N
the	N
modal	N
dialog	N
disappear	N
upon	N
either	N
successful	N
execution	N
or	N
the	N
user	N
cancelling	N
out	N
Because	N
the	N
modal	N
dialog	N
is	N
part	N
of	N
the	N
page	N
source	N
,	N
the	N
dialog	N
will	N
disappear	N
when	N
the	N
session	N
times	N
out	N
.	N
This	N
approach	N
doesn't	N
spawn	N
supporting	N
windows	N
that	N
can	N
be	N
orphaned	N
as	N
the	N
poster	N
is	N
attempting	N
to	N
address	N
.	N
And	N
it	N
fits	N
the	N
requirement	N
of	N
not	N
using	N
AJAX	N
.	N
You	N
can	N
code	N
these	N
by	N
hand	N
,	N
but	N
I	N
don't	N
really	N
recommend	N
it	N
because	N
of	N
having	N
to	N
support	N
various	N
browser	N
.	N
I	N
suggest	N
looking	N
at	N
the	N
Yahoo	N
User	N
Interface	N
.	N
You	N
can	N
tailor	N
it	N
to	N
suit	N
your	N
needs	N
(	N
IE	N
:	N
only	N
modal	N
dialogs	N
)	N
,	N
and	N
it	N
would	N
support	N
AJAX	N
if	N
requirements	N
change	N
down	N
the	N
road	N
.	N
Beware	N
of	N
spawning	N
modal	N
dialogs	N
from	N
modal	N
dialogs	N
.	N

In	N
theory	N
,	N
you	N
could	N
avoid	N
AJAX	N
by	N
using	N
a	N
hidden	N
flash	N
widget	N
...	N
But	N
more	N
practically	N
,	N
AJAX	N
is	N
the	N
'	N
right	N
'	N
solution	N
,	N
and	N
I	N
think	N
you	N
will	N
have	N
to	N
talk	N
to	N
your	N
boss	N
,	N
determine	N
where	N
this	N
'	N
no	N
AJAX	N
'	N
rule	N
came	N
from	N
,	N
and	N
convince	N
him	N
that	N
AJAX	N
is	N
the	N
best	N
way	N
to	N
solve	N
this	N
problem	N
.	N
Does	N
he	N
think	N
AJAX	N
would	N
be	N
take	N
too	N
much	N
time	N
to	N
implement	N
?	N
If	N
so	N
,	N
you	N
should	N
prove	N
him	N
wrong	N
.	N
Does	N
he	N
think	N
it	N
will	N
be	N
hard	N
to	N
maintain	N
?	N
If	N
so	N
,	N
show	N
how	N
simple	N
the	N
code	N
to	N
do	N
this	N
will	N
be	N
,	N
and	N
how	N
widely	N
used	N
the	N
common	N
AJAX	N
libraries	N
are	N
.	N
If	N
your	N
boss	N
is	N
reasonable	N
,	N
then	N
his	N
goal	N
is	N
to	N
what	N
is	N
best	N
for	N
the	N
product	N
,	N
and	N
you	N
should	N
be	N
able	N
to	N
reason	N
with	N
him	N
.	N

