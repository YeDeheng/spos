The	N
Google	N
Maps	N
Wikipedia	N
Layer	N

Is	N
there	N
a	N
way	N
to	N
programmatically	N
list	N
all	N
geo-tagged	N
Wikipedia	N
entries	N
within	N
a	N
radius	N
of	N
a	N
long	N
/	N
lat	N
point	N
?	N
I'm	N
thinking	N
this	N
is	N
possible	N
with	N
the	N
google	N
maps	N
API	N
but	N
I	N
am	N
interested	N
in	N
any	N
method	N
.	N
NOTE	N
:	N
I	N
do	N
not	N
want	N
to	N
display	N
a	N
googlemap	N
.	N

Yes	N
,	N
it's	N
possible	N
.	N
The	N
hard	N
part	N
is	N
either	N
:	N
(	N
1	N
)	N
Screen-scraping	N
Wikipedia	N
(	N
bad	N
idea	N
,	N
unless	N
you	N
already	N
have	N
a	N
(	N
small	N
)	N
list	N
of	N
target	N
pages	N
)	N
(	N
2	N
)	N
Downloading	N
and	N
parsing	N
the	N
massive	N
Wikipedia	N
data	N
sets	N
(	N
better	N
idea	N
)	N
Once	N
you	N
have	N
lat	N
/	N
long	N
coordinates	N
,	N
which	N
I	N
assume	N
are	N
in	N
the	N
wiki	N
page's	N
geotag	N
format	N
,	N
you	N
can	N
use	N
the	N
great	N
circle	N
formula	N
to	N
compute	N
relative	N
distances	N
,	N
and	N
bypass	N
Google's	N
API	N
entirely	N
.	N
The	N
moral	N
of	N
this	N
story	N
?	N
When	N
you've	N
dealing	N
with	N
datasets	N
this	N
massive	N
,	N
you're	N
going	N
to	N
want	N
to	N
do	N
as	N
much	N
of	N
it	N
offline	N
as	N
possible	N
.	N

I've	N
solved	N
a	N
slightly	N
similar	N
problem	N
by	N
using	N
the	N
GeoNames	N
webservices	N
.	N
You	N
can	N
use	N
the	N
webservice	N
to	N
request	N
cities	N
and	N
so	N
on	N
.	N
There	N
is	N
a	N
per-ip-limitation	N
you	N
may	N
not	N
exceed	N
.	N
I	N
searched	N
a	N
little	N
further	N
and	N
there's	N
something	N
interesting	N
for	N
you	N
.	N
The	N
webservice	N
is	N
called	N
findNearByWikipedia	N
.	N
It	N
may	N
be	N
the	N
thing	N
you're	N
searching	N
for	N
...	N

Another	N
option	N
is	N
using	N
DbPedia	N
SPARQL	N
interface	N
.	N
For	N
example	N
,	N
the	N
following	N
SPARQL	N
query	N
gets	N
wikipedia	N
articles	N
within	N
bounding	N
box	N
limited	N
by	N
coordinates	N
.	N
SPARQL	N
libraries	N
widely	N
available	N
,	N
for	N
example	N
for	N
SPARQL	N
Endpoint	N
interface	N
to	N
Python	N
To	N
test	N
it	N
,	N
just	N
paste	N
the	N
query	N
below	N
to	N
this	N
online	N
query	N
editor	N
:	N
http://dbpedia.org/sparql	N
Gets	N
the	N
following	N
result	N
:	N

