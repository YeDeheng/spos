Accessing	V
the	D
JavaScript	^
Table	^
DOM	^
in	P
a	D
Java	^
Servlet	^

HTML	A
tables	N
can	V
be	V
interpreted	V
by	P
Excel	^
.	,
That	O
said	V
,	,
all	X
you	O
need	V
is	V
the	D
markup	N
and	&
a	D
content-type	N
of	P
"	,
application	N
/	,
ms-excel	G
"	,

Apparently	R
you	O
are	V
generating	V
the	D
table	N
in	P
the	D
JSP	^
so	R
why	R
don't	V
you	O
just	R
output	P
the	D
data	N
you	O
are	V
creating	V
the	D
Table	N
from	P
?	,
For	P
the	D
actual	A
JavaScript	N
implementation	N
just	R
take	V
a	D
look	V
at	P
Ajax	^
functionality	^
and	&
Dom	^
Manipulation	N
with	P
jQuery	^
(	,
http://jquery.com	U
)	,

I	O
don't	V
understand	V
,	,
is	V
there	R
a	D
question	N
in	P
here	R
?	,

POST	V
the	D
table	N
to	P
the	D
server	N
.	,
If	P
you	O
want	V
to	P
access	V
the	D
DOM	N
like	P
you	O
would	V
in	P
JavaScript	^
,	,
you	O
are	V
going	V
to	P
need	V
Rhino	^
.	,
But	&
I	O
recommend	V
just	R
sticking	V
with	P
something	N
easier	A
to	P
drop	V
in	P
like	V
JDOM	^
.	,
Then	R
echo	V
back	T
the	D
table	N
with	P
the	D
content-type	N
modified	V
in	P
the	D
header	N
to	P
be	V
"	,
application	N
/	,
ms-excel	G
"	,
.	,

I'd	L
serialize	V
the	D
data	N
from	P
the	D
cells	N
into	P
a	D
simple	A
JSON	N
object	N
,	,
then	R
use	V
one	$
of	P
the	D
many	A
JSON	N
libraries	N
available	R
on	P
the	D
Java-side	N
to	P
convert	V
it	O
back	R
into	P
a	D
usable	A
object	N
.	,
Something	N
like	P
this	D
:	,
This	D
uses	V
the	D
Public	^
Domain	^
JSON.stringify()	^
routine	A
,	,
available	R
directly	R
here	R
.	,
You	O
can	V
now	R
take	V
this	D
string	N
,	,
pass	V
it	O
to	P
a	D
server	N
,	,
and	&
re-hydrate	V
the	D
object	N
in	P
Java-land	^
.	,
You'll	L
get	V
a	D
multidimensional	A
array	N
of	P
values	V
corresponding	V
directly	R
to	P
the	D
contents	N
of	P
the	D
table	N
.	,
NOTE	^
:	,
This	D
retrieves	N
the	D
entire	A
table	N
.	,
If	P
you	O
just	R
want	V
to	P
get	V
the	D
table's	S
body	N
,	,
you'll	L
have	V
to	P
modify	V
the	D
above	A
code	N
to	P
iterate	N
over	P
the	D
tBodies	N
,	,
like	P
this	D
:	,

