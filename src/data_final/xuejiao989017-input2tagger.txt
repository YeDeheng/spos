scripting	N
in	N
java	N
-	N
javascript	N
from	N
a	N
server-side	N
class	N
file	N
in	N
Java	N
1.5	N

I	N
have	N
three	N
types	N
of	N
get	N
requests	N
that	N
are	N
delivered	N
to	N
a	N
class	N
file	N
on	N
web	N
application	N
from	N
a	N
mobile	N
device	N
.	N
Because	N
the	N
mobile	N
device	N
provides	N
no	N
cookies	N
,	N
the	N
log	N
file	N
hit	N
only	N
has	N
If	N
I	N
can	N
instantiate	N
javascript	N
in	N
my	N
class	N
file	N
,	N
and	N
generate	N
a	N
javascript	N
function	N
call	N
to	N
urchinTracker()	N
from	N
inside	N
the	N
class	N
file	N
,	N
I	N
can	N
replace	N
that	N
useless	N
cookieArrayLength=0	N
;	N
with	N
some	N
useful	N
data	N
urchin	N
can	N
read	N
from	N
the	N
log	N
file	N
into	N
analytics	N
reports	N
.	N
We	N
have	N
been	N
looking	N
at	N
scripting	N
in	N
Java	N
with	N
Rhino	N
;	N
Safari	N
Bookshelf	N
has	N
:	N
Scripting	N
in	N
JavaTM	N
:	N
Languages	N
,	N
Frameworks	N
,	N
and	N
Patterns	N
which	N
helped	N
us	N
immediately	N
demo	N
that	N
we	N
can	N
run	N
javascript	N
in	N
class	N
files	N
--	N
this	N
works	N
out-of-the-box	N
on	N
Java	N
6	N
.	N
Anyone	N
know	N
any	N
resources	N
for	N
scripting	N
with	N
Rhino	N
on	N
Java	N
1.5	N
or	N
1.4	N
?	N
Alternately	N
,	N
any	N
suggestions	N
for	N
running	N
javascript	N
from	N
java	N
1.5	N
would	N
be	N
appreciated	N
.	N

The	N
Java	N
Scripting	N
API	N
(	N
javax.scripting	N
)	N
package	N
was	N
introduced	N
in	N
Java	N
6	N
,	N
so	N
that	N
will	N
not	N
be	N
available	N
in	N
Java	N
1.4	N
or	N
5	N
.	N
As	N
the	N
default	N
installation	N
,	N
Java	N
SE	N
6	N
comes	N
with	N
a	N
stripped	N
down	N
version	N
of	N
Mozilla	N
Rhino	N
which	N
is	N
interfaced	N
through	N
javax.scripting	N
.	N
However	N
,	N
Mozilla	N
Rhino	N
itself	N
does	N
not	N
require	N
Java	N
6	N
.	N
From	N
the	N
requirements	N
page	N
:	N
Recent	N
versions	N
of	N
Rhino	N
have	N
only	N
been	N
tested	N
with	N
JDK	N
1.4	N
and	N
greater	N
.	N
Older	N
versions	N
support	N
JDKs	N
as	N
early	N
as	N
1.1	N
.	N
Therefore	N
,	N
to	N
use	N
Rhino	N
,	N
it	N
appears	N
that	N
Java	N
1.4	N
is	N
actually	N
sufficient	N
.	N
As	N
for	N
resources	N
,	N
the	N
documentation	N
for	N
Rhino	N
seems	N
to	N
have	N
a	N
lot	N
of	N
information	N
.	N
In	N
particular	N
,	N
the	N
Embedding	N
Rhino	N
section	N
might	N
be	N
useful	N
to	N
see	N
how	N
the	N
scripting	N
will	N
work	N
.	N
Of	N
course	N
,	N
the	N
lack	N
of	N
the	N
javax.scripting	N
package	N
means	N
that	N
interfacing	N
to	N
Rhino	N
itself	N
is	N
going	N
to	N
require	N
the	N
use	N
of	N
the	N
Rhino	N
API	N
rather	N
than	N
the	N
Java	N
6	N
native	N
scripting	N
API	N
,	N
but	N
I	N
would	N
guess	N
that	N
the	N
functionality	N
is	N
going	N
to	N
be	N
fairly	N
similar	N
.	N
The	N
only	N
downside	N
I	N
can	N
see	N
is	N
,	N
if	N
in	N
the	N
future	N
,	N
Java	N
6	N
is	N
going	N
to	N
be	N
supported	N
on	N
the	N
target	N
platform	N
and	N
/	N
or	N
using	N
another	N
language	N
,	N
it	N
may	N
necessitate	N
a	N
rewrite	N
to	N
use	N
the	N
Java	N
Scripting	N
API	N
rather	N
than	N
directly	N
supporting	N
Rhino	N
.	N

thanks	N
for	N
the	N
resource	N
links	N
;	N
we	N
are	N
able	N
to	N
use	N
the	N
stripped-down	N
Rhino	N
in	N
Java	N
6	N
via	N
javax.scripting	N
to	N
compile	N
test.js	N
(	N
javascript	N
)	N
to	N
class	N
file	N
and	N
call	N
tests()	N
locally	N
but	N
have	N
not	N
been	N
successful	N
in	N
compiling	N
the	N
__utm.js	N
and	N
calling	N
urchinTracker()	N
compiling	N
from	N
source	N
and	N
trying	N
again	N
,	N
but	N
at	N
the	N
moment	N
it	N
looks	N
like	N
/	N
users	N
/	N
58787	N
/	N
unknown-google	N
may	N
be	N
right	N
in	N
comment	N
below	N
.	N

We	N
followed	N
Rhino	N
docs	N
to	N
run	N
JavaScript	N
interpreter	N
from	N
Java	N
1.4	N
and	N
1.5	N
.	N

See	N
Server-side	N
JavaScript	N
for	N
list	N
of	N
projects	N
that	N
runs	N
JavaScript	N
at	N
the	N
server-side	N
.	N
For	N
your	N
usage	N
,	N
using	N
Rhino	N
seems	N
like	N
the	N
way	N
to	N
go	N
.	N

[	N
I'm	N
posting	N
in	N
an	N
answer	N
,	N
because	N
I	N
don't	N
have	N
enough	N
points	N
to	N
post	N
a	N
comment	N
on	N
the	N
question	N
itself	N
.	N
]	N
Are	N
you	N
sure	N
that	N
the	N
urchinTracker()	N
function	N
will	N
operate	N
outside	N
of	N
a	N
web	N
browser	N
?	N
Running	N
the	N
Rhino	N
JavaScript	N
interpreter	N
(	N
which	N
isn't	N
too	N
difficult	N
)	N
won't	N
be	N
enough	N
if	N
the	N
function	N
relies	N
on	N
various	N
browser	N
objects	N
,	N
like	N
the	N
Document	N
Object	N
Model	N
(	N
DOM	N
)	N
or	N
XmlHttpRequest	N
.	N
I	N
suggest	N
that	N
you	N
at	N
least	N
scan	N
the	N
internals	N
of	N
the	N
urchinTracker()	N
function	N
to	N
see	N
if	N
this	N
is	N
the	N
case	N
.	N

not	N
sure	N
yet	N
,	N
but	N
was	N
unable	N
this	N
morning	N
to	N
pass	N
values	N
via	N
urchinTracker()	N
through	N
javax.scripting	N
(	N
Java	N
6	N
test	N
environment	N
)	N
so	N
it	N
is	N
unlikely	N
to	N
work	N
on	N
dev	N
.	N
will	N
know	N
by	N
tomorrow	N
...	N

This	N
is	N
correct	N
.	N
__utm.js	N
has	N
dependancies	N
on	N
various	N
browser	N
objects	N
.	N
Thanks	N
!	N

Just	N
wanted	N
to	N
point	N
out	N
the	N
envjs	N
project	N
:	N
"	N
envjs	N
is	N
a	N
pure	N
JavaScript	N
browser	N
environment	N
that	N
runs	N
in	N
Rhino	N
.	N
"	N
Blog	N
Posting	N
:	N
http://ejohn.org/blog/bringing-the-browser-to-the-server	N
Discussion	N
Group	N
:	N
http://groups.google.com/group/envjs	N
Source	N
Repository	N
:	N
http://github.com/thatcher/env-js/tree/master	N

