How	N
do	N
you	N
restrict	N
the	N
size	N
of	N
a	N
file	N
being	N
uploaded	N
with	N
JavaScript	N
(	N
or	N
Java	N
)	N
without	N
transferring	N
the	N
entire	N
file	N
?	N

Is	N
there	N
a	N
way	N
to	N
validate	N
on	N
the	N
client	N
side	N
browser	N
whether	N
the	N
size	N
of	N
a	N
file	N
being	N
uploaded	N
from	N
a	N
JSP	N
page	N
is	N
over	N
a	N
set	N
size	N
limit	N
without	N
forcing	N
the	N
user	N
to	N
upload	N
the	N
entire	N
file	N
only	N
to	N
find	N
out	N
it	N
was	N
too	N
large	N
?	N
I	N
would	N
like	N
to	N
stay	N
away	N
from	N
any	N
proprietary	N
controls	N
or	N
techniques	N
like	N
Flash	N
or	N
ActiveX	N
if	N
possible	N
.	N
Thanks	N
!	N

This	N
isn't	N
a	N
perfect	N
solution	N
,	N
but	N
if	N
you	N
check	N
the	N
Content-Length	N
HTTP	N
header	N
with	N
request.getHeader	N
(	N
"	N
Content-Length	N
")	N
then	N
you	N
can	N
choose	N
to	N
not	N
transfer	N
the	N
entire	N
file	N
.	N
By	N
way	N
of	N
explanation	N
,	N
an	N
extremely	N
large	N
file	N
will	N
not	N
be	N
transferred	N
all	N
at	N
once	N
.	N
You'd	N
have	N
to	N
actually	N
open	N
a	N
stream	N
representing	N
that	N
chunk	N
of	N
POST	N
data	N
and	N
read	N
from	N
it	N
for	N
the	N
entire	N
thing	N
to	N
be	N
transfered	N
.	N
On	N
the	N
other	N
hand	N
,	N
if	N
you're	N
worried	N
about	N
denial-of-service	N
attacks	N
,	N
then	N
you	N
can't	N
really	N
trust	N
the	N
Content-Length	N
header	N
,	N
because	N
it	N
can	N
easily	N
be	N
forged	N
.	N
In	N
this	N
case	N
,	N
you	N
should	N
set	N
a	N
limit	N
and	N
stream	N
a	N
transfer	N
of	N
this	N
file	N
,	N
stopping	N
as	N
soon	N
as	N
you've	N
exceeded	N
that	N
limit	N
.	N

Suggest	N
you	N
reconsider	N
the	N
Flash	N
decision	N
and	N
take	N
a	N
look	N
at	N
the	N
YUI	N
Uploader	N
,	N
here	N
:	N
http://developer.yahoo.com/yui/uploader	N
Among	N
other	N
things	N
,	N
the	N
fileSelect	N
event	N
will	N
tell	N
you	N
the	N
size	N
of	N
the	N
selected	N
file	N
in	N
bytes	N
immediately	N
after	N
it	N
is	N
selected	N
but	N
before	N
it's	N
uploaded	N
,	N
so	N
you'll	N
be	N
able	N
to	N
restrict	N
accordingly	N
.	N

With	N
JSP	N
or	N
PHP	N
you	N
won't	N
be	N
able	N
to	N
restrict	N
the	N
file	N
size	N
because	N
your	N
page	N
won't	N
get	N
the	N
request	N
until	N
the	N
upload	N
has	N
already	N
happened	N
.	N
At	N
that	N
point	N
you	N
can	N
decide	N
not	N
to	N
save	N
the	N
file	N
but	N
that	N
might	N
be	N
too	N
late	N
.	N
There	N
are	N
some	N
Java	N
solutions	N
out	N
there	N
,	N
e.g.	N
MyUploader	N
or	N
Hermes	N
.	N
Some	N
even	N
support	N
multiple	N
file	N
uploads	N
and	N
resuming	N
partial	N
uploads	N
,	N
and	N
some	N
also	N
give	N
you	N
the	N
source	N
code	N
.	N
You	N
can	N
also	N
write	N
your	N
own	N
,	N
but	N
it	N
will	N
need	N
to	N
be	N
a	N
signed	N
applet	N
in	N
order	N
to	N
function	N
because	N
it	N
needs	N
to	N
access	N
the	N
local	N
filesystem	N
.	N
If	N
you're	N
using	N
Apache	N
as	N
your	N
webserver	N
you'll	N
need	N
enough	N
RAM	N
in	N
your	N
machine	N
to	N
fit	N
the	N
whole	N
file	N
size	N
in	N
memory	N
of	N
all	N
files	N
being	N
uploaded	N
at	N
a	N
given	N
time	N
.	N

