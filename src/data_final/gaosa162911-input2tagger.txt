How	N
do	N
I	N
call	N
Java	N
code	N
from	N
JavaScript	N
code	N
in	N
Wicket	N
?	N

If	N
I	N
can	N
do	N
this	N
,	N
how	N
do	N
I	N
call	N
Java	N
code	N
(	N
methods	N
for	N
instance	N
)	N
from	N
within	N
JavaScript	N
code	N
,	N
in	N
Wicket	N
.	N

Assuming	N
you	N
mean	N
JavaScript	N
running	N
on	N
the	N
client	N
-	N
you	N
cause	N
an	N
HTTP	N
redirect	N
to	N
be	N
made	N
to	N
the	N
server	N
,	N
and	N
have	N
your	N
servlet	N
react	N
to	N
the	N
request	N
for	N
the	N
given	N
URL	N
.	N
This	N
is	N
known	N
as	N
Ajax	N
,	N
and	N
there	N
are	N
a	N
number	N
of	N
libraries	N
that	N
help	N
you	N
do	N
it	N
..	N

http://www.wicket-library.com/wicket-examples-6.0.x/index.html	N
has	N
plenty	N
of	N
examples	N
to	N
get	N
you	N
going	N
.	N
Or	N
have	N
a	N
Have	N
a	N
look	N
at	N
DWR	N
http://directwebremoting.org	N
DWR	N
allows	N
Javascript	N
in	N
a	N
browser	N
to	N
interact	N
with	N
Java	N
on	N
a	N
server	N
and	N
helps	N
you	N
manipulate	N
web	N
pages	N
with	N
the	N
results	N
.	N
As	N
Dorward	N
mentioned	N
this	N
is	N
done	N
via	N
AJAX	N

Broken	N
link	N
http://wicketstuff.org/wicket13/ajax	N
/	N

erk	N
.	N
The	N
correct	N
answer	N
would	N
be	N
ajax	N
call	N
backs	N
.	N
You	N
can	N
either	N
manually	N
code	N
the	N
js	N
to	N
hook	N
into	N
the	N
wicket	N
js	N
,	N
or	N
you	N
can	N
setup	N
the	N
callbacks	N
from	N
wicket	N
components	N
in	N
java	N
.	N
For	N
example	N
,	N
from	N
AjaxLazyLoadPanel	N
:	N
This	N
example	N
shows	N
how	N
to	N
add	N
call	N
back	N
code	N
to	N
any	N
Component	N
in	N
Wicket	N
.	N
After	N
the	N
OnDomReady	N
event	N
fires	N
in	N
your	N
browser	N
,	N
when	N
loading	N
a	N
page	N
,	N
Wicket	N
will	N
cause	N
it's	N
js	N
enging	N
,	N
to	N
call	N
back	N
into	N
your	N
code	N
,	N
using	N
Ajax	N
,	N
to	N
the	N
'	N
respond	N
'	N
method	N
shown	N
above	N
,	N
at	N
which	N
point	N
you	N
can	N
execute	N
Java	N
code	N
on	N
the	N
server	N
,	N
and	N
potentially	N
add	N
components	N
to	N
the	N
ajax	N
target	N
to	N
be	N
re-rendered	N
.	N
To	N
do	N
it	N
manually	N
,	N
from	N
js	N
,	N
you	N
can	N
hook	N
into	N
wicket's	N
system	N
by	N
printing	N
out	N
getCallbackScript()	N
.	N
toString()	N
to	N
a	N
attribute	N
on	N
a	N
wicket	N
component	N
,	N
which	N
you'll	N
then	N
be	N
able	N
to	N
access	N
from	N
js	N
.	N
Calling	N
this	N
url	N
from	N
js	N
manually	N
with	N
wicket's	N
wicketAjaxGet	N
from	N
wicket-	N
ajax.js	N
.	N
Check	N
out	N
the	N
mailing	N
list	N
for	N
lot's	N
of	N
conversation	N
on	N
this	N
topic	N
:	N
http://www.nabble.com/Wicket-and-javascript-ts24336438.html#a24336438	N

the	N
last	N
link	N
does	N
not	N
work	N

Excerpt	N
from	N
https://cwiki.apache.org/WICKET/calling-wicket-from-javascript.html	N
If	N
you	N
add	N
any	N
class	N
that	N
extends	N
AbstractDefaultAjaxBehavior	N
to	N
your	N
page	N
,	N
wicket-	N
ajax.js	N
will	N
be	N
added	N
to	N
the	N
header	N
ofyour	N
web	N
page	N
.	N
wicket-	N
ajax.js	N
provides	N
you	N
with	N
two	N
basic	N
methods	N
to	N
call	N
your	N
component	N
:	N
and	N
Here	N
is	N
an	N
example	N
:	N
JavaScript	N
$url$	N
is	N
obtained	N
from	N
the	N
method	N
abstractDefaultAjaxBehavior.getCallbackUrl()	N
.	N
If	N
you	N
paste	N
the	N
String	N
returned	N
from	N
that	N
method	N
into	N
your	N
browser	N
,	N
you'll	N
invoke	N
the	N
respond	N
method	N
,	N
the	N
same	N
applies	N
for	N
the	N
javascript	N
method	N
.	N
You	N
can	N
optionally	N
add	N
arguments	N
by	N
appending	N
these	N
to	N
the	N
URL	N
string	N
.	N
They	N
take	N
the	N
form	N
foo	N
=b	N
ar	N
.	N
you	N
get	N
the	N
optional	N
arguments	N
in	N
the	N
Java	N
response	N
method	N
like	N
this	N
:	N
or	N
this	N
:	N

Worth	N
mentioning	N
that	N
the	N
API	N
for	N
extracting	N
parameters	N
has	N
changed	N
in	N
Wicket	N
1.5	N
.	N
Having	N
called	N
`	N
RequestCycle.get()	N
.	N
getRequest()	N
`	N
to	N
obtain	N
a	N
`	N
Request	N
`	N
object	N
,	N
you	N
must	N
now	N
call	N
`	N
getQueryParameters()	N
`	N
(	N
for	N
GET	N
params	N
)	N
,	N
`	N
getPostParameters()	N
`	N
(	N
for	N
POST	N
params	N
)	N
,	N
or	N
`	N
getRequestParameters()	N
`	N
(	N
for	N
all	N
at	N
once	N
)	N
.	N
Each	N
returns	N
an	N
`	N
IRequestParameters	N
`	N
instance	N
that	N
you	N
can	N
query	N
for	N
parameters	N
.	N
See	N
[	N
the	N
API	N
docs]	N
(	N
http://wicket.apache.org/apidocs/1.5/)	N
.	N

Oh	N
,	N
and	N
a	N
gotcha	N
:	N
the	N
URL	N
returned	N
by	N
`	N
getCallbackUrl()	N
`	N
can	N
change	N
during	N
the	N
component	N
construction	N
cycle	N
.	N
It's	N
often	N
inaccurate	N
if	N
you	N
try	N
to	N
use	N
it	N
in	N
the	N
constructor	N
,	N
and	N
callbacks	N
will	N
fail	N
as	N
a	N
result	N
.	N
I've	N
had	N
success	N
using	N
it	N
in	N
an	N
override	N
of	N
the	N
component's	N
`	N
onBeforeRender()	N
`	N
instead	N
.	N

