162911	How do I call Java code from JavaScript code in Wicket ?	R V O V ^ N P ^ N P N ,
162911	If I can do this , how do I call Java code ( methods for instance ) from within JavaScript code , in Wicket .	P O V V D , R V O V ^ N , N P N , P P ^ N , P N ,
162911	Assuming you mean JavaScript running on the client - you cause an HTTP redirect to be made to the server , and have your servlet react to the request for the given URL . This is known as Ajax , and there are a number of libraries that help you do it ..	V O V ^ V P D N , O V D N V P V V P D N , & V D N V P D N P D V ^ , D V V P ^ , & R V D N P N O V O V O ,
162911	http://www.wicket-library.com/wicket-examples-6.0.x/index.html has plenty of examples to get you going . Or have a Have a look at DWR http://directwebremoting.org DWR allows Javascript in a browser to interact with Java on a server and helps you manipulate web pages with the results . As Dorward mentioned this is done via AJAX	U V R P N P V O V , & V D V D V P ^ U ^ V ^ P D N P V P ^ P D N & V O V N N P D N , P ^ V D V V P ^
162911	Broken link http://wicketstuff.org/wicket13/ajax /	^ N U ,
162911	erk . The correct answer would be ajax call backs . You can either manually code the js to hook into the wicket js , or you can setup the callbacks from wicket components in java . For example , from AjaxLazyLoadPanel : This example shows how to add call back code to any Component in Wicket . After the OnDomReady event fires in your browser , when loading a page , Wicket will cause it's js enging , to call back into your code , using Ajax , to the ' respond ' method shown above , at which point you can execute Java code on the server , and potentially add components to the ajax target to be re-rendered . To do it manually , from js , you can hook into wicket's system by printing out getCallbackScript() . toString() to a attribute on a wicket component , which you'll then be able to access from js . Calling this url from js manually with wicket's wicketAjaxGet from wicket- ajax.js . Check out the mailing list for lot's of conversation on this topic : http://www.nabble.com/Wicket-and-javascript-ts24336438.html#a24336438	N , D A N V V O V V , O V R R N D N P V P D N N , & O V N D ^ P N N P N , P N , P ^ , D N V R P V V T N P D N P N , P D ^ N V P D N , O V D N , N V P L V N , P V R P D N , V ^ , P D , V , N V P , P D N O V V ^ N P D N , & R V N P D N N P V A , P V O R , P ^ , O V V P S N P V T E , E P D N P D N N , D L R V A P N P ^ , V D N P L R P L N P ^ ^ , V T D N N P L P N P D N , U
162911	the last link does not work	D A N V R V
162911	Excerpt from https://cwiki.apache.org/WICKET/calling-wicket-from-javascript.html If you add any class that extends AbstractDefaultAjaxBehavior to your page , wicket- ajax.js will be added to the header ofyour web page . wicket- ajax.js provides you with two basic methods to call your component : and Here is an example : JavaScript $url$ is obtained from the method abstractDefaultAjaxBehavior.getCallbackUrl() . If you paste the String returned from that method into your browser , you'll invoke the respond method , the same applies for the javascript method . You can optionally add arguments by appending these to the URL string . They take the form foo =b ar . you get the optional arguments in the Java response method like this : or this :	^ P ^ P O V D N P V ^ P D N , G ^ V V V P D N N N N , G ^ V O P $ A N P V D N , & R V D N , ^ ^ V V P D N ^ , P O V D N V P D N P D N , L V D V N , D A N P D N N , O V R V N P V O P D N N , O V D N ! ^ ^ , O V D A N P D ^ N N P D , & D ,
162911	Worth mentioning that the API for extracting parameters has changed in Wicket 1.5 . Having called ` RequestCycle.get() . getRequest() ` to obtain a ` Request ` object , you must now call ` getQueryParameters() ` ( for GET params ) , ` getPostParameters() ` ( for POST params ) , or ` getRequestParameters() ` ( for all at once ) . Each returns an ` IRequestParameters ` instance that you can query for parameters . See [ the API docs] ( http://wicket.apache.org/apidocs/1.5/) .	A V P D ^ P V N V V P ^ $ , V V , E E E E P V D , N , N , O V R V E E E E P V ^ E E E E E E P ^ ^ , , & E E E E P X P R , , ^ V D , ^ , N P O V N P N , V , D ^ ^ , U ,
162911	Oh , and a gotcha : the URL returned by ` getCallbackUrl() ` can change during the component construction cycle . It's often inaccurate if you try to use it in the constructor , and callbacks will fail as a result . I've had success using it in an override of the component's ` onBeforeRender() ` instead .	! , & D G , D N V P E E , V V P D N N N , L R A P O V P V O P D N , & V V V P D N , L V N V O P D N P D S E E E R ,
