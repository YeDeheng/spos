342590	Sorting domain names	A N N
342590	Has anyone implemented sorting a list of domain names ? I have seen some applications sort them as flat strings , but the problem is that you end up scattering all the related hosts in a domain : a.me.com a.you.com b.me.com b.you.com So , the basic logic I came up with reverse the order of the labels , then sort . FQDNs of one label should be treated as hostnames , and probably sorted separately , maybe at the top . Ideally I am looking for javascript and java versions . I also don't know if this design works well for the newer internationalized domain names .	V O V V D N P N N , O V V D N N O R A N , & D N V P O V T V X D A N P D N , U U U U P , D A N O V T P V D N P D N , R N , ^ P $ N V V V P ^ , & R V R , R P D N , R O V V P ^ & N N , O R V V P D N V R P D A V N N ,
342590	Err , what's wrong with doing exactly what you suggest , reversing the strings and sorting alphabetically ?	! , L A P V R O O V , V D N & V R ,
342590	You could split the domain names into individual fields and do successive sorts . You can create a domain name object to have three fields and create a list of domain names to sort . For each of the three fields , do a sort . At the end , you have a sort list of domain names with related hosts together .	O V V D N N P A N & V A N , O V V D N N N P V $ N & V D N P N N P N , P D P D $ N , V D N , P D N , O V D N N P N N P A N R ,
342590	split by " . " then piece together " . com.au " and " . co.uk " vs " . com "	V P , , , R N R , , O , & , , ! , V , , ! ,
342590	@Bala : Three fields ?	@ ~ $ N ,
342590	From the few examples given , I assumed there were three fields ( foo.bar.com) . If there were only two fields ( foo.com) , then the third field would be null .	P D A N V , O V R V $ N , E , P X V A $ N , E , R D A N V V A ,
342590	This is a result of the big-endian vs little-endian war of the early 80s which the little-endian team won . In the UK , domain names were originally ordered like ( the hypothetical ) ' uk.ac.leeds ' for the UK ' academic ' ( University of ) Leeds . This is big-endian ordering - and makes your sort far easier . It would also make it far harder to spoof internet sites in URLs . Of course , nowadays , the order is little-endian , and the hypothetical URL would be ' leeds.ac.uk ' . To sort related domain names together sensibly , you will have to achieve the effect of sorting by furthest right component ( . com , . uk , . org ) first , then the next left , and repeat ... In other words ( as @Bala said ) , you will have to do something similar to splitting the names up and sorting from right-to-left .	D V D N P D ^ P ^ N P D A N P D A N V , P D ^ , N N V R V R , D A , , N , P D ^ , A , , N P ^ ^ , D V ^ V , & V D N R A , O V R V O R A P N N N P ^ , P N , R , D N V ^ , & D A N V V , ! , , P N A N N R R , O V V P V D N P V P R A N , , E , , ^ , , E , R , R D A N , & V , P A N , P @ V , , O V V P V N A P V D N T & V P ^ ,
342590	I don't know about Java and Javascript in particular , but many languages provide some sort of array data structure that can be lexicographically sorted . So , like you said , convert " a.example.com " into { " com " , " example " , " a " } , and just let the default sorting rules run . A lexicographical sort will then do exactly what you want . If you have a list of local domains as well as FQDNs , I agree you'd want to separate those out . Anything that doesn't have a period in it could be filtered out first . Or , you could resolve those all to FQDNs and then just sort the whole list . Some Python code that does this ( should map to Javascript fairly closely ): This prints :	O V V P ^ & V P A , & A N V D N P N N V O V V R V , P , V O V , V , ! , P E E E , , , N , , , D , , , & R V D N V N V , ^ ^ N V R V R O O V , P O V D N P A N P R P ^ , O V L V P V O T , N O V V D N P O V V V T R , ^ , O V V O R P ^ & R R V D A N , D N N O V D , V N P ^ R R , D N ,
342590	Based on Tom's answer ... The print statements work ( when uncommented ) in the SquareFree JavaScript Development Environment , a handy place to test out javascript fragments ...	V P Z N , D N N N , R V , P D ^ ^ ^ ^ , D A N P N P D N ,
342590	Thank you for the translation , Stobor !	V O P D N , ^ ,
342590	This is how it's done in Perl :	D V R L V P ^ ,
