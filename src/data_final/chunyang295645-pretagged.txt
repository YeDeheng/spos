How	R
to	P
register	V
a	D
JavaScript	^
callback	N
in	P
a	D
Java	^
Applet	^
?	,

I'm	L
developing	V
an	D
invisible	A
Java	^
Applet	^
,	,
that	O
will	V
be	V
controlled	V
entirely	R
from	P
JavaScript	^
.	,
I	O
can	V
call	V
the	D
applet's	G
Java	^
methods	N
easily	R
,	,
and	&
I	O
can	V
call	V
JavaScript	^
methods	N
from	P
within	P
the	D
applet	N
by	P
using	V
netscape.javascript.JSObject.getWindow	N
(	,
this	D
)	E
.	E
call()	E
.	,
But	&
in	P
order	N
to	P
register	V
a	D
JavaScript	^
callback	N
in	P
the	D
applet	N
,	,
I	O
guess	V
I	O
would	V
need	V
an	D
JavaScript	N
function	N
object	N
of	P
some	D
sort	N
.	,
I	O
would	V
like	V
to	P
do	V
:	,
Which	!
I	O
could	V
call	V
from	P
Javascript	^
:	,
So	P
I	O
could	V
call	V
this	D
function	N
in	P
later	A
code	N
:	,
Does	V
something	N
like	P
this	D
exist	N
?	,
How	R
can	V
I	O
do	V
this	D
?	,
Rigth	^
now	R
I'm	L
thinking	V
of	P
creating	V
some	D
Javascript	N
to	P
handle	V
this	D
callback	N
mechanism	N
instead	R
of	P
doing	V
so	R
from	P
the	D
applet	N
.	,

I	O
am	V
brand	R
new	A
to	P
Java	^
->	^
JavaScript	^
communication	N
,	,
as	P
I	O
planned	V
to	P
explore	V
it	O
this	D
week	N
.	,
A	D
good	A
opportunity	N
here	R
...	,
:-)	E
After	P
some	D
tests	N
,	,
it	O
seems	V
you	O
cannot	V
pass	V
a	D
JS	^
function	N
to	P
a	D
Java	^
applet	N
.	,
Unless	P
I	O
am	V
doing	V
it	O
the	D
wrong	A
way	N
...	,
I	O
tried	V
:	,
where	R
Call	^
is	V
(	,
are	V
)	,
defined	V
as	P
:	,
When	R
I	O
pass	V
a	D
JS	^
function	N
(	,
all	X
tests	N
in	P
FF3	^
)	,
,	,
I	O
get	V
a	D
null	A
on	P
the	D
Java	^
side	N
.	,
Note	V
that	P
the	D
following	V
Java	^
routine	N
allows	V
to	P
display	V
the	D
JS	^
code	N
of	P
DumberTest	^
function	N
!	,
To	P
the	D
point	N
:	,
I	O
made	V
a	D
JS	^
function	N
:	,
I	O
extract	V
the	D
name	N
of	P
the	D
JS	^
function	N
from	P
the	D
toString	N
result	N
and	&
pass	V
it	O
to	P
Java	^
applet	N
.	,
I	O
don't	V
think	V
we	O
can	V
handle	V
anonymous	A
functions	N
because	P
Java	^
call	V
JS	^
functions	N
by	P
name	N
.	,
Java	^
side	N
:	,

It	O
seems	V
that	P
you	O
can	V
only	A
pass	N
functions	N
to	P
Java	^
by	P
name	N
,	,
therefore	R
what	O
you'd	L
need	V
to	P
do	V
is	V
create	V
a	D
fa	^
ade	A
object	N
which	O
would	V
wrap	V
the	D
applet	N
and	&
which	O
would	V
take	V
function	N
references	N
and	&
come	V
up	T
with	P
temporary	A
names	N
for	P
them	O
.	,

win.eval()	O
will	V
call	V
a	D
predefined	A
javascript	N
.	,

eval	N
is	V
more	R
generic	A
,	,
hence	R
less	A
efficient	A
than	P
call	V
for	P
this	D
precise	A
task	N
,	,
and	&
it	O
is	V
more	R
complex	A
to	P
pass	V
parameters	N
to	P
the	D
JS	^
function	N
.	,

