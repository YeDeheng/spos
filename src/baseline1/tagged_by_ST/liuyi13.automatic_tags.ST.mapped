javascript_N injection_N in_P wicket_N
I_O have_V J2EE_N project_N which_D uses_V wicket_N framework_N ._. I_O want_V to_P know_V how_R can_V I_O prevent_V from_P javascript_N injection_N in_P wicket_N ?_.
Although_P I_^ didn't_^ think_V the_D way_N in_P which_D you_O formulated_V your_D question_N deserved_V it_O (_V no_D details_N ,_, no_D background_N ,_, no_D example_N problem_N statement_N ,_, implied_A susceptability_N to_P injection_N ,_, etc_G )_G ,_, I_O dug_V up_R some_D details_N from_P the_D Excellent_^ Wicket_^ in_P Action_^ :_: Wicket_^ is_V secure_A by_P default_N You_O never_R need_V to_P worry_V about_P pimple-faced_A 14-year-olds_N trying_V to_P hack_V your_D web_N application_N ._. To_P do_V so_R ,_, they_O would_V have_V to_P hijack_V the_D session_N and_& then_R guess_V the_D right_A page_N identifiers_N and_& version_N numbers_N ,_, which_D would_V be_V relative_A to_P the_D session_N and_& the_D relevant_A component_N paths_N ._. You_O d_N have_V to_P be_V a_D persistent_A hacker_N to_P pull_V that_P off_P ._. You_O can_V make_V your_D Wicket_^ application_N even_R more_R secure_A from_P the_D default_N by_P encrypting_V requests_N with_P ,_, for_P instance_N ,_, CryptedUrlWebRequestCodingStrategy_^ ._.
All_D Wicket_^ components_N escape_V strings_N by_P default_N (_N by_P Labels_^ ,_, TextFields_^ ,_, etc_G ._. )_N ,_, which_D avoids_V most_R common_A issues_N related_V to_P javascript_N injection_N ._. You_O should_V take_V appropriate_A care_N ,_, though_R ,_, if_P you_O disable_V this_D behavior_N (_G component.setEscapeModelStrings_G (_G false_A )_G )_G for_P some_D reason_N ,_, or_& create_V custom-rendered_A components_N (_V if_P you_O write_V the_D markup_N directly_R to_P the_D output_N )_N ._.
