Do_VB Applet_FW JSObject_FW javascript_NN calls_NNS serialize_VB ?_.
Do_VBP applet_NN javascript_NN calls_NNS serialize_VBP in_IN any_DT proper_JJ way_NN ?_. I'm_NN considering_VBG implementing_VBG a_DT model_NN in_IN which_WDT two_CD threads_NNS send_VBP off_RP javascript_NN commands_NNS ._. One_CD responds_VBZ to_TO requests_NNS from_IN the_DT browser_NN (_FW js_FW )_NN ,_, and_CC the_DT other_JJ hits_NNS the_DT browser_NN periodically_RB ._. My_PRP$ question_NN is_VBZ this_DT :_: what_WP happens_VBZ if_IN these_DT two_CD javascript_NN requests_NNS collide_VBP ?_. I'm_NN worried_VBN about_IN concurrent_JJ javascript_NN requests_NNS ,_, as_IN intuition_NN leads_VBZ me_PRP to_TO believe_VB that_IN one_CD of_IN the_DT calls_NNS will_MD fail_VB nondeterministically_RB ._.
Javascript_NNP is_VBZ single-threaded_JJ ._. Only_RB one_CD block_NN of_IN code_NN can_MD be_VB executing_VBG at_IN any_DT given_VBN time_NN ;_: any_DT other_JJ event_NN ,_, method_NN ,_, etc_FW ._. that_IN fires_NNS will_MD wait_VB until_IN the_DT currently_RB executing_VBG code_NN terminates_VBZ ._. Google_NNP Chrome's_NNP javascript_NN engine_NN may_MD be_VB an_DT exception_NN -_: I_PRP recall_VBP them_PRP mentioning_VBG some_DT kind_NN of_IN multi-threaded_JJ javascript_NN support_NN in_IN their_PRP$ features_NNS ,_, but_CC I'm_NN unsure_JJ how_WRB it_PRP works_VBZ ._. In_IN IE_NN 6_CD ,_, the_DT browser_NN UI_NNP will_MD actually_RB become_VB unresponsive_JJ while_IN JS_NN code_NN is_VBZ running_VBG (_CD if_IN you_PRP stop_VBP at_IN a_DT breakpoint_NN with_IN keyword_NN '_'' debugger_NN '_'' ,_, or_CC have_VB IE_NN set_VBN to_TO debug_VB ,_, for_IN example_NN )_NN ._.
Serialize_VB ?_. Do_VBP you_PRP mean_VB synchronize_VB ?_. JSObject_NN works_VBZ by_IN passing_VBG primitives_NNS to_TO a_DT single_JJ JSContext_NN JNI_NNP NPAPI_NNP wrapper_NN which_WDT acts_VBZ on_IN the_DT DOM_NNP in_IN the_DT underlying_JJ browser_NN implementation_NN ._. Are_VBP you_PRP referring_VBG to_TO the_DT passing_NN of_IN primitives_NNS through_IN JNI_NNP ?_. I_PRP don't_VBP know_VB much_RB about_IN how_WRB chrome's_NNP JS_NNP engine_NN works_VBZ ,_, but_CC I_PRP assume_VBP that_IN since_IN the_DT liveconnect_JJ NPAPI_NN in_IN chrome_NN is_VBZ the_DT same_JJ as_IN the_DT others_NNS ,_, the_DT ability_NN to_TO write_VB multithreaded_JJ javascript_NN has_VBZ nothing_NN to_TO do_VB with_IN multithreaded_JJ JSObject_NN access_NN ._. The_DT affected_VBN code_NN extends_VBZ the_DT same_JJ abstract_JJ JSObject_NN class_NN that_IN firefox_NN uses_VBZ ._. There_EX are_VBP several_JJ implementations_NNS of_IN JSObject_NN /_: liveconnect_NN --_: a_DT few_JJ for_IN netscape_NN /_: firefox_NN and_CC one_CD for_IN ie_FW (_FW ocx_FW )_FW ._. All_DT behave_VBP differently_RB as_RB far_RB as_IN multiple_JJ threads_NNS go_VBP ._. DOM_NN access_NN isn't_NN threadsafe_NN in_IN general_JJ as_RB far_RB as_IN liveconnect_NN is_VBZ concerned_VBN ._. So_RB ,_, officially_RB ,_, multiple_JJ threads_NNS accessing_VBG the_DT DOM_NNP is_VBZ undefined_JJ ._. If_IN you_PRP manage_VBP to_TO actually_RB access_VB the_DT DOM_NN through_IN something_NN other_JJ than_IN code_NN scoped_VBD in_IN DOMService.run()_NN ,_, you'll_NN get_VB crazy_JJ deadlocks_NNS and_CC race_NN conditions_NNS ._. So_RB ,_, basically_RB ,_, you_PRP need_VBP all_DT of_IN your_PRP$ java_NN threads_NNS to_TO post_VB all_DT DOMActions_NNS to_TO your_PRP$ DOM_NNP access_NN dispatch_VBP thread_NN only_RB ._.
