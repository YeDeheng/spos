String	N
length	N
differs	V
from	P
Javascript	^
to	P
Java	^
code	N

I've	L
got	V
a	D
JSP	^
page	N
with	P
a	D
piece	N
of	P
Javascript	^
validation	N
code	N
which	D
limits	N
to	P
a	D
certain	A
amount	N
of	P
characters	N
on	P
submit	V
.	,
I'm	L
using	V
a	D
textarea	^
so	P
I	O
can't	V
simply	R
use	V
a	D
length	N
attribute	V
like	V
in	P
a	D
input	N
type=	N
"	,
text	N
"	,
.	,
I	O
use	V
document.getElementById	^
(	,
"	,
text	V
")	E
.	,
value.length	N
to	P
get	V
the	D
string	N
length	N
.	,
I'm	L
running	V
Firefox	^
3.0	$
on	P
Windows	^
(	,
but	&
I've	L
tested	V
this	D
behavior	N
with	P
IE	^
6	$
also	R
)	,
.	,
The	D
form	N
gets	V
submitted	V
to	P
a	D
J2EE	^
servlet	N
.	,
In	P
my	D
Java	^
servlet	V
the	D
string	N
length	N
of	P
the	D
parameter	N
is	V
larger	R
than	P
2000	$
!	,
I've	L
noticed	V
that	P
this	D
can	V
easily	R
be	V
reproduced	V
by	P
adding	V
carriage	N
returns	V
in	P
the	D
textarea	^
.	,
I've	L
used	V
Firebug	N
to	P
assert	V
the	D
length	N
of	P
the	D
textare	N
and	&
it	O
really	R
is	V
2000	$
characters	N
long	R
.	,
On	P
the	D
Java	^
side	N
though	P
,	,
the	D
carriage	N
returns	N
get	V
converted	V
to	P
UNIX	^
style	N
(	,
\r\n	N
,	,
instead	R
of	P
\n	^
)	,
,	,
thus	R
the	D
string	N
length	N
differs	V
!	,
Am	V
I	O
missing	V
something	R
obvious	A
here	R
or	&
what	O
?	,
If	P
not	R
,	,
how	R
would	V
you	O
reliably	R
(	,
cross-platform	E
/	E
browser	E
)	,
make	V
sure	A
that	P
the	D
textarea	^
is	V
limited	A
.	,

@Fran	@
ois	G
:	,
Always	R
enclose	A
things	N
in	P
tag	N
brackets	N
in	P
back-ticks	^
(	,
e.g.	N
format	N
them	O
as	P
code	N
)	,
,	,
or	&
they	O
will	V
be	V
stripped	V
out	T
on	P
display	^
of	P
your	D
question	N
.	,

just	R
stumbled	V
across	P
such	A
situation	N
.	,
your	D
topic	N
made	V
my	D
day	N
,	,
sir	N
!	,
thanks	V
a	D
lot	N
!	,

Do	V
you	O
particularly	R
care	V
which	D
line-endings	N
are	V
used	V
?	,
Why	R
not	R
just	R
make	V
the	D
Java	^
convert	V
"	,
\r\n	N
"	,
to	P
"	,
\n	N
"	,
?	,
(	,
Note	V
that	O
"	,
\r\n	N
"	,
is	V
the	D
Windows	^
style	N
;	,
"	,
\n	N
"	,
is	V
the	D
Unix	^
style	N
.	,
)	,
Alternatively	R
,	,
do	V
the	D
reverse	N
when	R
checking	V
the	D
length	N
within	P
the	D
JavaScript	N
.	,

OK	A
.	,
I	O
get	V
it	O
.	,
I	O
guess	V
that	O
means	V
that	D
Javascript	^
always	R
represents	V
carriage	N
returns	V
the	D
UNIX	^
way	N
internally	R
and	&
through	P
its	D
APIs	^
(	E
i.e.	E
`	E
length()	E
`)	E
.	,
Somehow	!
I	O
gets	V
converted	V
to	P
`	,
\r\n	^
`	,
because	P
the	D
Java	^
VM	^
is	V
running	V
on	P
Windows	^
.	,
I	O
wish	V
it	O
was	V
more	A
uniform	N
...	,

+1	$
,	,
normalizing	V
sounds	V
good	A
here	R

I	O
don't	V
know	V
what	O
rules	V
different	A
browsers	N
on	P
servlet	D
engines	N
will	V
apply	V
,	,
but	&
normalization	N
should	V
remove	V
the	D
differences	N
either	&
way	N
.	,
Btw	!
,	,
it's	L
worth	V
trying	V
on	P
macs	^
too	R
,	,
where	R
\r	R
is	V
the	D
normal	A
linebreak	N
.	,

+1	$
Just	R
remove	V
all	R
"	,
\r	^
"	,
and	&
everybody	N
will	V
be	V
happy	A
,	,
whatever	D
platform	N
you	O
are	V
using	V
.	,
Macs	^
included	V
.	,

Are	V
you	O
limiting	V
it	O
to	P
2000	$
chars	N
so	P
it	O
fits	V
inside	P
an	D
nvarchar	N
(	,
2000	$
)	,
column	N
in	P
a	D
database	N
?	,
Otherwise	R
maybe	R
just	R
allow	V
a	D
2%	$
overrun	N
to	P
be	V
flexible	A
on	P
the	D
Java	^
side	N
.	,
And	^
Java	^
should	V
be	V
using	V
Unicode	^
UTF16	^
to	P
represent	V
Strings	^
.	,
That	O
/	,
r	V
must	V
have	V
got	V
in	T
there	R
somewhere	R
else	R
,	,
maybe	R
a	D
conversion	N
in	P
the	D
web	N
browser	N
when	R
submitting	V
?	,
Have	V
you	O
tried	V
different	A
browsers	N
?	,
On	R
different	A
platforms	N
?	,
You	O
might	V
just	R
have	V
to	P
strip	N
out	P
the	D
/	N
r	G
s	G
.	,

This	D
isn't	V
really	R
a	D
JavaScript	N
(	,
or	&
Java	^
)	,
problem	N
-	,
both	D
layers	N
report	V
an	D
accurate	A
length	N
for	P
the	D
string	N
they	O
are	V
dealing	V
with	P
.	,
The	D
problem	N
in	P
your	D
case	N
is	V
that	P
the	D
string	N
gets	V
transformed	V
during	P
the	D
HTTP	N
transmission	N
.	,
If	P
you	O
absolutely	R
must	V
ensure	V
that	P
the	D
string	N
doesn't	V
exceed	V
a	D
certain	A
length	N
,	,
you	O
can	V
mimic	V
this	D
transformation	N
on	P
the	D
client	N
by	P
replacing	V
every	D
instance	N
of	P
"	,
\n	N
"	,
with	P
"	,
\n\r	^
"	,
-	,
but	&
only	R
for	P
length	N
verification	N
purposes	N
:	,

Note	N
:	,
The	D
code	N
should	V
be	V
`	,
textarea.value.replace	^
(/	E
\n	^
/	,
g	G
,	,
"	,
\n\r	E
")	E
.	,
length	N
`	,
to	P
find	V
all	D
occurrences	N
.	,
The	D
original	A
code	N
only	R
looks	V
for	P
the	D
first	A
match	N
.	,

Thanks	N
.	,
Fixed	V
it	O
.	,

It	O
should	V
be	V
`"	,
\r\n	^
"`	^
,	,
not	R
`"	,
\n\r	^
"`	^
.	,

To	P
remember	V
that	P
the	D
right	A
order	N
is	V
`	,
\r\n	E
`	,
,	,
remember	V
`	,
\r	^
`	,
stands	V
for	P
Carriage	^
?	,
eturn	E
(	E
`	E
Cr	^
`)	^
and	&
`	,
\n	E
`	,
stands	V
for	P
(	,
?	,
ew	!
)	,
Line	N
Feed	V
(	E
`	E
Lf	E
`)	E
in	P
`	,
CrLf	^
`	,
.	,

I	O
think	V
you	O
need	V
to	P
do	V
the	D
line	N
ending	V
conversion	N
/	,
check	V
on	P
both	D
client	N
and	&
server	N
because	P
you	O
don't	V
know	V
what	D
line	N
endings	N
the	D
client	N
browser	N
is	V
going	V
to	P
use	V
(	,
Firefox	^
submits	V
\n	^
even	R
on	P
Windows	^
)	,
and	&
if	P
you	O
develop	V
server	N
side	N
on	P
Windows	^
and	&
deploy	R
on	P
Linux	^
then	R
the	D
line	N
endings	N
will	V
be	V
handled	V
differently	R
.	,

