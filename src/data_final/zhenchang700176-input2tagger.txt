How	N
can	N
I	N
handle	N
Java	N
object	N
serialization	N
with	N
JavaScript	N
?	N

I	N
have	N
serialized	N
the	N
Java	N
object	N
located	N
on	N
the	N
server	N
side	N
and	N
sent	N
it	N
to	N
the	N
client	N
How	N
can	N
I	N
deserialize	N
that	N
XML	N
string	N
into	N
the	N
Java	N
object	N
using	N
JavaScript	N
and	N
execute	N
the	N
methods	N
of	N
person	N
class	N
in	N
the	N
client	N
side	N
using	N
the	N
JavaScript	N
?	N
Please	N
help	N
me	N
with	N
syntax	N
or	N
any	N
guidelines	N
.	N

Is	N
this	N
not	N
a	N
duplicate	N
of	N
your	N
previous	N
questions	N
?	N
I'm	N
getting	N
a	N
distinct	N
sense	N
of	N
deja	N
vu	N
here	N

XML	N
is	N
presented	N
as	N
a	N
DOM	N
tree	N
to	N
JavaScript	N

ok	N
,	N
how	N
does	N
the	N
javascript	N
deserialize	N
that	N
recieved	N
XML	N
into	N
Java	N
object.since	N
i	N
want	N
to	N
deserialize	N
into	N
java	N
object	N
so	N
that	N
it	N
could	N
be	N
executed	N
in	N
client	N
side	N
JVM	N
once	N
instantiating	N
that	N
java	N
object	N

What	N
you're	N
describing	N
here	N
sounds	N
different	N
than	N
your	N
question	N
.	N

why	N
do	N
you	N
need	N
JavaScript	N
do	N
deserialize	N
the	N
objects	N
?	N
why	N
don't	N
you	N
simply	N
use	N
a	N
Java-to-Java	N
connection	N
?	N

You	N
can't	N
run	N
Java	N
methods	N
with	N
Javascript	N
.	N
The	N
only	N
thing	N
you	N
could	N
do	N
is	N
to	N
read	N
the	N
properties	N
of	N
the	N
Java	N
object	N
-	N
this	N
is	N
the	N
only	N
information	N
that	N
is	N
serialized	N
in	N
the	N
XML	N
file	N
.	N
It	N
is	N
very	N
easy	N
to	N
read	N
XML	N
with	N
javascript	N
.	N
To	N
be	N
able	N
to	N
serialize	N
a	N
Java	N
object	N
,	N
send	N
it	N
to	N
a	N
client	N
and	N
execute	N
Java	N
code	N
there	N
a	N
totally	N
different	N
architecture	N
would	N
be	N
needed	N
.	N
At	N
first	N
you	N
need	N
Java	N
running	N
on	N
the	N
client	N
too	N
.	N
Then	N
you	N
would	N
need	N
to	N
employ	N
a	N
method	N
like	N
RMI	N
.	N

does	N
satisfy	N
meet	N
my	N
requirements	N
sir	N
?	N

Yes	N
,	N
but	N
you	N
still	N
need	N
a	N
different	N
serializing	N
technique	N
and	N
dealing	N
with	N
security	N
issues	N
.	N
The	N
applet	N
would	N
probably	N
need	N
to	N
be	N
signed	N
in	N
order	N
to	N
be	N
able	N
to	N
communicate	N
with	N
the	N
RMI	N
server	N
.	N

This	N
seems	N
overly	N
complicated	N
.	N
What	N
he	N
really	N
needs	N
is	N
to	N
make	N
his	N
Java	N
server	N
provide	N
a	N
web	N
service	N
and	N
then	N
he	N
needs	N
to	N
call	N
that	N
web	N
service	N
using	N
AJAX	N
.	N

You	N
can	N
call	N
Java	N
methods	N
on	N
the	N
client	N
side	N
using	N
JavaScript	N
by	N
using	N
SOAP	N
.	N
This	N
article	N
explains	N
how	N
to	N
create	N
a	N
WSDL	N
web	N
service	N
that	N
can	N
be	N
accessed	N
by	N
any	N
SOAP	N
client	N
that	N
supports	N
WSDL	N
.	N
You	N
can	N
then	N
call	N
the	N
Java	N
WSDL	N
service	N
using	N
AJAX	N
in	N
JavaScript	N
(	N
if	N
you	N
can	N
find	N
a	N
JS	N
library	N
that	N
implements	N
SOAP	N
and	N
WSDL	N
)	N
.	N
Alternatively	N
,	N
you	N
can	N
write	N
a	N
simplified	N
front-end	N
to	N
the	N
Java	N
WSDL	N
service	N
in	N
PHP	N
using	N
PHP's	N
built-in	N
SoapClient	N
library	N
.	N
Make	N
it	N
take	N
some	N
simple	N
GET	N
arguments	N
and	N
return	N
JSON	N
or	N
XML	N
.	N
You	N
could	N
then	N
trivially	N
access	N
the	N
PHP	N
web	N
service	N
using	N
AJAX	N
via	N
jQuery	N
(	N
or	N
an	N
equivalent	N
AJAX-supporting	N
library	N
)	N
.	N

+1	N
XStream	N
supports	N
JSON	N
out	N
of	N
the	N
box	N
.	N

If	N
you're	N
going	N
for	N
an	N
applet	N
and	N
want	N
to	N
make	N
Javascript	N
calls	N
from	N
Java	N
,	N
checkout	N
the	N
LiveConnect	N
with	N
the	N
JSObject	N
wrapper	N
class	N
.	N
This	N
way	N
you	N
can	N
excute	N
javascript	N
functions	N
inside	N
the	N
applet	N
(	N
and	N
pass	N
information	N
in	N
between	N
);	N
Look	N
into	N
the	N
IRIS	N
applictation	N
made	N
for	N
Flickr	N
,	N
it's	N
open	N
source	N
and	N
uses	N
this	N
technique	N
.	N
The	N
Belgian	N
JUG	N
Parleys	N
have	N
a	N
speech	N
from	N
a	N
convention	N
covering	N
some	N
of	N
this	N
,	N
You	N
can	N
find	N
it	N
here	N
.	N

