GWT	^
conditional	A
compile	V

I'm	L
using	V
the	D
same	A
source	N
code	N
for	P
a	D
GWT	^
1.5	$
and	&
GWT	^
1.7	$
application	N
.	,
I'm	L
wondering	V
is	V
there	R
a	D
way	N
to	P
conditionally	R
compile	A
parts	N
of	P
the	D
java	N
code	N
for	P
one	$
or	&
the	D
other	A
version	N
.	,
I	O
know	V
there	R
is	V
a	D
way	N
to	P
do	V
it	O
for	P
widgets	N
and	&
browsers	N
in	P
the	D
module	^
XML	^
file	N
.	,

I	O
don't	V
think	V
so	R
.	,
Why	R
would	V
you	O
compile	V
for	P
two	$
GWT	A
sources	N
?	,
We	O
went	V
from	P
1.5	$
to	P
1.7	$
without	P
problems	N
.	,

We	O
did	V
to	P
.	,
But	&
in	P
one	$
case	N
the	D
old	A
(	,
1.5	$
)	,
and	&
the	D
new	A
(	,
1.7	$
)	,
compiled	V
code	N
does	V
not	R
behave	V
the	D
same	A
.	,
It's	L
a	D
combination	N
of	P
java	^
and	&
native	A
inserted	V
scripts	N
.	,
Moving	V
the	D
old	A
(	,
1.5	$
)	,
code	N
to	P
the	D
new	A
interfaces	N
removing	V
all	O
deprecated	V
calls	V
is	V
currently	R
to	P
much	A
work	N
.	,

If	P
you	O
really	R
want	V
to	P
do	V
that	P
I	O
guess	V
the	D
approach	N
would	V
be	V
to	P
use	V
a	D
Generator	N
.	,
With	P
a	D
generator	N
you	O
can	V
have	V
deferred	A
binding	N
(	,
a	D
bit	N
a	D
poor	A
man's	S
introspection	N
)	,
.	,
To	P
get	V
access	V
to	P
the	D
1.5	$
or	&
1.7	$
code	N
you	O
then	R
have	V
to	P
define	V
the	D
generic	A
API	^
in	P
an	D
interface	N
and	&
use	V
GWT.create	N
on	P
it	O
to	P
get	V
the	D
concrete	A
implementation	N
.	,

The	D
solution	N
is	V
very	R
simple	A
.	,

if	P
(	E
version.startsWith	E
(	E
"	E
1.5	E
"))	E
{	E
//	E
do	V
something	V
the	D
1.5	$
.	,
*	,
way	N
}	,
Is	V
actually	R
kind	A
of	P
a	D
bad	A
idea	N
.	,
Ideally	R
you	O
should	V
use	V
absolute	A
string	N
values	V
here	R
,	,
because	P
the	D
GWT	^
compiler	N
will	V
evaluate	V
equality	N
and	&
trim	V
unreachable	A
code	N
inside	P
an	D
if	P
conditional	A
from	P
the	D
compiled	V
output	N
.	,
Using	V
.	,
startsWith	N
means	V
that	P
all	X
the	D
code	N
will	V
end	N
up	T
in	P
the	D
final	A
application	N
.	,
Unfortunately	R
GWT	A
version	N
is	V
not	R
a	D
compile	A
time	N
property	N
.	,
Perhaps	R
the	D
best	A
way	N
to	P
do	V
it	O
would	V
be	V
to	P
create	V
an	D
empty	A
Generator	N
implementation	N
that	P
just	R
returns	V
"	,
ClassName15	^
"	,
or	&
"	,
ClassName17	^
"	,
from	P
a	D
call	N
in	P
your	D
module	N
for	P
"	,
ClassName	N
"	,
.	,
You	O
can	V
then	R
,	,
at	O
compile	V
time	N
,	,
call	V
About.version()	^
from	P
the	D
generator	N
and	&
find	V
out	T
what	O
the	D
version	N
is	V
at	P
compile	V
time	N
.	,

Thanks	N
for	P
pointing	V
that	D
out	T
,	,
but	&
this	D
is	V
the	D
only	A
solution	N
I	O
have	V
found	V
.	,
And	&
it	O
is	V
only	A
for	P
a	D
small	A
code	N
snippet	N
.	,
So	P
the	D
solution	N
works	V
just	R
fine	A
for	P
me	O
.	,

