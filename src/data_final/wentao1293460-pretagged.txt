ESRI	^
frameworks	^
:	,
java	N
vs	P
javascript	D

I'm	L
about	P
to	P
develop	V
a	D
web	N
mapping	V
application	N
with	P
ESRI	^
Products	^
like	P
ArcGIS	^
Server	^
and	&
Image	N
Server	N
.	,
I	O
can't	V
find	V
a	D
good	A
comparison	N
between	P
the	D
Java	^
Web	^
ADF	^
and	&
the	D
Javascript	^
Framework	^
.	,
They're	L
of	P
course	N
different	A
because	P
one	O
is	V
a	D
full	A
environment	N
and	&
the	D
other	N
is	V
only	A
client	N
side	N
but	&
it's	L
much	R
more	R
concise	A
and	&
the	D
step	N
to	P
start	V
is	V
minimal	A
.	,
Another	D
problem	N
is	V
that	P
the	D
Java	^
Web	^
ADF	^
is	V
not	R
compatible	A
with	P
our	D
current	A
application	N
server	N
(	,
JBoss	^
4.2	$
.	,
2	$
)	,
and	&
require	V
an	D
old	A
4.0	$
.	,
2	$
version	N
.	,
Someone	N
out	P
there	X
has	V
experience	N
that	O
can	V
help	V
me	O
?	,
Many	A
thanks	N
.	,

Seems	V
that	D
everybody	N
hate	V
the	D
Java	^
Web	^
ADF	^
,	,
http://www.spatiallyadjusted.com/2008/01/30/esris-web-adf-is-one-horrific-development-platform	U
/	,

I	O
don't	V
have	V
direct	A
experience	N
with	P
the	D
Java	^
Web	^
ADF	^
,	,
but	&
I	O
have	V
worked	V
with	P
the	D
.	,
Net	N
version	N
and	&
am	V
now	R
working	V
with	P
the	D
Flex	^
API	^
.	,
The	D
main	A
problem	N
with	P
the	D
Web	^
ADFs	^
that	P
I	O
have	V
seen	V
and	&
heard	V
from	P
other	A
developers	N
is	V
that	P
they're	L
very	R
cumbersome	A
to	P
use	V
.	,
The	^
newer	A
frameworks	^
(	,
Javascript	^
,	,
Silverlight	!
,	,
and	&
Flex	N
)	,
are	V
much	A
lighter-weight	N
,	,
easier	A
to	P
use	V
,	,
and	&
you	O
can	V
up	T
to	P
speed	N
much	R
quicker	A
with	P
them	O
.	,
For	P
example	N
,	,
a	D
test	N
application	N
I	O
wrote	V
withg	T
the	D
.	,
Net	N
ADF	N
took	V
me	O
almost	R
three	$
weeks	N
before	P
I	O
gave	V
up	T
on	P
it	O
.	,
At	P
that	D
time	N
I	O
gave	V
up	T
using	V
the	D
ADF	N
and	&
just	R
did	V
WebService	^
calls	V
against	P
ArcGIS	^
Server	^
since	P
that	O
was	V
easier	A
to	P
do	V
than	P
to	P
try	V
to	P
figure	V
out	T
the	D
ADF	N
.	,
Contrast	V
that	O
to	P
using	V
the	D
Flex	^
API	^
on	P
a	D
similar	A
project	N
,	,
which	D
I	O
just	R
started	V
last	A
week	N
,	,
and	&
I	O
have	V
an	D
almost	R
complete	A
app	N
as	P
of	P
this	D
morning	N
.	,
I	O
would	V
avoid	V
the	D
ADFs	^
and	&
go	V
with	P
the	D
Javascript	^
API	^
.	,

What	O
you	O
need	V
depends	V
on	P
what	O
you	O
want	V
.	,
If	P
you	O
want	V
to	P
create	V
just	R
a	D
viewer	N
(	,
as	P
opposed	V
to	P
an	D
application	N
in	P
which	D
users	N
can	V
add	V
(	,
e.g.	N
draw	V
)	,
geographical	A
data	N
)	,
,	,
by	P
all	X
means	V
,	,
use	V
the	D
javascript	^
api	^
!	,
I've	L
been	V
working	V
with	P
the	D
web	N
adf	E
(	E
v9.3	E
)	E
for	P
some	D
time	N
now	R
and	&
am	V
still	R
frustrated	A
at	P
every	O
turn	V
.	,
Primarily	R
for	P
its	D
lack	N
of	P
proper	A
documentation	N
,	,
but	&
also	R
for	P
various	A
other	A
reasons	N
,	,
such	A
as	P
these	O
:	,
It	O
requires	V
you	O
to	P
use	V
the	D
jsf	N
reference	N
implementation	N
,	,
but	&
it	O
does	V
not	R
allow	V
you	O
to	P
use	V
some	D
of	P
its	L
basic	A
functionality	N
,	,
such	R
as	P
(	E
f	E
:)	E
subviews	E
.	,
This	D
makes	V
it	O
impossible	A
to	P
use	V
any	D
templating	N
systems	N
,	,
such	A
as	P
facelets	^
.	,
Lots	N
of	P
stuff	V
you	O
want	V
to	P
be	V
able	A
to	P
configure	O
is	V
hardcoded	V
in	P
esri's	Z
jar	N
files	N
.	,
For	P
example	N
,	,
the	D
map	N
MUST	V
be	V
directly	R
under	P
form	N
>	P
which	O
must	V
be	V
the	D
first	A
element	N
of	P
the	D
DOM	N
tree	N
.	,
If	P
not	R
,	,
map-movement	A
listeners	N
such	R
as	P
the	D
ContinueousPanListener	N
are	V
unable	A
to	P
find	V
the	D
map	N
and	&
hence	R
fail	V
at	P
updating	V
the	D
map	N
position	N
.	,
It's	L
impossible	A
to	P
code	N
your	D
jsp	A
pages	N
in	P
xml	D
style	N
,	,
since	P
the	D
web	N
adf	P
inlines	S
pieces	N
of	P
at	P
a	D
lot	N
of	P
places	N
in	P
your	D
code	N
,	,
with	P
xslt	N
.	,
Its	L
learning	V
curve	N
is	V
very	R
steep	A
and	&
without	P
the	D
proper	A
docs	N
,	,
you'll	L
be	V
looking	V
for	P
days	N
or	&
even	R
weeks	N
on	P
how	R
to	P
do	V
the	D
most	R
trivial	A
things	N
.	,
Some	O
of	P
these	D
end	N
up	T
to	P
be	V
downright	R
impossible	A
or	&
impractical	A
,	,
because	P
you're	L
not	R
adopting	V
esri's	Z
mindset	N
.	,
The	D
default	N
interface	N
is	V
not	R
very	R
intuitive	A
.	,
You	O
may	V
still	R
end	V
up	T
doing	V
lots	N
of	P
work	V
in	P
javascript	V
to	P
get	V
the	D
way	N
the	D
application	N
draws	V
to	P
your	D
liking	V
.	,
The	^
undo	^
functionality	N
requires	V
a	D
versioned	A
database	N
,	,
which	O
is	V
impractical	A
/	,
impossible	A
for	P
application	N
that	P
serves	V
more	R
than	P
10	$
or	&
so	P
users	N
at	P
the	D
same	A
time	N
,	,
plus	&
,	,
the	D
round	N
trip	N
to	P
the	D
server	N
for	P
every	D
undo	V
action	N
is	V
a	D
waste	N
.	,
In	P
short	A
:	,
You	O
can	V
make	V
some	D
interesting	A
apps	N
and	&
if	P
you	O
know	V
your	D
stuff	N
,	,
there's	L
work	V
a	D
plenty	N
to	P
be	V
found	V
in	P
the	D
sector	N
,	,
but	&
if	P
its	L
just	R
for	P
'	,
some	D
project	N
'	,
,	,
I'd	L
switch	V
to	P
some	D
..	,
any	D
!	,
other	A
framework	N
,	,
such	A
as	P
openGeo	N
..	,

I	O
accepted	V
your	D
answer	N
because	P
is	V
the	D
most	R
complete	A
,	,
but	&
thanks	N
to	P
everybody	N
for	P
yours	D
time	N
.	,

Web	^
ADF	^
was	V
ESRI's	Z
first	R
attempt	V
to	P
create	V
an	D
ArcGIS	^
Server	^
simplified	^
API	^
.	,
However	R
,	,
as	P
time	N
progressed	V
,	,
the	D
Web	^
ADF	^
ended	V
up	T
with	P
its	L
own	A
abstractions	N
that	P
were	V
as	P
complicated	V
as	P
the	D
"	,
standard	A
"	,
ArcGIS	^
Server	^
ArcObjects	^
API	^
and	&
not	R
as	R
powerful	A
.	,
Therefore	R
,	,
I	O
would	V
recommend	V
the	D
later	R
incarnations	N
...	,
javascript	N
,	,
flex	V
,	,
etc	G

Its	L
depends	V
on	P
the	D
requirements	N
.	,
I	O
java	N
web	N
adf	P
you	O
could	V
have	V
more	A
flexiblity	N
to	P
use	V
arcobjects	N
compared	V
to	P
java	N
script	N
api	N
.	,
i	O
am	V
using	V
.	,
net	N
adf	P
i	O
was	V
wanted	V
to	P
move	V
to	P
jsapi	^
.	,
but	&
due	A
to	P
limitation	N
of	P
arcobject	D
usage	N
in	P
jsapi	^
i	^
am	V
still	R
with	P
web	N
adf	N
.	,
I	O
think	V
still	R
jsapi	O
is	V
not	R
grown	A
as	P
compared	V
to	P
web	N
adf	N
.	,
for	P
just	R
viwer	R
small	A
task	N
js	^
api	^
is	V
fine	A
.	,
but	&
if	P
you	O
are	V
creating	V
complex	A
tasks	N
geoprocessing	V
then	R
its	L
worth	V
to	P
stick	V
with	P
web	N
adf	N
.	,

there	X
is	V
good	A
blog	N
post	N
on	P
ESRI	^
Developer	^
Blog	N
today	N
.	,
have	V
a	D
look	V
.	,

If	P
you	O
need	V
to	P
edit	V
geospatial	N
data	N
then	R
you	O
have	V
to	P
use	V
the	D
Web	^
ADF	^
which	O
is	V
access	V
to	P
the	D
ArcObjects	N
.	,
If	P
you	O
are	V
just	R
working	V
with	P
viewing	N
data	N
maybe	R
some	D
redlines	V
that	O
are	V
not	R
saved	V
to	P
your	D
geodatabase	N
then	R
JavaScript	^
API	^
works	V
nice	A
.	,
Geoprocessing	V
can	V
be	V
done	V
in	P
the	D
JSAPI	^
.	,
You	O
can	V
also	R
publish	A
models	N
and	&
use	V
them	O
in	P
the	D
JSAPI	^
.	,
I	O
hear	V
that	P
the	D
newer	A
APIs	N
-	,
JavaScript	^
API	^
will	V
have	V
the	D
ability	N
to	P
edit	V
in	P
the	D
near	A
future	A
.	,
As	P
is	V
mentioned	V
the	D
web	N
ADF	N
is	V
broad	A
and	&
fairly	R
complex	A
.	,
It	O
has	V
a	D
good	A
learning	N
curve	N
to	P
it	O
.	,
I	O
have	V
just	R
started	V
getting	V
my	D
head	N
around	P
it	O
and	&
figuring	V
out	T
the	D
logic	N
.	,
I	O
am	V
using	V
the	D
.	,
NET	^
ADF	^
v9.3.1	$
I	O
have	V
not	R
had	V
many	A
problems	N
with	P
it	O
once	R
I	O
started	V
figuring	V
out	T
the	D
API	^
.	,
It	O
is	V
not	R
for	P
the	D
casual	A
user	N
.	,

You	O
can	V
do	V
editing	V
via	P
the	D
JSAPI	^
using	V
a	D
geoprocessing	N
service	N
too	R
.	,
Version	N
2.0	$
(	,
due	A
out	N
with	P
ArcGIS	^
Server	^
9.4	^
)	,
will	V
have	V
editing	V
capabilities	N
built	V
in	T
.	,
That	O
said	V
,	,
if	P
a	D
plan	N
involves	V
exposing	V
editing	V
of	P
geospatial	N
data	N
via	P
a	D
public	A
facing	V
webpage	N
,	,
that	O
plan	V
needs	V
to	P
be	V
rethought	!
.	,
If	P
you	O
are	V
working	V
internally	R
,	,
ArcGIS	^
Engine	^
is	V
probably	R
a	D
better	A
option	N
.	,

Stay	^
far	R
,	,
far	R
away	R
from	P
the	D
Java	^
Web	^
ADF	^
.	,
I	O
would	V
rather	R
stick	V
hot	A
irons	N
in	P
my	D
eyes	N
than	P
develop	V
with	P
the	D
ADF	N
.	,
It	O
doesn't	V
work	V
well	R
with	P
other	A
JSF	^
frameworks	^
,	,
any	D
custom	A
functionality	N
results	N
in	P
you	O
trying	V
to	P
develop	V
javascript	N
-	,
but	&
only	R
by	P
first	R
embedding	V
the	D
javascript	N
within	P
XSL	^
page	N
fragments	N
.	,
It	O
is	V
cumbersome	A
,	,
confusing	A
,	,
but	&
-	,
at	O
least	R
it	O
is	V
slow	R
.	,
ESRI	^
is	V
not	R
recommending	V
the	D
Java	^
Web	^
ADF	^
for	P
any	D
new	A
applications	N
.	,

We've	L
just	R
gone	A
through	P
the	D
same	A
thing	N
and	&
it	O
would	V
appear	V
the	D
ESRI	^
REST	^
APIs	^
are	V
the	D
way	N
to	P
go	V
if	P
you	O
want	V
a	D
lightweight	A
services	N
based	V
application	N
with	P
a	D
'	,
rich	A
'	,
front	A
end	N
,	,
rather	R
than	P
the	D
ADF	^
bloat	N
.	,
There's	L
a	D
good	A
summary	N
of	P
all	X
the	D
ESRI	^
frameworks	^
on	P
their	D
UK	^
site	N
here	R
.	,

Editing	V
with	P
the	D
REST	^
API	^
and	&
the	D
client	N
API's	Z
(	,
JS	^
,	,
Flex	^
,	,
Silverlight	!
)	,
will	V
be	V
available	A
at	P
version	N
10	$
(	,
verison	^
9.4	^
renamed	V
)	,
which	O
will	V
be	V
released	V
in	P
Summer	^
2010	$
.	,
This	D
thread	N
is	V
a	D
bit	N
old	A
now	R
,	,
but	&
I	O
concur	V
with	P
those	O
who	O
suggest	V
not	R
using	V
the	D
Java	^
ADF	^
.	,
Use	V
the	D
JavaScript	N
,	,
Flex	^
or	&
Silver	N
light	N
API's	Z
as	P
they	O
scale	N
much	R
better	R
.	,
If	P
you	O
need	V
to	P
perform	V
GIS	^
actions	N
on	P
the	D
server	N
then	R
use	V
the	D
SOAP	^
API	^
in	P
a	D
custom	A
web	N
service	N
.	,
Only	R
look	V
at	P
ArcObjects	^
when	R
you	O
definitely	R
have	V
to	P
and	&
then	R
make	V
sure	R
you	O
use	V
a	D
Server	^
Object	^
Utility	^
or	&
extension	N
to	P
give	V
yourself	O
the	D
best	A
chance	N
of	P
making	V
a	D
online	A
application	N
that	P
runs	V
quickly	R
.	,
http://edndoc.esri.com/arcobjects/9.2/net_server_doc/developer/samples/web_applications/arcgis_simple_server_object_extension/8e8b2bf6-1877-4c48-80fe-266f5fa70f57.htm	U

