How	N
to	N
transfer	N
java	N
array	N
to	N
javaScript	N
array	N
using	N
jsp	N
?	N

I	N
have	N
a	N
list	N
of	N
strings	N
on	N
my	N
server	N
which	N
I	N
am	N
trying	N
to	N
get	N
to	N
the	N
client	N
in	N
the	N
form	N
of	N
an	N
array	N
.	N
The	N
code	N
I	N
am	N
attempting	N
to	N
use	N
is	N
the	N
following	N
:	N
Within	N
the	N
jsp	N
I	N
have	N
a	N
List	N
String	N
column	N
I	N
am	N
attempting	N
the	N
following	N
code	N
:	N
This	N
code	N
simply	N
returns	N
the	N
first	N
element	N
in	N
the	N
columns	N
list	N
for	N
every	N
element	N
in	N
the	N
colArray	N
.	N
I	N
have	N
also	N
tried	N
:	N
which	N
does	N
not	N
work	N
either	N
.	N
I	N
feel	N
like	N
I	N
am	N
making	N
a	N
little	N
mistake	N
somewhere	N
and	N
am	N
just	N
not	N
seeing	N
it	N
.	N
Is	N
what	N
I	N
am	N
trying	N
to	N
do	N
possible	N
in	N
the	N
way	N
that	N
I	N
am	N
attempting	N
?	N
Thanks	N
.	N

You're	N
getting	N
the	N
JSP	N
code	N
that	N
is	N
executed	N
on	N
the	N
server	N
mixed	N
up	N
with	N
the	N
JavaScript	N
code	N
that's	N
executed	N
on	N
the	N
client	N
.	N
The	N
snippet	N
%=	N
columns.get	N
(	N
j++	N
)	N
%	N
is	N
executed	N
once	N
,	N
on	N
the	N
server	N
,	N
and	N
the	N
JavaScript	N
loop	N
around	N
it	N
is	N
irrelevant	N
at	N
this	N
point	N
.	N
When	N
it	N
arrives	N
the	N
the	N
client	N
,	N
the	N
loop's	N
body	N
just	N
says	N
colArray[i	N
]	N
=	N
"	N
first	N
entry	N
"	N
;	N
which	N
of	N
course	N
puts	N
the	N
same	N
string	N
into	N
every	N
element	N
of	N
the	N
array	N
.	N
What	N
you	N
need	N
to	N
do	N
instead	N
is	N
to	N
have	N
a	N
loop	N
execute	N
on	N
the	N
server	N
,	N
like	N
this	N
:	N
My	N
JSP	N
skills	N
are	N
rusty	N
,	N
and	N
the	N
syntax	N
may	N
be	N
different	N
,	N
but	N
I	N
hope	N
you	N
get	N
the	N
idea	N
.	N
Edit	N
:	N
As	N
was	N
pointed	N
out	N
in	N
the	N
comments	N
,	N
you	N
need	N
to	N
be	N
VERY	N
careful	N
about	N
escaping	N
anything	N
in	N
those	N
Strings	N
that	N
could	N
cause	N
them	N
to	N
be	N
interpreted	N
as	N
JavaScript	N
code	N
(	N
most	N
prominently	N
quotation	N
marks	N
)	N
-	N
especially	N
if	N
they	N
contain	N
user-generated	N
content	N
.	N
Otherwise	N
you're	N
leaving	N
your	N
app	N
wide	N
open	N
to	N
Cross-site	N
scripting	N
and	N
Cross-site	N
request	N
forgery	N
attacks	N
.	N

This	N
will	N
not	N
work	N
if	N
the	N
strings	N
contain	N
characters	N
such	N
as	N
double-quote	N
,	N
backslash	N
or	N
newline	N
.	N
Such	N
characters	N
will	N
need	N
to	N
be	N
escaped	N
.	N

I'd	N
also	N
add	N
a	N
semicolon	N
to	N
the	N
end	N
of	N
the	N
second	N
line	N
.	N

Once	N
the	N
JavaScript	N
reaches	N
the	N
client	N
,	N
the	N
server	N
code	N
has	N
stopped	N
executing	N
.	N
The	N
server	N
code	N
does	N
not	N
execute	N
"	N
in	N
parallel	N
"	N
with	N
the	N
client	N
code	N
.	N
You	N
have	N
to	N
build	N
the	N
entire	N
JavaScript	N
initialization	N
in	N
Java	N
and	N
send	N
it	N
,	N
complete	N
and	N
executable	N
,	N
to	N
the	N
client	N
:	N
That	N
is	N
just	N
one	N
way	N
to	N
do	N
it	N
,	N
you	N
can	N
also	N
build	N
the	N
output	N
"	N
on	N
the	N
fly	N
"	N
by	N
embedding	N
the	N
server	N
code	N
inside	N
the	N
[	N
and	N
]	N
.	N
I	N
used	N
this	N
example	N
to	N
try	N
to	N
demonstrate	N
the	N
separation	N
between	N
building	N
the	N
string	N
that	N
comprises	N
the	N
client-side	N
JavaScript	N
and	N
outputting	N
that	N
to	N
the	N
browser	N
.	N

Try	N
using	N
JSON	N
(	N
Javascript	N
object	N
notation	N
)	N
it'd	N
be	N
quite	N
simple	N
to	N
encode	N
the	N
array	N
and	N
decode	N
it	N
on	N
javascript	N
check	N
it	N
out	N
here	N
http://www.json.org/java/index.html	N

Exp	N
Language	N
:	N

The	N
solutions	N
posted	N
above	N
didn't	N
work	N
in	N
my	N
case	N
,	N
I	N
needed	N
an	N
extra	N
Javascript	N
variable	N
to	N
do	N
the	N
transference	N
:	N

