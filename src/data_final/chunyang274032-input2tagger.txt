AJAX	N
/	N
jsp	N
/	N
HTML	N
vs	N
Applets	N

Which	N
approach	N
is	N
better	N
?	N
Having	N
jsp	N
/	N
HTML	N
based	N
web	N
application	N
which	N
allows	N
you	N
to	N
traverse	N
web	N
pages	N
in	N
the	N
browser	N
.	N
An	N
applet	N
based	N
web	N
application	N
which	N
opens	N
up	N
a	N
Swing	N
applet	N
screen	N
?	N

That	N
depends	N
on	N
your	N
criteria	N
.	N
Personally	N
,	N
I	N
prefer	N
HTML	N
based	N
web	N
applications	N
because	N
they	N
are	N
easier	N
for	N
search	N
engines	N
to	N
index	N
,	N
easier	N
to	N
bookmark	N
links	N
into	N
,	N
and	N
better	N
supported	N
across	N
multiple	N
browsers	N
.	N
An	N
applet	N
will	N
let	N
you	N
do	N
fancy	N
stuff	N
within	N
the	N
browser	N
,	N
without	N
needing	N
to	N
go	N
back	N
to	N
the	N
server	N
as	N
much	N
(	N
although	N
you	N
can	N
get	N
most	N
of	N
the	N
way	N
there	N
with	N
JavaScript	N
/	N
DOM	N
these	N
days	N
)	N
.	N

Applet	N
startup	N
times	N
are	N
pretty	N
slow	N
;	N
there	N
are	N
also	N
reports	N
that	N
Sun	N
is	N
stepping	N
away	N
from	N
swing	N
in	N
favor	N
of	N
JavaFX	N
.	N
While	N
the	N
libraries	N
will	N
probably	N
never	N
leave	N
java	N
,	N
they	N
will	N
tend	N
to	N
look	N
pretty	N
old	N
and	N
dated-	N
I	N
think	N
that	N
most	N
swing	N
apps	N
tend	N
to	N
look	N
pretty	N
awful	N
.	N
I'd	N
definately	N
recommend	N
HTML	N
/	N
Ajax-	N
they	N
will	N
work	N
in	N
more	N
places	N
and	N
on	N
more	N
browsers	N
.	N

The	N
correct	N
answer	N
is	N
"	N
insufficient	N
information	N
"	N
,	N
and	N
"	N
better	N
"	N
lacks	N
criteria	N
.	N
However	N
,	N
the	N
fact	N
that	N
you	N
are	N
asking	N
the	N
question	N
the	N
way	N
you	N
do	N
makes	N
me	N
believe	N
that	N
#1	N
is	N
probably	N
"	N
better	N
"	N
for	N
you	N
.	N
While	N
#2	N
provides	N
much	N
more	N
programmed	N
control	N
,	N
there	N
are	N
many	N
issues	N
.	N
If	N
you	N
need	N
the	N
control	N
,	N
then	N
#2	N
,	N
but	N
check	N
browser	N
compatibility	N
,	N
load	N
time	N
,	N
development	N
time	N
,	N
Java	N
experience	N
.	N
If	N
you	N
need	N
control	N
mostly	N
for	N
graphics	N
,	N
consider	N
Flash	N
.	N

I've	N
been	N
doing	N
web	N
applications	N
for	N
5	N
years	N
now	N
,	N
and	N
I'm	N
completely	N
sick	N
and	N
tired	N
of	N
HTML	N
/	N
JavaScript	N
.	N
The	N
development	N
of	N
tools	N
has	N
been	N
lackluster	N
at	N
best	N
,	N
and	N
the	N
fragmentation	N
of	N
implementations	N
has	N
only	N
continued	N
to	N
grow	N
.	N
At	N
the	N
same	N
time	N
,	N
Flash	N
applets	N
have	N
profusely	N
multiplied	N
.	N
More	N
and	N
more	N
people	N
are	N
moving	N
to	N
ActionScript	N
and	N
Flash	N
.	N
Silverlight	N
,	N
the	N
Microsoft	N
Applet	N
,	N
has	N
comeout	N
with	N
mild	N
fan-fare	N
.	N
The	N
next	N
Java	N
release	N
has	N
promised	N
faster	N
startup	N
times	N
to	N
support	N
applet	N
loading	N
.	N
I've	N
also	N
noticed	N
that	N
development	N
on	N
HTML	N
/	N
Javascript	N
/	N
(	N
insert	N
serverside	N
implementation	N
here	N
)	N
is	N
anywhere	N
from	N
2-4	N
times	N
slower	N
than	N
in	N
a	N
single	N
language	N
/	N
single	N
ide	N
environment	N
.	N
AJAX	N
has	N
yet	N
to	N
save	N
the	N
planet	N
,	N
and	N
has	N
only	N
created	N
a	N
huge	N
number	N
of	N
implementations	N
to	N
choose	N
between	N
,	N
and	N
then	N
in	N
the	N
end	N
feel	N
like	N
you	N
chose	N
the	N
wrong	N
one	N
.	N
My	N
vote	N
is	N
strongly	N
in	N
the	N
Applet	N
Corner	N
.	N

As	N
many	N
others	N
have	N
said	N
,	N
your	N
question	N
doesn't	N
have	N
enough	N
information	N
to	N
provide	N
an	N
answer	N
.	N
As	N
a	N
user	N
however	N
,	N
I	N
much	N
prefer	N
html	N
/	N
javascript	N
/	N
ajax	N
sites	N
over	N
applets	N
or	N
flash	N
.	N
One	N
suggestion	N
for	N
you	N
is	N
to	N
check	N
out	N
Google	N
Web	N
Toolkit	N
.	N
It	N
lets	N
you	N
write	N
in	N
Java	N
and	N
compile	N
to	N
javascript	N
.	N
A	N
pretty	N
nifty	N
tool	N
actually	N
.	N

This	N
answer	N
has	N
become	N
increasingly	N
relevant	N
in	N
the	N
past	N
6	N
months	N
.	N
Google	N
Web	N
Toolkit	N
has	N
become	N
a	N
strong	N
contender	N
.	N

HTML	N
/	N
JavaScript	N
is	N
the	N
bane	N
of	N
every	N
webapp	N
developer	N
,	N
but	N
they	N
get	N
the	N
job	N
done	N
,	N
in	N
most	N
cases	N
.	N
Webapps	N
are	N
nearly	N
free	N
of	N
limitations	N
,	N
and	N
can	N
mimic	N
a	N
great	N
deal	N
of	N
what	N
you	N
can	N
easily	N
achieve	N
with	N
a	N
simple	N
Swing	N
applet	N
.	N
Of	N
course	N
,	N
applets	N
are	N
also	N
confined	N
to	N
their	N
little	N
sandbox	N
within	N
the	N
browser's	N
memory	N
space	N
,	N
and	N
this	N
can	N
hinder	N
usability	N
.	N
Having	N
said	N
all	N
this	N
,	N
there	N
are	N
functions	N
that	N
a	N
webapp	N
simply	N
won't	N
be	N
able	N
to	N
do	N
as	N
efficiently	N
or	N
successfully	N
as	N
an	N
applet	N
,	N
mostly	N
dealing	N
with	N
non-conventional	N
graphic	N
elements	N
on	N
the	N
screen	N
.	N
Bottom	N
line	N
,	N
let	N
your	N
requirements	N
(	N
and	N
the	N
limitations	N
of	N
each	N
option	N
)	N
lead	N
you	N
to	N
the	N
right	N
answer	N
for	N
you	N
.	N
Yuval	N
=	N
8-)	N

Java	N
applets	N
ARE	N
solid	N
,	N
stable	N
,	N
supported	N
technology	N
,	N
even	N
at	N
the	N
end	N
of	N
the	N
year	N
2008	N
.	N
There	N
are	N
many	N
things	N
that	N
could	N
be	N
better	N
accomplished	N
by	N
using	N
applets	N
instead	N
of	N
AJAX	N
or	N
Flash	N
/	N
Flex	N
-	N
for	N
instance	N
,	N
displaying	N
MANY	N
interactive	N
objects	N
or	N
other	N
interactive	N
graphics-intensive	N
tasks	N
.	N
Why	N
not	N
flash	N
or	N
flex	N
?	N
Well	N
,	N
it	N
depends	N
,	N
Java	N
(	N
and	N
inherently	N
Java	N
Applets	N
)	N
has	N
many	N
great	N
libraries	N
that	N
could	N
be	N
reused	N
-	N
for	N
example	N
,	N
in	N
context	N
of	N
graphics	N
,	N
Apache	N
Batik	N
comes	N
into	N
mind	N
first	N
.	N
I	N
think	N
that	N
applets	N
are	N
so	N
loathed	N
technology	N
mainly	N
because	N
of	N
bad	N
deployment	N
.	N
Read	N
this	N
article	N
(	N
including	N
the	N
other	N
parts	N
)	N
for	N
explanation	N
if	N
interested	N
.	N
Of	N
course	N
,	N
applets	N
have	N
well-known	N
downsides	N
.	N
The	N
most	N
obvious	N
one	N
-	N
it	N
is	N
not	N
installed	N
on	N
an	N
average	N
Windows-based	N
computer	N
by	N
default	N
.	N
Firstly	N
,	N
that	N
is	N
not	N
convenient	N
for	N
your	N
visitor	N
to	N
install	N
JRE	N
with	N
browser	N
plugin	N
and	N
,	N
moreover	N
,	N
your	N
service	N
will	N
not	N
be	N
accessible	N
by	N
user	N
that	N
has	N
a	N
(	N
in	N
Windows	N
terms	N
)	N
"	N
limited	N
"	N
account	N
.	N
But	N
,	N
at	N
last	N
answering	N
your	N
question	N
:	N
it	N
depends	N
on	N
your	N
needs	N
.	N
Ask	N
yourself	N
whether	N
you	N
CAN	N
build	N
needed	N
service	N
using	N
AJAX	N
,	N
if	N
not	N
,	N
choose	N
between	N
Silverlight	N
,	N
Flash	N
/	N
Flex	N
or	N
,	N
yes	N
,	N
Applets	N
.	N

Having	N
worked	N
with	N
applications	N
in	N
the	N
enterprise	N
,	N
which	N
deal	N
with	N
large	N
amount	N
of	N
data	N
,	N
I	N
can	N
definitely	N
not	N
vouch	N
for	N
JavaScript	N
.	N
Browser	N
is	N
simply	N
too	N
slow	N
when	N
dealing	N
with	N
large	N
data	N
sets	N
.	N
What	N
is	N
the	N
perfect	N
technology	N
I	N
do	N
not	N
know	N
.	N
I	N
am	N
trying	N
my	N
hands	N
on	N
Java	N
FX	N
and	N
see	N
how	N
it	N
goes	N
.	N

