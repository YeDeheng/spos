Closing popups on session expiry	V N P N N
Here is the thing : my webapp has loads of popups and my boss wants ' em closed on session expiry , coz when session expires and an user presses refresh on a popup , he is being shown the logon page -> user logs on -> user is directed to the dashboard . Now , a dashboard screen in a popup is totally uncool . Here is where google got me : Have javascript to close popup onload . Generate this onload script into the response if session has expired ( checking session expiry from jsp and including onload script conditionally ) . Do you think this is a good way to it ? What is the best practice for this scenario ? P.S : I am not allowed to use AJAX	R V D N , D N V N P ^ & D N V , G V P N N , & R N V & D N V V P D N , O V V V D N N G N V P G N V V P D N , R , D N N P D N V R A , R V R ^ V O , V ^ P V N N , V D N N P D N P N V V , V N N P ^ & V N N R , , V O V D V D A N P O , O V D A N P D N , G , O V R V P V ^
The best practice is to not use " loads of popups " . That aside , when you talk about closing popup in " onload " event what would really happen is user would refresh the popup and it would close ( which would be REALLY weird from user's standpoint ) OR user would get a prompt from the browser ( close this window ? yes / no ) which is equally weird .	D A N V P R V , N P N , , O R , R O V P V N P , N , N O V R V V N V V D N & O V V , O V V R A P Z N , & N V V D N P D N , V D N , ! , ! , O V R A ,
@ChssPly76 - yes , from an user standpoint , it's probably weird . But , designing data-oriented applications without pop-ups is one heck of a challenge .	@ ~ ! , P D N N , L R A , & , V A N P N V $ N P D N ,
I'm ok with popups as long as I don't need any of the information behind it . If I do , I get pissed at them and curse the designers .	L A P N R A P O V V D P D N P O , P O V , O V V P O & V D N ,
The _only_ possible excuse for using popup windows is a requirement for application to function without javascript because then you can at least do some stuff via `	D R A N P V N N V D N P N P N P ^ P R O V P R V D N P ,
The best way would be an XMLHTTP request to check login and close them if required - do this periodically . Astute readers ( meaning everyone ) will notice that this is an AJAX request , but if you phrase it that way it might get accepted as whoever dictated that you ' aren't allowed to use AJAX ' is clearly an idiot .	D A N V V D ^ N P V V & V O P V , V D R , A N , N N , V V P D V D ^ N , & P O V O D N O V V V P O V P O , V V P V ^ , V R D N ,
@Luke the corporate IT teams of non-IT core companies are loaded with idiots who would tell you not to use AJAX :-) : And my boss is one of ' em !	@ D A O N P A A N V V P N O V V O R P V ^ E , & D N V $ P , G ,
Won't the periodic HTTP request keep the session alive ?	V D A N N V D N A ,
then they are screwed . and so are you if your boss reads that you just called him an idiot ...	R O V V , & R V O P D N V P O R V O D N ,
@matt b : not if you keep record of the last user activity .	@ G , R P O V N P D A N N ,
@matt b - George said what I was going to say :)	@ G , ^ V O O V V P V E
In a past life , I made a popup manager object that maintained what windows were open . You should probably make one of these if not already done . Then , you can use setTimeout to call a function after so many minutes ( or whatever time you want ) have gone by . This will check for recent activity ( probably via AJAX ) and close the popup if you determine that the session has expired . If not , call setTimeout again with your new time , properly adjusted for most recent activity . ^^before the AJAX edit . Well , since you can't use AJAX , can you put something in the url that will tell you it's a popup ? Then you'll know not to show the login screen when the user hits reload .	P D A N , O V D A N N O V D N V A , O V R V $ P O P R R A , R , O V V ^ P V D N P R A N , & D N O V , V V P , D V V P A N , R P ^ , & V D N P O V P D N V V , P R , V ^ R P D A N , R V P R A N , G D ^ V , ! , & O V V ^ , V O V N P D N O V V O L D N , R L V R P V D N N R D N V N ,
If your boss is asking you to achieve this , without using AJAX , then you're in trouble . He should understand that the only connection a browser has to the server ( without refreshing the page ) is javascript ( what he understands to be ajax ) . The best way to do this is to setup a script on the pages to ask the server if the user is still logged in every 30 seconds or so . This script assumes you're using the jQuery framework for rapid development of javascript solutions . This also uses JSON ( Javascript Object-notation ) to test a return-value from the loggedin.php file . Bottom line , you need to use AJAX . Tell your boss there is no other way . If he still doesn't get it , ask him to balance his checkbook without using math .	P D N V V O P V D , P V ^ , R L P N , O V V P D A N D N V P D N , P V D N , V ^ , O O V P V ^ , , D A N P V D V P V D N P D N P V D N P D N V R A P A $ N & R , D N V L V D ^ N P A N P ^ N , D R V ^ , ^ ^ , P N D N P D N N , A N , O V P V ^ , V D N R V D A N , P O R V V O , V O P V D N P V N ,
Or just tell your boss that you're brilliant and figured out a way to do it with Javascript instead of AJAX	& R V D N P L A & V T D N P V O P ^ R P ^
Well , the J in AJAX is javascript . If its not async ( A ) and not xml ( X ) based , then he can build a case saying that he's not using AJAX , unfortunately , the example uses JQuery and underneath the hood , it is using the A , J and X of AJAX .	! , D G P ^ V ^ , P L R A , G , & R ^ , G , V , R O V V D N V P L R V ^ , R , D N V ^ & P D N , O V V D G , G & G P ^ ,
An alternative way to implement modal dialogs in a web application is to : Model the dialog in a DIV , default styled to display : none ; On desired action , inject / append the Modal dialog DIV into the page source Reset the CSS display so the modal dialog DIV is visible , overlaid on top of the page by setting the CSS z-index property Make the modal dialog disappear upon either successful execution or the user cancelling out Because the modal dialog is part of the page source , the dialog will disappear when the session times out . This approach doesn't spawn supporting windows that can be orphaned as the poster is attempting to address . And it fits the requirement of not using AJAX . You can code these by hand , but I don't really recommend it because of having to support various browser . I suggest looking at the Yahoo User Interface . You can tailor it to suit your needs ( IE : only modal dialogs ) , and it would support AJAX if requirements change down the road . Beware of spawning modal dialogs from modal dialogs .	D A N P V A N P D N N V P , V D N P D ^ , A V P V , N , R A N , V , V D A N ^ P D N N V D ^ V P D A N ^ V A , V P N P D N P V D ^ ^ N V D A N V P D A N & D N V T P D A N V N P D N N , D N V V R D N V T , D N V V V N O V V V P D N V V P N , & O V D N P R V ^ , O V V O P N , & O V R V O P P V P V A N , O V V P D ^ N N , O V V O P V D V , ^ , R A N , , & O V V ^ P N V T D N , V P V A N P A N ,
In theory , you could avoid AJAX by using a hidden flash widget ... But more practically , AJAX is the ' right ' solution , and I think you will have to talk to your boss , determine where this ' no AJAX ' rule came from , and convince him that AJAX is the best way to solve this problem . Does he think AJAX would be take too much time to implement ? If so , you should prove him wrong . Does he think it will be hard to maintain ? If so , show how simple the code to do this will be , and how widely used the common AJAX libraries are . If your boss is reasonable , then his goal is to what is best for the product , and you should be able to reason with him .	P N , O V V ^ P V D A N N , & R R , ^ V D , A , N , & O V O V V P V P D N , V R D , D ^ , N V P , & V O D ^ V D A N P V D N , V O V ^ V V V R A N P V , P R , O V V O A , V O V O V V R P V , P R , N R A D N P V D V V , & R R A D N ^ N V , P D N V A , R D N V P O V A P D N , & O V V A P N P O ,
