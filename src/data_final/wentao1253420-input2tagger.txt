How	N
to	N
evalute	N
prototype	N
js	N
files	N
through	N
rhino	N
script	N
engine	N
in	N
Java	N

I	N
am	N
having	N
problems	N
evaluating	N
a	N
script.js	N
file	N
which	N
is	N
dependent	N
of	N
prototype.js	N
.	N
When	N
i	N
am	N
trying	N
to	N
evaluate	N
the	N
script.js	N
file	N
through	N
rhino	N
script	N
engine	N
in	N
java	N
i	N
got	N
Script	N
Exception	N
like	N
"	N
TypeError	N
:	N
$H	N
is	N
not	N
a	N
function	N
,	N
it	N
is	N
java.lang.String	N
.	N
"	N
.	N
How	N
do	N
I	N
evaluate	N
the	N
files	N
and	N
how	N
to	N
include	N
prototype.js	N
and	N
to	N
define	N
the	N
prototype	N
objects	N
?	N

have	N
you	N
evaluated	N
them	N
in	N
the	N
correct	N
order	N
?	N
They	N
need	N
to	N
be	N
evaluated	N
from	N
the	N
bottom	N
up	N

You	N
cannot	N
evaluate	N
prototype.js	N
using	N
Rhino	N
only	N
.	N
prototype.js	N
have	N
many	N
references	N
to	N
the	N
HTML	N
DOM	N
which	N
is	N
not	N
implemented	N
in	N
Rhino	N
/	N
Java	N
.	N
For	N
example	N
(	N
from	N
prototype.js	N
):	N
document.createTextNode	N
(	N
'')	N
The	N
document	N
global	N
object	N
is	N
not	N
defined	N
in	N
Rhino	N
context	N
and	N
createTextNode	N
is	N
not	N
defined	N
too	N
.	N
The	N
solution	N
is	N
to	N
remove	N
all	N
Objects	N
/	N
Functions	N
from	N
your	N
copy	N
of	N
prototype.js	N
that	N
references	N
the	N
document	N
,	N
window	N
or	N
navigator	N
objects	N
.	N
(	N
assuming	N
your	N
js	N
file	N
does	N
not	N
use	N
them	N
)	N

You	N
could	N
also	N
get	N
away	N
with	N
declaring	N
some	N
dummy	N
objects	N
for	N
document	N
,	N
window	N
,	N
navigator	N
and	N
so	N
on	N
.	N
This	N
way	N
you	N
do	N
not	N
have	N
to	N
change	N
prototype.js	N
.	N

Yes	N
,	N
that's	N
cool	N
:)	N

Take	N
a	N
look	N
at	N
env-js	N
,	N
which	N
is	N
a	N
mock	N
browser	N
environment	N
for	N
Rhino	N
.	N
It's	N
based	N
on	N
some	N
work	N
by	N
John	N
Resig	N
to	N
get	N
JQuery	N
working	N
in	N
Rhino	N
.	N
I	N
wouldn't	N
be	N
surprised	N
if	N
Prototype	N
worked	N
as	N
well	N
.	N

