Java frameworks vs . Javascript frameworks
I am a big fan of the Dojo Toolkit but I see here often that there are Java frameworks that do the same thing but they are not as extensive or as user friendly as Dojo in my opinion . What are the main differences ? Can I use Dojo for the GUI and Java as the back-end ? Is there a list of Java frameworks for web development ?
http://tinyurl.com/l2apzg see the list of some java web frameworks
This is a fairly big misconception . The first chapter of every pretty much any javascript book describes how it's almost entirely unrelated to java .
Then I guess you don't understand my question . I saw multiple java gui frameworks that actually do the same thing as dojo and I am wondering what is better . I didn't say java is related to javascript . I am just searching for the framework I like the most .
Maybe if you haven't titled your question as Java vs Javascript ...
it's java vs . javascript frameworks . pharhaps the title should be java framekworks vs . javascript frameworks if it wasn't clear enough .
isn't this equivalent to " Comparing Apples with Oranges "
I dont think unless using Applets , java can do the same as javascript because they have different purpose . Even applets dont exactly do the same thing . Read this
Well - there Google Web Toolkit . A lot of discussion about this here : http://code.google.com/intl/nb-NO/events/io/sessions.html
GWT takes the Java code and translates it -literally- to Javascript code
Agree to all the comments , all i wanted to say is Java ! = JavaScript
Javascript is a completely different thing from Java Javascript is intended for browser behaviour , Java is a complete different thing . Some Java Web frameworks use Dojo ( like MyFaces ) when rendering rich components and Java is in charge of the backend . You can find many useful alternatives for Java Web Frameworks in stackoverflow What Web Application Framework for Java is recommended ? I personally prefer Spring MVC but there are many options
Where do you see MyFaces uses dojo ?
When MyFaces renders the HTML it includes some dojo libraries , it is mentioned in its documentation and even some components explicitly are named
Is it really a " completely " different thing , or are we intended to overlook what they have in common ? However , I think that Java is rather a subset of Javascript than the other way round . ;)
I have found this library to fit my needs . I just need a server side back-end and it looks very lightweight .
I don't think this is an answer for you own question , hehe . I didn't down-voted you though
Why not ? Dojo handles REST channels . I can write my own framework around it .
You shouldn't compare Java and Dojo , they are quite different animals . Dojo is a Javascript toolkit / library so you should rather compare it to ExtJS for instance . And yes , you can use whatever js script you like in the HTML / jsp pages of your web application . Regarding Java frameworks , first and foremost look into Spring .
" Java is to Javascript what car is to carpet . "
Where did you hear this ? Greg Hewgill posted it here : http://stackoverflow.com/questions/245062/whats-the-difference-between-javascript-and-java/245068#245068 , but he didn't remember where he got it from .
I believe the credit goes to Chris Heilmann : http://www.wait-till-i.com/2005/11/08/do-hr-people-even-read-their-job-ads-when-they-get-published /
* " Java is to Javascript what subway is to car " *
It is quite possible to combine Dojo and a Java web framework . My company's application uses both Dojo and Spring MVC . The two technologies address different sets of problems . Dojo is a client-side framework for managing UI components ( widgets ) , AJAX requests , and providing a browser-independent abstraction on top of JavaScript and the DOM . Spring MVC is a server-side framework that receives requests from the browser , provides entry-points into server-side business logic , and directs page flow through the application . Having said that , there are other Java web frameworks that overlap some functionality that is also provided by JavaScript tools like Dojo . JSF with ICEfaces or RichFaces come to mind . In those models , the server ( Java ) has more direct control over how components are rendered and how their state is held . One explicit goal of RichFaces , for example , is to help developers who don't know JavaScript ( or don't want to write it ) develop AJAX applications . But I wouldn't say one approach is better than the other . They just focus on different developer audiences .
JavaScript Frameworks . Those listed here include : Prototype jQuery Ext Script.aculo.us MooTools Yahoo ! UI Library ( YUI ) Dojo Toolkit Backspace They are among the most popular ones . I use MooTools .
