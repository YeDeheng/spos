How	R
do	V
you	O
restrict	V
the	D
size	N
of	P
a	D
file	N
being	V
uploaded	V
with	P
JavaScript	^
(	,
or	&
Java	^
)	,
without	P
transferring	V
the	D
entire	A
file	N
?	,

Is	V
there	R
a	D
way	N
to	P
validate	V
on	P
the	D
client	N
side	N
browser	N
whether	P
the	D
size	N
of	P
a	D
file	N
being	V
uploaded	V
from	P
a	D
JSP	^
page	N
is	V
over	P
a	D
set	N
size	N
limit	N
without	P
forcing	V
the	D
user	N
to	P
upload	V
the	D
entire	A
file	N
only	R
to	P
find	V
out	T
it	O
was	V
too	R
large	A
?	,
I	O
would	V
like	V
to	P
stay	V
away	R
from	P
any	D
proprietary	A
controls	N
or	&
techniques	N
like	P
Flash	^
or	&
ActiveX	^
if	P
possible	A
.	,
Thanks	N
!	,

This	D
isn't	V
a	D
perfect	A
solution	N
,	,
but	&
if	P
you	O
check	V
the	D
Content-Length	^
HTTP	^
header	N
with	P
request.getHeader	^
(	,
"	,
Content-Length	^
")	^
then	R
you	O
can	V
choose	V
to	P
not	R
transfer	V
the	D
entire	A
file	N
.	,
By	P
way	N
of	P
explanation	N
,	,
an	D
extremely	R
large	A
file	N
will	V
not	R
be	V
transferred	V
all	R
at	P
once	R
.	,
You'd	L
have	V
to	P
actually	R
open	A
a	D
stream	N
representing	V
that	D
chunk	N
of	P
POST	^
data	^
and	&
read	V
from	P
it	O
for	P
the	D
entire	A
thing	N
to	P
be	V
transfered	V
.	,
On	P
the	D
other	A
hand	N
,	,
if	P
you're	L
worried	A
about	P
denial-of-service	^
attacks	N
,	,
then	R
you	O
can't	V
really	R
trust	V
the	D
Content-Length	^
header	N
,	,
because	P
it	O
can	V
easily	R
be	V
forged	V
.	,
In	P
this	D
case	N
,	,
you	O
should	V
set	V
a	D
limit	N
and	&
stream	V
a	D
transfer	N
of	P
this	D
file	N
,	,
stopping	V
as	R
soon	R
as	P
you've	L
exceeded	V
that	D
limit	N
.	,

Suggest	V
you	O
reconsider	V
the	D
Flash	^
decision	N
and	&
take	V
a	D
look	V
at	P
the	D
YUI	^
Uploader	^
,	,
here	R
:	,
http://developer.yahoo.com/yui/uploader	U
Among	P
other	A
things	N
,	,
the	D
fileSelect	N
event	N
will	V
tell	V
you	O
the	D
size	N
of	P
the	D
selected	V
file	V
in	P
bytes	V
immediately	R
after	P
it	O
is	V
selected	V
but	&
before	P
it's	L
uploaded	V
,	,
so	P
you'll	L
be	V
able	A
to	P
restrict	V
accordingly	R
.	,

With	P
JSP	^
or	&
PHP	V
you	O
won't	V
be	V
able	A
to	P
restrict	V
the	D
file	N
size	N
because	P
your	D
page	N
won't	V
get	V
the	D
request	N
until	P
the	D
upload	N
has	V
already	R
happened	V
.	,
At	P
that	D
point	N
you	O
can	V
decide	V
not	R
to	P
save	V
the	D
file	N
but	&
that	O
might	V
be	V
too	R
late	A
.	,
There	X
are	V
some	D
Java	^
solutions	N
out	P
there	R
,	,
e.g.	^
MyUploader	^
or	^
Hermes	^
.	,
Some	O
even	R
support	V
multiple	A
file	N
uploads	N
and	&
resuming	V
partial	A
uploads	N
,	,
and	&
some	D
also	R
give	V
you	O
the	D
source	N
code	N
.	,
You	O
can	V
also	R
write	V
your	D
own	N
,	,
but	&
it	O
will	V
need	V
to	P
be	V
a	D
signed	A
applet	N
in	P
order	N
to	P
function	N
because	P
it	O
needs	V
to	P
access	V
the	D
local	A
filesystem	^
.	,
If	P
you're	L
using	V
Apache	^
as	P
your	D
webserver	N
you'll	L
need	V
enough	A
RAM	N
in	P
your	D
machine	N
to	P
fit	V
the	D
whole	A
file	N
size	N
in	P
memory	N
of	P
all	D
files	N
being	V
uploaded	V
at	P
a	D
given	V
time	N
.	,

