See Java : Scripting language ( macro ) to embed into a Java desktop application 
You have quite a few options : Groovy - http://groovy.codehaus.org Jython - http://www.jython.org/Project JRuby - http://jruby.codehaus.org Possibly even BeanShell ( http://www.beanshell.org ) I'm a fan of Python myself so I'd recommend Jython , but they're probably all reasonable options . 
what about creating your own specialized scripting language ? If your app is written with java , you can use ANTLR ( http://www.antlr.org ) to create your language parsing code . The reason I say this is because a general purpose scripting language may provide too much power ( because the script it to be used for quests only i assume ) . But if making your own language is too hard then any of the above suggestions works - you just have to figure out how to bind the game's runtime into the script . I also suggest Lua ( http://www.lua.org ) as another choice that lots of games use . 
I am a big fan of Python / Jython due to the clean syntax - which may suit you if you have some python experience . Otherwise Groovy which is based on Java syntax and may be an easier learning curve if most of your developers are Java guys . It also has the advantage of closer ties with the Java language and libraries . Beanshell is good if you have simple scripting in mind - it doesn't support classes . However I don't think it has had any support over the last few years ( the JSR seemed to kill it off ... ) so is perhaps a bad choice if support is important to you . 
I would have to recommend Javascript for this purpose . Mozilla Rhino http://www.mozilla.org/rhino is an excellent implementation that would fit your needs perfectly . I recommend Javascript over Jython or JRuby because of familiarity . Trivial Javascript follows a very familiar syntax that anybody can use . However if someone wants to do something more intense , Javascript is a very powerful functional programming language . I regularly use Groovy and Ruby professionally and believe that their purpose is best for writing parts of applications with particularly complex logic where Java is cumbersome to write . Javascript is a much better choice as an embedded , general scripting language to use in a game . I haven't used Python , but it's syntactically similar to Ruby and I would believe it's purpose would also be similar . 
If you were to start from scratch in 2012 would you approach the " glue components together " differently ? 
There is one good reason for including a scripting language , namely where you need to be able to add new functionality ( which hence cannot be configured ) without redeployment . 
But Java has support for ( re- ) loading classes , and using some thought and reflection will take you a long way . If necessary . 
You still need to compile the revised Java classes . 
Compiling should an be infinitesimal issue compared to incorporating a scripting language , in all the ways I can think of . 
LuaJ seems to be a nice way to embed Lua into Java : http://sourceforge.net/projects/luaj / 
Wicket + Javascript 
I'm wrapping up a Javascript widget in a Wicket component . I want to let the JS side talk to the component . What I've got so far : Component in question goes like in constructor and then , later on , puts something like into the JS . where GridAjaxBehavior extends AbstractDefaultAjaxBehavior . I want GridAjaxBehavior to spit back some XML when the JS calls it . Am I doing this the right way ? What should GridAjaxBehaviour do to spit back the XML ? Thanks 
FYI , there's an error in your javascript emit . You're missing the right hand paren and semicolon , but you're also missing quotes around the supplied string . ... new talker ( "" + this.talker.getCallbackURL() + " ") ; " ; or something like that . 
PSA : Wicket ~= a Java Framework . http://wicket.apache.org/introduction.html 
please show a link to GridAjaxBehavior - i know wicket a bit , but GridAjaxBehavior is new to me . is this a custom developed behavior 
I don't really know what Wicket is or what it does , but there is a minor bug in your code ( as it appears ) . This : " var MyGridTalker = new talker ( " + this.talker.getCallbackUrl() ; You seem to be missing your end parens : " var MyGridTalker = new talker ( " + this.talker.getCallbackUrl() + ")" ; Anyway , not a big deal , but didn't know if it was intentional . 
Write a Servlet that Talks to JMS ( ActiveMQ ) and OnMessage Update the Site 
I am building a site that uses a simple AJAX Servlet to talk JMS ( ActiveMQ ) and when a message arrives from the topic to update the site . I have Javascript that creates an XMLHttpRequest for data . The Servlet processes the Get Request and sends back JSON . However I have no idea how to connect my Servlet into my ActiveMQ Message Broker . It just sends back dummy data right now . I am thinking the Servelt should implement the messagelistener . Then onMessage send data to the JavaScript page . But I'm not sure how to do this . 
You probably need to get a JMS connection from JNDI , like this : 
Okay ... this is a good way to connect to my Topic , thanks . I already have code like this is another Java Client . But I want the Servelt to implement the messagelistener . Then onMessage send data to the Javascript page . 
The problem with having a servlet implement MessageListener is that servlets are synchronous and MessageListeners are asynchronous . Instead you should create some other object to act as the MessageListener and update some state somewhere ( possibly a database or a JMX MBean or a Stateful Session EJB ) when messages come in . Then the servlet can query that state to see if there's data to report back to the client , and your web page can periodically ping the servlet to ask for fresh data . 
Thanks jodonnell .. I have never wrote a JMX MBean or Stateful Session EJB but after a quick google search I think this is the right path to look down . Thanks for the help . 
Have you tried reading the answers for this question which links to the ActiveMQ Ajax support . Basically ActiveMQ has native support for Ajax so you can use its JavaScript library to directly subscribe from an ActiveMQ topic . Also see the ActiveMQ web samples which show how to do things like real time chat or real time stock portfolio screens using Ajax with ActiveMQ 
As James Strachan says - http://activemq.apache.org/ajax.html is an ideal out-of-the-box solution for your problem . If you still want to create such solution manually you can just create JMS connection in your Ajax servlet ( connection per request ) . Consider using Spring JMS template for that reason ( http://static.springsource.org/spring/docs/2.5.x/reference/jms.html ) . Then just receive the message in the Servlet doGet / doPost method . Consider low timeout value for receiving in that case . Such solution will work for the Queues and durable Topics . For non-durable Topics consider external message listener . Spring MessageListenerContainer is an excellent tool for that purpose : Bean lastTenUpdatesCache will be a singleton bean implementing MesssageListener . This bean would be responsible for caching last ten messages ( just putting it into a java.util list ) . It will be injected into your Ajax servlet so in your doGet / doPost method you can ask it about last 10 messages sent to the topic . 
Integration of JavaScript and JMS 
Where can I find a guide for integrating JavaScript and JMS ( Java Messaging Service ) ? I would like a best practice or established technology that allows me to directly or indirectly receive messages from a topic and update a site based on the message . I was thinking of creating two components , a servlet for the Web module , and an MDB ( Message-Driven Bean ) for the EJB module . The web client will comsume messages from the JMS topic , and the MDB will handle the onMessage . Does this sound correct ? Have you seen any examples ? Edit : I am using ActiveMQ for the JMS . 
I would try using DWR to integrate JavaScript with your Java app . It makes Java to JavaScript communication transparent and only requires one servlet + configuration of what to expose . I haven t done this with JMS , but it should work the same . There are three technologies that together solve all my integration problems , Spring , Mule , and DWR . 
I'll second DWR - excellent ( and painless ! ) to integrate any server-side based Java and JavaScript on the client front-end 
You'll find some references to the Dojo / Bayeux approach here http://www.pathf.com/blogs/2006/08/bayeux_a_json_p If you're using WebSphere 6.0 or higher then the Web 2.0 Feature Pack includes an implementation . 
I think this is your answer . Looks like it is baked in to ActieMQ . I tried the examples and they seem to work . http://activemq.apache.org/ajax.html 
I was able to get the examples to work on Version 5.0 of ActiveMQ . However they have trouble running in 5.1 . Which version of ActiveMQ are you running ? 
We did have a lot of problems with this servlet , and we did abandon it completely ... 
The Seam framework supports subscription to JMS topics from a JavaScript based client : http://docs.jboss.com/seam/2.0.2.GA/reference/en-US/html/remoting.html#d0e14169 
How to conduct blackbox testing on an AJAX application ? 
What's the best , crossplatform way to perform blackbox tests on AJAX web applications ? Ideally , the solution should have the following attributes : Able to integrate into a continuous integration build loop Cross platform so I you can run it on Windows laptops and Linux continuous integration servers Easy way to script the interactions Free-as-in-freedom so you can adapt it into your tool chain if necessary I've looked into HttpUnit but I'm not conviced it can handle AJAX-heavy websites . 
Selenium might be what you're looking for : http://selenium.openqa.org It allows you to script actions and evaluate the results . It's open-source ( Apache 2.0 ) , cross platform , and has nice tools . 
I have used Selenium for exactly this task , but found it to be brittle . Check out this talk by two Googlers : Does my button look big in this ? Building testable AJAX applications They isolate the testable javascript ( non DOM-interaction ) and test that using the Rhino javascript engine . 
What is the best way to use Ext JS as part of Java / Spring / Hibernate based web application ? 
We want to try Ext JS on new project . Is there any well-known best practice for integrating Ext JS with server side Java ( Spring / Hibernate / JS ) application ? Is DWR a good choice for that ? 
It's perfectly fine to build your application using Ext JS / DWR / Spring / Hibernate . 
Yes it's possible . I've done the same thing with . NET : UI in ext-JS which communicates with the server trough JSON . In . NET world you can use DataContractSerializer ( class from WCF ) or JavascriptSerializer ( ASP.NET ) I'm sure that there's several good JSON Serializer in the Java world too . I used Jabsorb ( but not enough to give you a solid feedback ) . It appears that other people have tried : [ link text][2 ] [ 2 ]: http://extjs.com/forum/showthread.php?t=30759 forum ext-js 
In our application we subclass Ext.data.DataProxy like this : You use it with a store like so : Our actual proxy class has some additional debug and error handling code that I left out for simplicity . You may also need to manipulate your data slightly so that the Ext.data.JsonReader can handle it , but that's the basic idea . SomeService is the JavaScript name you specified for whatever bean you exposed in dwr.xml ( or your Spring config ) . 
My team has been using Ext with DWR for almost year a year , and have had nothing but good things to say . If you take this approach , you will end up using DWR's generated JavaScript classes for making your requests to the server . This will often be done in place of using the Ext.Ajax and Ext.data.Connection classes . When you use a class that require an Ext.data.Store ( e.g. grip , combo box , etc . ) and you want to fetch data from the server , you will need to use a proxy that can link in with DWR . The user-community provided Ext.ux.data.DWRProxy has worked flawlessly for us : http://extjs.com/forum/showthread.php?t=23884 . 
Just wanted to report that we are doing this now and it works quite good . We also are using DWRProxy just like suggested . 
Take a look at Grails , it plays well together with ExtJS . 
How can you run Javascript using Rhino for Java in a sandbox ? 
Part of our java application needs to run javascript that is written by non-developers . These non-developers are using javascript for data formatting . ( Simple logic and string concatenation mostly ) . My question is how can I setup the execution of these scripts to make sure scripting errors don't have a major negative impact on the rest of the application . Need to guard against infinite loops Guard against spawning new threads . Limit access to services and environment File system ( Example : If a disgruntled script writer decided to delete files ) Database ( Same thing delete database records ) Basically I need to setup the javascript scope to only include exactly what they need and no more . 
Do you mean to say ( Javascript using Rhino ) for ( Java in a sandbox ) , or ( Javascript using ( Rhino for Java )) ( in a sandbox ) ? 
Javascript is single-threaded and can't access the filesystem , so I don't think you have to worry about those . I'm not sure if there's a way to set a timeout to guard against infinite loops , but you could always spawn a ( Java ) thread that executes the script , and then kill the thread after so much time . 
Rhino has a threading library available to it ( java.lang.Thread ! ) , and can access the file system . 
To guard against infinite loops , you'd need to put it in a separate process so that it could be killed . To guard against creating threads , you'd need to extend SecurityManager ( the default implementation allows untrusted code to access non-root thread groups ) . Java security does allow you to prevent access to the file system . For database restrictions , you might be able to use the standard SQL user security , but that is quite weak . Otherwise , you need to provide an API that enforces your restrictions . Edit : I should point out that the version of Rhino provided with JDK6 has had security work done on it , but doesn't include the compiler . 
To guard against infinite loops , you can observe the instruction count as the script runs ( this works only with interpreted scripts , not with compiled ones ) . There is this example in the Rhino JavaDocs to prevent a script from running for more than ten seconds : 
To block Java class and method access have a look at ... http://codeutopia.net/blog/2009/01/02/sandboxing-rhino-in-java / 
I just ran across this blog post that seems to be useful for sandboxing more or less anything ( not just Rhino ): http://calumleslie.blogspot.com/2008/06/simple-jvm-sandboxing.html 
setting classpath for java classes ( jar file ) in XUL , to access via javascript 
I am implementing firefox extension using XUL . I have set of java classes that is zipped as jar which needs to be accessed through javascript . If I copy my jar into jre's lib / ext then javascript will be able to invoke my java classes . If I remove from ext and package this jar in xpi , Javascript is unable to find the classpath for my jar file . Please let me know how to set the classpath for my java classes ( jar file ) in XUL environment at the earliest . 
javascript / XUL invoking java ? interesting ... any ref ? 
I suggest taking a look at this extension XQuery USE ME 1.4 . 7 and the following articles Calling java from XUL applications Java in Firefox Extensions 
Thanks , Is there any easy way to set the classpath such that javascript can find it . - Anand . 
What is the disadvantage of DWR ? 
While using DWR in a intranet , will disadvantages like perfomance or security issues occur ? Direct web remoting is a tool which uses Ajax request to contact a server from a js file . 
One thing I would watch out for is that your server will most likely get hit by more HTTP requests than if you have the ( normal ) full page HTTP delivery . Let me explain . When your web page is AJAX-enabled , your clients will end up creating more HTTP requests for ( say ) form filling , page-fragment regeneration etc . I've seen scenarios where developers have gone AJAX-crazy , and made the web page a largely dynamic document . This results in a great user experience ( if done well ) , but every request results in a server hit , leading to scalability and latency issues . Note - this isn't particular to DWR , but is an AJAX issue . I've used DWR , and it works nicely . Unfortunately , I found that it worked so well , and so easily , that everything becomes a candidate for remoting , and you can end up with huge numbers of small requests . 
I agree with this answer . I used DWR in an web-based application . The application gives a great user experience , but I think the application doesn't work fast , because of all the JavaScript and httprequest . 
I worked on a project with DWR - a really nice tool . I'm not convinced about the pace of development though . They did post on the development log that they're working on getting 3.0 out the door , but the last stable release - 2.0 - was out in summer 2006 . It's a bit worrying taken from a support perspective - bug fixes especially . 
Main problem I've experienced is trying to script a load test on a system where the main bulk of the work is done via DWR calls . The format of the calls is difficult to replicate when compared with just replying a bunch of urls with changing parameters . Still DWR is an excellent framework and makes implementing Javascript -> Java RPC pretty damn easy . 
DWR is a great tool when your site has a lot of ajax calls . Each page that makes dwr rpc calls needs to include : a ) an interface file corresponding to the calls being made . and b ) a js file bundled with dwr that contains the dwr engine code that makes these calls possible . for e.g. script src= " / dwr / engine.js " / script one technique that is frequently used while optimizing web applications is to use the browser cache as much as possible when a resource ( like a js file ) has not changed on a server . engine.js is something that will never change unless you upgrade your dwr to a newer version . But , by default , engine.js is not a static file served by your webserver . its bundled as part of the dwr tool itsef and is served by the dwr controller / servlet.this doesnt aid client side caching . So , it is beneficial to save engine.js under the document root of your webserver and let the webserver serve it as a static file . 
More about caching engine.js on DWR's site : http://directwebremoting.org/dwr/browser/engine/static.html 
One feature missing of current DWR 3.x that any user should take good care is that when an instance of a bean has properties of NULL value , those properties will be still injected to the JSON and these redundant data DO affect the performance . When a property has the value of NULL , usually it should not be sent to frontend . Details of problem : http://dwr.2114559.n2.nabble.com/Creating-Custom-bean-converter-td6178318.html 
The biggest difference among other solutions to transfer objects ( marshaling ) is object references . For instance , if you use it to transfer a tree : A |-B |-C in a list { A , B , C} : B.parent = A C.parent = A then A is the same object in Javascrit ! On the bad side , if you have complex structures with circular dependencies and lot of objects : A -B , B -C , C -B , C . A ,... it could crash . Anyway , I use it in a real project used by many hundreds of companies in production to transfer thousands of objects to a single html page in order to draw a complex graph and it works nicely with a good performance . 
Clientside Javascript --> Serverside Java --> user is served a . doc 
I am helping someone out with a javascript-based web app ( even though I know next to nothing about web development ) and we are unsure about the best way to implement a feature we'd like to have . Basically , the user will be using our tool to view all kinds of boring data in tables , columns , etc . via javascript . We want to implement a feature where the user can click a button or link that then allows the user to download the displayed data in a . doc file . Our basic idea so far is something like : call a Java function on the server with the desired data passed in as a String when the link is clicked generate the . doc file on the server automatically " open " a link to the file in the client's browser to initiate the download Is this possible ? If so , is it feasible ? Or , can you recommend a better solution ? edit : the data does not reside on the server ; rather , it is queried from a SQL database 
What type of web server are you using ? 
a java enabled one , i presume 
Yep , its possible . Your saviour is the Apache POI library . Its HWPF library will help you generate Microsoft word files using java . The rest is just clever use of HTTP . 
Your basic idea sounds a bit Rube-Goldbergesque . Is the data you want in the document present on the server ? If so , then all you need to do is display a plain HTML link with GET parameters that describes the data ( i.e. data for customer X from date A to date B ) . The link will be handled on the server by a Servlet that gets the data and produces the . DOC file as its output to be downloaded by the browser - a very simple one-step process that doesn't even involve any JavaScript . 
no , the data is being queried from a SQL database 
Which means the server can simply run the same query again - it has done it before , it's not the javaScript that directly accesses the DB , is it ? 
Passing large amount data as GET / POST around might not be the best idea . You could just pass in the same parameters you used to generate the HTML page earlier . You don't even need to use 3rd party library to generate DOC . You could just generate a plain old HTML file with DOC extension and Word will be happy to open it . 
thats a nice trick :) but the file format won't really be DOC now , will it :) 
that's a good idea , but it would be nice to keep the table formatting 
True , but if the user sees the results opening in Word , nobody cares ( from experience ) . We did the same trick for export only excel spreadsheets - no problem with comma-semicolon separator unlike in csv . 
Sounds like Docmosis Java library could help - check out theonline demo since shows it something similar to what you're asking - generating a real doc file from a web site based on selections in the web page . Docmosis can query from databases and run pretty much anywhere . 
How can I get a signed Java Applet to perform privileged operations when called from unsigned Javascript ? 
Use the java.security.AccessController class . There is a doPrivilegedAction and doPrivilegedExceptionAction that do exactly what you need . For example : AccessController.doPrivileged ( new PrivilegedAction() { public Object run() { .. do something that only works with signed applets .. } } ); 
It's worth adding : make your privaction'd run() method as small and self-contained as possible . Obviously you could just have your signed applet's init() method call a privileged run() which in turn does the actual applet , but that's just begging to be abused , misused accidentally , or outright exploited . Also , the fact that signed applets lose their special permissions when called by JavaScript is not specific to a particular browser or platform . That's just how it is , everywhere , all the time . 
Java date format to JavaScript date format 
" dd / mm / yy ( 07 / 06 / 2009 )" does not compute , but I won't edit it because I'm not sure on exactly what you intend . 
Could you give some information on how you are passing the Java date to the Javascript code ? e.g. are you writing it out using a JSP ? That will help a lot in answering your question . 
Did you mean " dd / mm / yy ( 07 / 06 / 09 )" ? Otherwise I don't understand the difference between the two sample dates you gave . 
After reading this question about twenty times , I think Ed means How do I convert a string used to format dates in Java ( using SimpleDateFormat ) to an equivalent string used to format dates in JavaScript ( using Date.format ) ? 
( However I am still down-voting this question because if you need to do this , you re doing it wrong ) . 
If you are using java , take a look at the Simple Date Format class . 
The javascript code in this page implements some date functions and they " use the same format strings as the java.text.SimpleDateFormat class , with a few minor exceptions " . It is not the very same as you want but it can be a good start point . 
A similar topic has been answered here : Converting dates in JavaScript I personally have found this to be a rather large pain and took the author's suggestion and used a library . As noted , jQuery datepicker has one that is a viable solution if you can afford the overhead of download for your application or already using it . 
I really think a libary is the way to go on this one as well . FWIW , dojo has a good one as well . http://docs.dojocampus.org/dojo/date/locale 
If you just need to pass a date from Java to JavaScript , the best way to do it , I think , would be to convert the Java date to milliseconds using date.getTime() , create a JavaScript date initialized with this milliseconds value with new Date ( milliseconds ) and then format the date with the means of the JavaScript Date object , like : date.toLocaleString() . 
I have a similar problem with Java Date -> Javascript Date -> DatePicker . This helped get me a lot closer . Thanks ! 
Best solution . Solved the fact that SimpleDateFormat doesn't provide a zero based month . 
See this : http://www.javascripttoolbox.com/lib/date/examples.php 
If you just want to format dates my date extensions will do that well - it also parses data formats and does a lot of date math / compares as well : DP_DateExtensions Library Not sure if it'll help , but I've found it invaluable in several projects . 
You could use my plugin jquery-dateFormat . 
This JavaScript library should be able to help you . http://plugins.jquery.com/project/fIsForFormat ( I don't know why they have it as a jQuery Plugin , because it works standalone . ) You'd simply split the original formatted date into its individual elements and then create a new Date Object with those elements . Then , use this library's " Date.f() " method to output it into any format you could want . For example : 
This works fine for me : 
Check out moment.js ! It's " A lightweight javascript date library for parsing , manipulating , and formatting dates " . It is a really powerful little library . Here's an example ... Here's another example ... Also , its worth mentioning to checkout date.js . I think the two libraries complement each other . 
Communication between Java and Javascript without Netscape or IE ? 
In the lab I work in , we use Mozilla 1.7 for Sun Java Desktop System and Firefox 2.0 . 0.4 . My goal is to modify an existing Java application ( run via executable jar ) to communicate with our web-based login system . I am open to the idea of using both Java Applets and JavaScript to accomplish this task , but I have not found a way to integrate these two technologies in any browser but Netscape Navigator and Internet explorer . Is there a way to do this using either of the two aforementioned browsers ? A more concrete example : 1 . Launch application 2 . Click a " login " button 3 . Be prompted for a password 4 . In the background , have the application connect to the web-based login server , enter the username ( known by the app ) and the password , navigate to the time clock section and " click " the Punch In button 5 . Pull the timestamp of the login ( typically displayed on the browser ) and display it in the app 
From your question it is not clear why you need a browser to begin with . It is nearly trivial to perform a GET or POST from java with the login credentials and retrieve this time stamp . With out modification to the web service you can parse the out of the text returned from the GET or POST and then present the time stamp . 
Look at HTTPURLConnection and perform POST of the same values login form contains to the same URL . 
It looks like the GET and POST is the solution I've been looking for . I am able to find the credential fields and enter text , but how does one simulate a button click ? The line in the source code is : It seems I would either invoke the onclick property of the button or make a direct call to doLogin() , but I am unsure how to do either . Thanks for the help so far . 
You need to look at what the JavaScript function doLogin is doing . It is most likely submitting the form . 
Open new browser window on click of a form button 
I want to open a new browser and load a page from the file system ( which will be created on clicking that button ) . My app is a java servlet . Basically I am allowing users to change some HTML on their website . On clicking the button the user get's to see a preview page , that shows what the page looks like with the changes made . What would be the easiest way to do this and what issues can you see , and possibly how we would we get around them . I see an issue , for example , if the browser window tries to open the file immediately , it won't even exist . So there needs to perhaps be some delay before trying to read the file . 
This can be done using java script window.open('url','name ' ,.... ) you can pass parameters in this function . google for " javascript window.open function " Cheers 
Maybe you can use jQuery / AJAX or a similar technique to post the data to the server first and then open it in a new window . see the jQuery documentation for an example : jQuery Post Example 
if there is not much data to pass for preview page , you may pass it as url params instead of using jQuery . If data is large it is better to use jQuery . :) as http://www.xyz.com?name= " name " ..... 
I'm not familliar with java servlets , but can't you keep the uploaded html in a server-side session variable , display the contents in your preview page , then save the contents of the variable out to the file system once the user accepts the changes ? 
You could use JavaScript . On the button you add : and within the script part of the page you write a function like and in your Servlet you just wait for the file to appear before delivering it . 
How to stop reloading Java applet when changing " overflow " style 
When I change the " overflow " style on document.body from " hidden " to " auto " , it forces a reload of a Java applet that is on the page . I have set overflow to hidden because most of the time I don't want scrollbars to be visible on the page , but I'd like to enable them without losing state in my applet . Is this possible , or is there another way I should be going about this problem ? 
It's not possible . Different browsers behave in different ways ; some reload the applet with the slightest DOM change while others keep it running even if you set display : none . In my experience the Java Plugin has very little control over this . You have to save the state of your applet either by : Reading the state into a JavaScript variable via LiveConnect and then writing it back to the applet afterwards Storing the state in static variables and checking their value when the Applet starts up 
Split java strings in Rhino 
I'm trying to split a java string in a Rhino javascript program which give me the error js : Can't find method java.lang.String.split() . The Rhino docs mentioned that all the javascript String.prototype methods ( like match , split , etc . ) are available on java string if they're not already provided by java.lang.String . Any ideas on what's going on here ? 
It may be that you're using it incorrectly . Doesn't split require a string parameter ? 
Take a look at the Java docs : http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html Doesn't seem to be a 0 parameter constructor for the split method . You gotta pass it a regular expression . Also , for further clarification , the split method returns a string array , it's not a void method like the way you've used it in your sample code . 
split takes an argument , which is the regular expression you want to use to split your tokens . http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html 
Rhino provides only the methods that java.lang.String is missing and split obviously isn't one of them . In order to use JavaScript's implementation of split , you'll have to convert Java string to JavaScript one : var s = String ( new java.lang.String ( " 1 2 3 ")) ; // Also valid : var s = "" + new java.lang.String ( " 1 2 3 ") ; print ( s.split() ); // 1 2 3 
Not exactly the same context , but may help someone . I use the JavaScript function split() in Rhino . To get things working , I follow the pattern : I suppose that "" + forces Rhino to use a JavaScript type of String . When I forget to add "" + then I got the message 
How to drag from browser area and deposit to the explorer area ? 
Sometime ago I was facing the problem the other way around : how to drag an item ( folder / file ) from an explorer window ( be it windows explorer , linux nautilus etc . ) to the browser window - that is , the drag starts in one application and ends in the browser . Since I had control over the browser , I was able to intercept the dragend event : the one which interested me . Now , I want to do this from the browser to the file explorer application : much like when you drag an image from firefox and drop it in a folder . My main problem is that while I can check when the drag event exited the browser window , I have no ideea how to get the location where the drag event finished . My ideea is to create a signed java applet and somehow track the mouse movement on the desktop - but this seems a little more than overkill . Any pointers on this ? 
You won't be able to do this with JavaScript . JS is sandboxed in the browser and can't interact with anything outside . 
That I know . I am going to use JS only to detect the dragexit event from the html document , and pass control to the java signed applet . At least , that's the idea at this time . 
According to your justification is is not simple , but it can be managed . There is class called DataFlavor . You had to use D D mechanism introduce in java using Transferable objects and provide correct mime-types and corresponding conversion . The problem is which mime-type will be accepted by explorer . I hope this help . 
I guess it will accept most of the main mime-types . I believe now that when the dragexit happens , I need to pass control over to the java applet and from there construct the Transferable objects . 
Need a Java and Javascript diff tool written in Java 
We need an accurate diff utility for Java and Javascript files , written in Java . It should be invokable from within an Eclipse ( version 3.2 or 3.3 ) application . Preferably we need the Java source code for this utility also . The utility should be able to compare two files ( old and new , say ) and determine the following accurately : Number of LOC added to the new file Number of LOC deleted from the old file Number of LOC changed in the old file Number of change deltas , i.e. , contiguous blocks of code added / changed / deleted . 
You might want to rephrase that to something like " does anyone know of a free Java diff tool that can do the following ... " . As it stands , it looks like a request for us to make one for you in which case you should probably head on over to RentACoder :-) 
Isn't there one already built in or use one of the many plug-ins that do it ? Google Search ? 
See Diffj . 
Eclipse has a very good diff / compare plugin installed by default . Have you looked into using and / or extending that ( it's opensource ) ? I would not think that adding some statistics reporting to the existing plug-in would be all that difficult , though sometimes plug-in development ( even just simple extension ) can be deceiving . Good luck . 
I needed a Java diff implementation and found this : http://javacook.darwinsys.com/javasrc/textproc/Diff.java which I adapted . 
What are FTL files 
I am new to a project and have to learn it inside out . I see a lot of files with the extension . ftl in them . I'n not sure what they are . I know they can be modified and the user sees changes in the front end 
Freemarker template files I believe . http://freemarker.org / 
http://filext.com/file-extension/FTL points to http://freemarker.sourceforge.net , does that help ? 
Have a look here . Following files have FTL extension : Family Tree Legends Family File FreeMarker Template Future Tense Texture 
freemarker combines java objects and view side ( HTML / JQuery ) contents in a single viewable template on a browser . 
FTL stands for FreeMarker Template . It is very useful when you want to follow the MVC ( Model View Controller ) pattern . The idea behind using the MVC pattern for dynamic Web pages is that you separate the designers ( HTML authors ) from the programmers . 
An ftl file could just have a series of html tags just as a JSP page or it can have freemarker template coding for representing the objects passed on from a controller java file file . But , its actual ability is to combine the contents of a java class and view / client side stuff ( html JQuery javascript etc ) . It is quite similar to velocity . You could map a method or object of a class to a freemarker ( . ftl ) page and use it as if it is a variable or a functionality created in the very page . ping me for more details ..! cheers ..! :) 
. FLT is a file extension which is a mod for Faster than light , installed by Slipstream Mod Manager , which requires Java . 
Java frameworks vs. Javascript frameworks 
I am a big fan of the Dojo Toolkit but I see here often that there are Java frameworks that do the same thing but they are not as extensive or as user friendly as Dojo in my opinion . What are the main differences ? Can I use Dojo for the GUI and Java as the back-end ? Is there a list of Java frameworks for web development ? 
http://tinyurl.com/l2apzg see the list of some java web frameworks 
This is a fairly big misconception . The first chapter of every pretty much any javascript book describes how it's almost entirely unrelated to java . 
Then I guess you don't understand my question . I saw multiple java gui frameworks that actually do the same thing as dojo and I am wondering what is better . I didn't say java is related to javascript . I am just searching for the framework I like the most . 
Maybe if you haven't titled your question as Java vs Javascript ... 
it's java vs. javascript frameworks . pharhaps the title should be java framekworks vs . javascript frameworks if it wasn't clear enough . 
isn't this equivalent to " Comparing Apples with Oranges " 
I dont think unless using Applets , java can do the same as javascript because they have different purpose . Even applets dont exactly do the same thing . Read this 
Well - there Google Web Toolkit . A lot of discussion about this here : http://code.google.com/intl/nb-NO/events/io/sessions.html 
