Upload	N
image	N
thumbnail	N
to	N
server	N
,	N
without	N
uploading	N
whole	N
image	N

As	N
far	N
as	N
I	N
know	N
,	N
what	N
I	N
ask	N
here	N
isn't	N
possible	N
,	N
but	N
I	N
thought	N
I'd	N
ask	N
anyway	N
in	N
case	N
I'm	N
missing	N
something	N
.	N
Suppose	N
you	N
want	N
to	N
let	N
users	N
upload	N
JPG	N
images	N
,	N
and	N
these	N
images	N
are	N
scaled	N
into	N
smaller	N
icons	N
and	N
the	N
original	N
images	N
are	N
always	N
discarded	N
and	N
never	N
required	N
again	N
.	N
Is	N
there	N
any	N
way	N
that	N
would	N
commonly	N
work	N
in	N
most	N
modern	N
browsers	N
that	N
would	N
let	N
the	N
user	N
select	N
a	N
single	N
image	N
on	N
their	N
hard	N
drive	N
,	N
have	N
that	N
LOCALLY	N
turned	N
into	N
a	N
thumbnail	N
and	N
upload	N
the	N
created	N
thumbnail	N
to	N
a	N
server	N
?	N
In	N
a	N
case	N
where	N
the	N
server	N
just	N
needs	N
a	N
small	N
image	N
,	N
it	N
would	N
be	N
wasteful	N
both	N
in	N
user	N
time	N
and	N
server	N
resources	N
to	N
proceed	N
uploading	N
the	N
whole	N
image	N
,	N
only	N
to	N
immediately	N
discard	N
it	N
.	N
It	N
would	N
be	N
much	N
better	N
to	N
just	N
scale	N
it	N
on	N
the	N
client	N
.	N
I	N
can	N
imagine	N
three	N
options	N
.	N
Just	N
plain	N
HTML	N
/	N
Javascript	N
,	N
using	N
Flash	N
or	N
using	N
Java	N
.	N
If	N
this	N
were	N
possible	N
with	N
Flash	N
,	N
that	N
would	N
seem	N
like	N
the	N
best	N
option	N
.	N
But	N
reading	N
flash.net.FileReference	N
documentation	N
,	N
it	N
seems	N
that	N
you	N
can	N
upload	N
a	N
file	N
from	N
the	N
HD	N
yes	N
,	N
but	N
you	N
cannot	N
look	N
inside	N
the	N
file	N
you	N
are	N
uploading	N
.	N
On	N
the	N
other	N
hand	N
,	N
if	N
you	N
enable	N
"	N
can	N
access	N
local	N
files	N
"	N
in	N
Flash	N
publishing	N
options	N
,	N
it	N
seems	N
that	N
you	N
can	N
then	N
no	N
longer	N
access	N
the	N
net	N
,	N
so	N
that	N
doesn't	N
work	N
.	N
With	N
HTML	N
/	N
Javascript	N
,	N
it	N
is	N
possible	N
to	N
load	N
images	N
and	N
display	N
them	N
on	N
a	N
canvas	N
,	N
but	N
if	N
you	N
try	N
to	N
access	N
the	N
pixels	N
of	N
these	N
images	N
,	N
you	N
get	N
security	N
violations	N
,	N
so	N
that	N
doesn't	N
seem	N
to	N
work	N
.	N
Java	N
I	N
hesitate	N
to	N
use	N
,	N
because	N
only	N
96.52	N
%	N
of	N
my	N
users	N
have	N
it	N
installed	N
,	N
and	N
the	N
file	N
upload	N
dialogs	N
I	N
have	N
seen	N
implemented	N
in	N
Java	N
(	N
at	N
Facebook	N
for	N
example	N
)	N
have	N
not	N
worked	N
well	N
(	N
unresponsive	N
interface	N
)	N
.	N
I	N
wonder	N
though	N
if	N
Java	N
is	N
the	N
only	N
thing	N
allowing	N
resizing	N
images	N
from	N
local	N
HD	N
?	N

I	N
think	N
if	N
there	N
was	N
a	N
reasonably	N
reliable	N
and	N
user-friendly	N
way	N
to	N
accomplish	N
this	N
,	N
it'd	N
be	N
done	N
on	N
sites	N
like	N
Facebook	N
already	N
.	N
People	N
are	N
used	N
to	N
having	N
to	N
upload	N
the	N
original	N
image	N
...	N
it's	N
always	N
nice	N
to	N
be	N
able	N
to	N
improve	N
on	N
an	N
established	N
UX	N
,	N
but	N
if	N
you	N
can	N
only	N
match	N
it	N
,	N
you're	N
not	N
exactly	N
losing	N
out	N
.	N
JavaScript	N
is	N
out	N
,	N
because	N
JS	N
cannot	N
read	N
anything	N
directly	N
from	N
the	N
client	N
;	N
it	N
can	N
only	N
direct	N
the	N
browser	N
to	N
load	N
a	N
pre-defined	N
local	N
path	N
,	N
or	N
load	N
bytes	N
from	N
the	N
server	N
.	N
Flash's	N
security	N
sandbox	N
also	N
prevents	N
this	N
,	N
as	N
you	N
pointed	N
out	N
.	N
Java	N
has	N
a	N
different	N
set	N
of	N
problems	N
-	N
people	N
rarely	N
install	N
applets	N
these	N
days	N
unless	N
they	N
trust	N
the	N
site	N
more	N
than	N
their	N
own	N
family	N
members	N
.	N
It's	N
also	N
apparently	N
extremely	N
difficult	N
to	N
build	N
something	N
reliable	N
and	N
usable	N
,	N
as	N
evidenced	N
by	N
Facebook-esque	N
companies	N
which	N
have	N
practically	N
unlimited	N
resources	N
to	N
throw	N
at	N
the	N
problem	N
and	N
still	N
fail	N
.	N
So	N
,	N
in	N
summary	N
-	N
no	N
,	N
and	N
don't	N
worry	N
too	N
much	N
about	N
it	N
.	N

If	N
the	N
jpeg	N
image	N
is	N
progressive	N
,	N
you	N
could	N
stop	N
uploading	N
after	N
a	N
certain	N
amount	N
of	N
resolution	N
is	N
acquired	N
.	N
This	N
will	N
require	N
a	N
bit	N
of	N
your	N
own	N
processing	N
of	N
the	N
jpeg	N
loader	N
and	N
http	N
handling	N
code	N
.	N
It's	N
also	N
a	N
pretty	N
big	N
"	N
IF	N
"	N
,	N
since	N
most	N
jpegs	N
are	N
not	N
progressive	N
by	N
default	N
.	N

"	N
If	N
this	N
were	N
possible	N
with	N
Flash	N
,	N
that	N
would	N
seem	N
like	N
the	N
best	N
option	N
.	N
"	N
As	N
I	N
understand	N
it	N
,	N
it	N
is	N
possible	N
with	N
Flash	N
Player	N
10	N
.	N
Here's	N
an	N
example	N
:	N
http://blog.kukiel.net/2009/02/file-manipulation-client-side-with.html	N
Flash	N
Player	N
10	N
currently	N
has	N
a	N
general	N
market	N
penetration	N
of	N
about	N
85-90%	N
,	N
so	N
if	N
you	N
hesitate	N
to	N
use	N
Java	N
because	N
only	N
96.52	N
%	N
of	N
your	N
user	N
have	N
it	N
installed	N
,	N
I	N
guess	N
you	N
wouldn't	N
want	N
to	N
require	N
Flash	N
Player	N
10	N
either	N
.	N

Good	N
Link	N
.	N
Since	N
FlashPlayer	N
10	N
,	N
it's	N
possible	N
to	N
manipulate	N
,	N
or	N
,	N
better	N
said	N
,	N
interpret	N
data	N
on	N
client	N
side	N
.	N

Another	N
way	N
is	N
to	N
use	N
Google's	N
Gears	N
,	N
ex	N
.	N
:	N
Gears	N
Uploader	N
.	N

I	N
think	N
that	N
you	N
can	N
upload	N
the	N
image	N
to	N
server	N
,	N
then	N
show	N
it	N
in	N
the	N
browser	N
,	N
then	N
the	N
user	N
will	N
be	N
resize	N
it	N
using	N
javascript	N
,	N
but	N
not	N
real	N
resize	N
,	N
only	N
capture	N
the	N
coordenate	N
of	N
it	N
,	N
then	N
you	N
can	N
use	N
the	N
coordeante	N
to	N
resize	N
the	N
image	N
in	N
the	N
server	N
and	N
save	N
the	N
new	N
image	N
(	N
thumb	N
)	N
and	N
discard	N
the	N
original	N
.	N

