How	N
to	N
Cross-Compile	N
Java	N
Source	N
Code	N
to	N
JavaScript	N
?	N

Given	N
a	N
set	N
of	N
Java	N
source	N
code	N
files	N
,	N
how	N
can	N
I	N
compile	N
them	N
into	N
one	N
or	N
more	N
JavaScript	N
files	N
that	N
can	N
be	N
used	N
with	N
hand-crafted	N
JavaScript	N
?	N
GWT	N
is	N
one	N
option	N
,	N
but	N
every	N
example	N
I've	N
seen	N
so	N
far	N
is	N
aimed	N
at	N
building	N
fancy	N
websites	N
.	N
The	N
simple	N
use	N
case	N
of	N
just	N
converting	N
Java	N
source	N
to	N
Javascript	N
that	N
can	N
be	N
used	N
together	N
with	N
handcrafted	N
JavaScript	N
hasn't	N
been	N
well-documented	N
.	N
I	N
started	N
a	N
thread	N
on	N
the	N
GWT	N
mailing	N
list	N
on	N
this	N
subject	N
,	N
but	N
opinions	N
seem	N
to	N
be	N
mixed	N
on	N
whether	N
this	N
is	N
even	N
feasible	N
.	N
One	N
person	N
gave	N
a	N
very	N
useful	N
tip	N
,	N
which	N
was	N
to	N
check	N
out	N
GWT-Exporter	N
.	N
The	N
problem	N
is	N
that	N
neither	N
source	N
code	N
nor	N
documentation	N
is	N
readily	N
available	N
,	N
although	N
there's	N
this	N
and	N
this	N
.	N
edit	N
:	N
GWT-Exporter	N
source	N
code	N
is	N
here	N
I've	N
also	N
seen	N
Java2Script	N
.	N
But	N
again	N
,	N
I	N
wasn't	N
able	N
to	N
find	N
examples	N
of	N
how	N
to	N
solve	N
my	N
simple	N
use	N
case	N
.	N
What's	N
the	N
best	N
approach	N
to	N
this	N
problem	N
?	N
Is	N
there	N
something	N
better	N
I'm	N
missing	N
?	N

This	N
question	N
discusses	N
a	N
very	N
similar	N
topic	N
:	N
compiling	N
Java	N
libraries	N
to	N
JavaScript	N
using	N
GWT	N
.	N
http://stackoverflow.com/questions/3125556/gwt-to-create-utility-javascript-library	N

Very	N
thorough	N
question	N
.	N
You	N
did	N
a	N
great	N
job	N
expressing	N
what	N
you'd	N
explored	N
already	N
.	N
Nicely	N
done	N
.	N

You	N
can	N
try	N
using	N
Scala-js	N
https://github.com/lampepfl/scala-js	N
for	N
your	N
java	N
project	N
-	N
java	N
/	N
scala	N
interoperability	N
http://www.scala-lang.org/old/faq/4	N
)	N

When	N
you	N
use	N
GWT	N
,	N
you're	N
basically	N
converting	N
the	N
UI	N
portion	N
into	N
Javascript	N
(	N
and	N
it	N
assumes	N
that	N
you	N
use	N
the	N
UI	N
widgets	N
provided	N
when	N
you	N
write	N
your	N
Java	N
)	N
.	N
Only	N
some	N
of	N
the	N
Java	N
libraries	N
are	N
accessible	N
within	N
Javascript	N
.	N
Typically	N
in	N
a	N
GWT	N
application	N
anything	N
that	N
makes	N
heavy	N
use	N
of	N
Java	N
libraries	N
would	N
run	N
on	N
the	N
server	N
side	N
and	N
connect	N
to	N
the	N
Javascript	N
as	N
AJAX	N
(	N
which	N
GWT	N
handles	N
for	N
you	N
)	N
.	N
So	N
GWT	N
isn't	N
necessarily	N
converting	N
your	N
full	N
application	N
into	N
Javascript	N
(	N
though	N
it	N
can	N
if	N
you're	N
willing	N
to	N
limit	N
your	N
use	N
of	N
Java	N
libraries	N
and	N
some	N
functionality	N
)	N
.	N
At	N
any	N
rate	N
,	N
if	N
this	N
approach	N
(	N
calling	N
out	N
to	N
Java	N
running	N
on	N
a	N
server	N
from	N
within	N
Javascript	N
)	N
appeals	N
to	N
you	N
,	N
one	N
nice	N
option	N
is	N
DWR	N
,	N
which	N
basically	N
allows	N
your	N
Javascript	N
to	N
directly	N
call	N
methods	N
in	N
Java	N
classes	N
running	N
on	N
the	N
server	N
(	N
without	N
you	N
having	N
to	N
build	N
a	N
web	N
service	N
or	N
other	N
frontend	N
)	N
.	N
Not	N
what	N
you	N
asked	N
,	N
I	N
know	N
.	N
More	N
relevantly	N
,	N
it	N
looks	N
like	N
there's	N
source	N
code	N
for	N
a	N
sample	N
app	N
demonstrating	N
the	N
use	N
of	N
gwt-exporter	N
.	N

This	N
would	N
be	N
for	N
a	N
fairly	N
small	N
,	N
non-gui	N
java	N
library	N
.	N
I	N
hadn't	N
seen	N
DWR	N
,	N
which	N
looks	N
like	N
it	N
could	N
be	N
very	N
useful	N
for	N
larger	N
projects	N
.	N
I	N
Didn't	N
even	N
see	N
the	N
source	N
directory	N
for	N
the	N
gwt-exporter	N
project	N
-	N
thanks	N
for	N
pointing	N
it	N
out	N
.	N
That	N
looks	N
promising	N
.	N

gwt-exporter	N
link	N
is	N
dead	N

Here's	N
a	N
new	N
link	N
to	N
the	N
sample	N
app	N
:	N
http://code.google.com/p/gwt-exporter/source/browse/trunk/samples/src/main/java/exporterdemo/public/ExporterDemo.html	N

The	N
new	N
link	N
is	N
also	N
dead	N
.	N
:/	N

And	N
here's	N
a	N
new	N
link	N
:	N
https://code.google.com/p/gwt-exporter/source/browse/samples/exporterdemo/src/main/java/exporterdemo/public/ExporterDemo.html	N

Also	N
,	N
here's	N
a	N
link	N
to	N
the	N
project	N
home	N
of	N
gwt-exporter	N
--	N
that's	N
less	N
likely	N
to	N
change	N
(	N
the	N
sample	N
app	N
changes	N
location	N
when	N
they	N
change	N
their	N
directory	N
format	N
):	N
https://code.google.com/p/gwt-exporter	N
/	N

Also	N
you	N
can	N
use	N
QWT	N
It	N
has	N
Java2JavaScript	N
compiler	N
on	N
the	N
board	N
.	N

Given	N
a	N
set	N
of	N
Java	N
source	N
code	N
files	N
,	N
how	N
can	N
I	N
compile	N
them	N
into	N
one	N
or	N
more	N
JavaScript	N
files	N
that	N
can	N
be	N
used	N
with	N
hand-crafted	N
JavaScript	N
?	N
There	N
is	N
no	N
direct	N
correlation	N
between	N
both	N
the	N
built-in	N
Java	N
API	N
and	N
Java	N
language	N
features	N
,	N
and	N
those	N
of	N
JavaScript	N
.	N
So	N
any	N
attempt	N
at	N
creating	N
a	N
"	N
converter	N
"	N
is	N
going	N
to	N
be	N
incomplete	N
.	N
As	N
a	N
fundamental	N
example	N
,	N
Java	N
classes	N
don't	N
have	N
a	N
direct	N
corresponding	N
JavaScript	N
idiom	N
.	N
Whether	N
or	N
not	N
an	N
incomplete	N
conversion	N
tool	N
will	N
work	N
for	N
your	N
use	N
case	N
is	N
impossible	N
to	N
know	N
without	N
the	N
source	N
code	N
.	N
That	N
said	N
,	N
my	N
suggestion	N
to	N
solving	N
your	N
problem	N
would	N
be	N
to	N
first	N
attempt	N
to	N
use	N
GWT	N
:	N
set	N
up	N
a	N
demo	N
project	N
,	N
drop	N
in	N
the	N
source	N
of	N
your	N
library	N
and	N
call	N
it	N
from	N
the	N
JavaScript	N
side	N
and	N
see	N
what	N
GWT	N
outputs	N
in	N
it's	N
.	N
js	N
file	N
.	N
Some	N
of	N
the	N
other	N
tools	N
suggested	N
by	N
other	N
posters	N
here	N
are	N
definitely	N
worth	N
checking	N
out	N
as	N
well	N
.	N
If	N
that	N
is	N
fruitful	N
and	N
gets	N
you	N
part	N
of	N
the	N
way	N
,	N
great	N
.	N
From	N
there	N
,	N
you'll	N
need	N
/	N
want	N
to	N
do	N
the	N
remainder	N
of	N
the	N
conversion	N
by	N
hand	N
.	N
After	N
all	N
,	N
assuming	N
you	N
want	N
the	N
code	N
to	N
actually	N
function	N
correctly	N
,	N
a	N
manual	N
review	N
would	N
definitely	N
be	N
in	N
order	N
.	N
Some	N
unit	N
tests	N
being	N
converted	N
along	N
with	N
it	N
would	N
be	N
ideal	N
as	N
well	N
.	N
You	N
don't	N
state	N
how	N
large	N
the	N
source	N
of	N
your	N
project	N
is	N
,	N
but	N
if	N
it's	N
small	N
(	N
let's	N
say	N
less	N
than	N
a	N
thousand	N
lines	N
of	N
code	N
)	N
,	N
even	N
a	N
complete	N
conversion	N
by	N
hand	N
shouldn't	N
be	N
extremely	N
difficult	N
.	N
If	N
it's	N
much	N
larger	N
than	N
that	N
,	N
I	N
would	N
suggest	N
reviewing	N
if	N
you	N
actually	N
want	N
that	N
as	N
JavaScript	N
code	N
anyway	N
.	N

Here's	N
two	N
other	N
options	N
,	N
things	N
to	N
look	N
into	N
and	N
a	N
third	N
option	N
not	N
converting	N
,	N
just	N
living	N
together	N
.	N
Java2Javascript	N
I	N
have	N
been	N
wanting	N
to	N
try	N
this	N
out	N
--	N
Looks	N
closer	N
to	N
what's	N
been	N
asked	N
.	N
Quoting	N
the	N
web	N
page	N
:	N
an	N
Eclipse	N
Java	N
to	N
JavaScript	N
compiler	N
plugin	N
and	N
an	N
implementation	N
of	N
JavaScript	N
version	N
of	N
Eclipse	N
Standard	N
Widget	N
Toolkit	N
(	N
SWT	N
)	N
with	N
other	N
common	N
utilities	N
,	N
such	N
as	N
java.lang	N
.	N
*	N
and	N
java.util	N
.	N
*	N
.	N
You	N
can	N
convert	N
your	N
SWT-base	N
Rich	N
Client	N
Platform	N
(	N
RCP	N
)	N
into	N
Rich	N
Internet	N
Application	N
(	N
RIA	N
)	N
by	N
Java2Script	N
Pacemaker	N
.	N
A	N
limited	N
Java	N
in	N
Javascript	N
experience	N
-	N
You'd	N
need	N
to	N
port	N
your	N
necessary	N
dependencies	N
or	N
find	N
alternatives	N
via	N
tools	N
like	N
jQuery	N
,	N
etc	N
.	N
DukeScript	N
As	N
I	N
view	N
DukeScript	N
,	N
it	N
compiles	N
some	N
front-end	N
Javascript	N
and	N
calls	N
Java	N
behind	N
,	N
from	N
the	N
browser's	N
Javascript	N
.	N
It	N
seems	N
more	N
or	N
less	N
a	N
hybrid	N
approach	N
so	N
you	N
can	N
use	N
the	N
Java	N
wealth	N
of	N
libraries	N
from	N
Javascript	N
.	N
I	N
will	N
fall	N
foul	N
of	N
a	N
browser	N
security	N
policy	N
for	N
Java	N
.	N
A	N
more	N
full-Javascript	N
on	N
Java	N
experience	N
leveraging	N
the	N
Java-runtime	N
.	N
If	N
I	N
wanted	N
that	N
outside	N
the	N
browser	N
environment	N
I'd	N
use	N
Javascript	N
on	N
Java	N
.	N
Nashhorn	N
Consider	N
this	N
as	N
an	N
example	N
of	N
using	N
Java's	N
resources	N
as	N
foundation	N
for	N
Javascript	N
:	N
Nashorn	N
and	N
JavaFX	N
,	N
as	N
an	N
example	N
for	N
a	N
rich	N
Javascript	N
operated	N
client	N
.	N
Anyway	N
with	N
a	N
Javascript	N
engine	N
inside	N
Java	N
you're	N
not	N
needing	N
to	N
translate	N
between	N
a	N
Javascript-VM	N
to	N
object-code	N
to	N
a	N
Java-VM	N
quite	N
so	N
much	N
.	N

