Rhino	^
:	,
restrict	V
Java	^
packages	V
that	O
can	V
be	V
accessed	V
from	P
JavaScript	^

When	R
embedding	V
a	D
JavaScript	N
interpreter	N
(	,
Rhino	!
)	,
into	P
a	D
Java	^
application	N
(	,
to	P
be	V
able	A
to	P
script	N
that	D
application	N
)	,
,	,
how	R
would	V
one	O
go	V
about	P
restricting	V
the	D
Java	^
packages	V
that	O
are	V
available	A
to	P
scripts	N
?	,
For	P
example	N
,	,
only	A
"	,
java.lang	!
.	,
*	,
"	,
should	V
be	V
accessible	A
.	,

A	D
method	N
for	P
blocking	V
access	V
to	P
certain	A
packages	N
and	&
classes	N
(	,
including	V
through	P
reflection	N
)	,
in	P
Rhino	^
is	V
described	V
here	R
.	,
The	D
important	A
interface	N
is	V
ClassShutter	^
which	O
provides	V
access	N
control	N
for	P
Rhino's	Z
LiveConnect	^
support	N
.	,

Ironically	R
,	,
the	D
link	N
to	P
codeutopia.net	N
about	P
blocking	V
access	V
is	V
returning	V
403	^
Forbidden	^
for	P
me	O

how	R
about	P
just	R
saying	V
:	,
java	N
=	,
undefined	A
;	G
com	U
=	G
undefined	A
;	,
Packages	^
=	,
undefined	A
;	,
in	P
an	D
initial	A
script	N
which	O
is	V
loaded	V
first	R
.	,

Interesting	A
approach	N
,	,
probably	R
works	V
if	P
you	O
want	V
to	P
turn	V
off	T
*	,
all	X
*	,
access	V
to	P
Java	^
(	,
not	R
just	R
specific	A
packages	N
)	,
.	,
On	P
the	D
other	A
hand	N
,	,
you	O
could	V
probably	R
still	R
do	V
`	E
obj.getClass()	E
.	E
forName	E
(	E
"	E
a.b.c.TheClass	E
")	E
.	E
newInstance()	E
`	E
for	P
any	D
object	N
that	P
you	O
have	V
in	P
the	D
interpreter	N
scope	N
.	,

@Thilo	@
no	!
if	P
your	D
objects	N
are	V
javascript	A
objects	N
(	,
which	O
is	V
what	O
you	O
should	V
do	V
)	,

