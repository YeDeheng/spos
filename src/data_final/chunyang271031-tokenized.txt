Reading an email string from a cookie in java
My application needs to store the users email address in a cookie so that I can pre-populate a login form ( username == email address ) . I set the cookie value in JavaScript . If I read it from JavaScript , I get foo@bar.com . If I look at it in the cookie viewer in Firefox I get foo@bar.com . When I try to read it on the server-side in Java however , I only get foo . Do I need to do some sort of encoding / decoding here ? If so , how do I do it in a way that can be decoded by both JavaScript and Java ? Thanks in advance ! -Michael
You need to escape the value part of your cookie .
From the javax.servlet.http.Cookie doco for setValue ( String ): Assigns a new value to a cookie after the cookie is created . If you use a binary value , you may want to use BASE64 encoding . With Version 0 cookies , values should not contain white space , brackets , parentheses , equals signs , commas , double quotes , slashes , question marks , at signs , colons , and semicolons . Empty values may not behave the same way on all browsers . I'm guessing you need to BASE64 encode it on the way in ( via JavaScript ) and on the way out ( via Java )
Please see post below about equals sign ... ( what's with the 300 char limit on comments ? )
I have found two solutions to this . Here is the first one . Add back in padding to Base64 encoded strings . Inspiration for this came from http://fi.am/entry/urlsafe-base64-encodingdecoding-in-two-lines In this solution , the JavaScript stays the same ( base64 encode everything ) and the server side looks like : On the JavaScript side , you just need to make sure you base64 encode the values :
The second solution is just to URLEncode the Base64 encoded string . I'm using commons codec to do the encoding here . Java Code : But now I have to decode it on the JavaScript side as well ... Encode : Decode :
