Has	V
anyone	O
used	V
or	&
written	V
an	D
Ant	N
task	N
to	P
compile	V
(	,
Rhino	^
)	,
JavaScript	^
to	P
Java	^
bytecode	^
?	,

I'd	L
like	V
to	P
use	V
the	D
Rhino	^
JavaScript	^
compiler	^
to	P
compile	V
some	D
JavaScript	N
to	P
.	,
class	N
bytecode	N
files	N
for	P
use	V
in	P
a	D
project	N
.	,
It	O
seems	V
like	P
this	D
should	V
already	R
exist	V
,	,
since	P
there	X
are	V
groovyc	^
,	,
netrexxc	V
,	,
and	&
jythonc	D
tasks	N
for	P
Groovy	^
,	,
NetREXX	^
(	,
!	,
)	,
and	&
Jython	N
,	,
respectively	R
.	,
Has	V
anyone	O
used	V
or	&
written	V
such	X
an	D
Ant	N
task	N
,	,
or	&
can	V
anyone	O
provide	V
some	D
tips	N
on	P
how	R
to	P
write	V
one	$
?	,
Ideally	R
it	O
would	V
have	V
some	D
way	N
to	P
resolve	V
dependencies	N
among	P
JavaScript	^
or	^
Java	^
classes	N
.	,

Why	R
not	R
simply	R
use	V
java	N
task	N
?	,
Any	D
objections	N
?	,

Hmm	!
,	,
the	D
main	A
concern	N
is	V
handling	V
dependencies	N
among	P
Java	^
and	&
JavaScript	N
classes	N
.	,
Still	R
,	,
this	O
might	V
be	V
enough	A
to	P
work	N
for	P
now	R
--	,
thanks	!
.	,

Here	R
is	V
a	D
sample	N
build.xml	P
I	O
use	V
for	P
my	D
rhino	N
applications	N
.	,
If	P
you	O
have	V
lots	N
of	P
javascript	O
files	V
you	O
just	R
need	V
to	P
keep	V
adding	V
more	A
tags	N
~	G
:	,
ant	N
compile	V
jar	N
run	V
~	T

I'm	L
using	V
RequireJS	^
in	P
my	D
project	N
,	,
which	O
includes	V
a	D
script	N
that	P
traces	V
out	T
dependencies	N
between	P
modules	N
,	,
and	&
combines	V
them	O
into	P
a	D
single	A
JavaScript	N
file	N
.	,
Optionally	^
,	,
it	O
can	V
also	R
minify	A
the	D
combined	A
js	N
file	V
with	P
the	D
Google	^
Closure	^
compiler	^
.	,
Once	R
it's	L
in	P
this	D
form	N
,	,
where	R
all	R
dependencies	N
are	V
included	V
in	P
a	D
single	A
js	N
file	N
,	,
the	D
file	N
can	V
be	V
easily	R
compiled	V
using	V
jsc	T
.	,
Here's	L
a	D
segment	N
of	P
my	D
ant	N
script	N
which	P
I	O
use	V
to	P
create	V
the	D
single	A
combined	A
js	N
file	N
,	,
compile	V
it	O
to	P
a	D
class	N
file	N
,	,
and	&
then	R
create	V
an	D
executable	^
JAR	N
:	,
The	D
complete	A
build	V
script	N
can	V
be	V
found	V
here	R
.	,

