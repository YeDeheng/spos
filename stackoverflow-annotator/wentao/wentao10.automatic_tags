1344131	Upload image thumbnail to server , without uploading whole image	^ N N P N , P V A N
1344131	As far as I know , what I ask here isn't possible , but I thought I'd ask anyway in case I'm missing something . Suppose you want to let users upload JPG images , and these images are scaled into smaller icons and the original images are always discarded and never required again . Is there any way that would commonly work in most modern browsers that would let the user select a single image on their hard drive , have that LOCALLY turned into a thumbnail and upload the created thumbnail to a server ? In a case where the server just needs a small image , it would be wasteful both in user time and server resources to proceed uploading the whole image , only to immediately discard it . It would be much better to just scale it on the client . I can imagine three options . Just plain HTML / Javascript , using Flash or using Java . If this were possible with Flash , that would seem like the best option . But reading flash.net.FileReference documentation , it seems that you can upload a file from the HD yes , but you cannot look inside the file you are uploading . On the other hand , if you enable " can access local files " in Flash publishing options , it seems that you can then no longer access the net , so that doesn't work . With HTML / Javascript , it is possible to load images and display them on a canvas , but if you try to access the pixels of these images , you get security violations , so that doesn't seem to work . Java I hesitate to use , because only 96.52 % of my users have it installed , and the file upload dialogs I have seen implemented in Java ( at Facebook for example ) have not worked well ( unresponsive interface ) . I wonder though if Java is the only thing allowing resizing images from local HD ?	R R P O V , O O V R V R , & O V L V R P N L V N , V O V P V N ^ ^ N , & D N V V P A N & D A N V R V & R A R , V R D N P V R V P R A N O V V D N V D A N P D A N , V D N V P D N & V D V N P D N , P D N R D N R V D A N , O V V A $ P N N & N N P V V D A N , A P R V O , O V V R R P R V O P D N , O V V $ N , R A N , ^ , V ^ & V ^ , P D V A P ^ , O V V P D A N , & V N N , O V P O V V D N P D ^ ! , & O V V P D V O V V , P D A N , P O V , V V A N , P ^ N N , O V P O V R R A N D N , P O V N , P ^ , ^ , O V R P N N & V O P D N , & P O V P V D ^ P D N , O V N N , P O V V P N , ^ O V P V , P A $ N P D N V O V , & D N V V O V V V P ^ , P ^ P N , V R V R , A N , , O V P P ^ V D A N V V N P ^ ^ ,
1344131	I think if there was a reasonably reliable and user-friendly way to accomplish this , it'd be done on sites like Facebook already . People are used to having to upload the original image ... it's always nice to be able to improve on an established UX , but if you can only match it , you're not exactly losing out . JavaScript is out , because JS cannot read anything directly from the client ; it can only direct the browser to load a pre-defined local path , or load bytes from the server . Flash's security sandbox also prevents this , as you pointed out . Java has a different set of problems - people rarely install applets these days unless they trust the site more than their own family members . It's also apparently extremely difficult to build something reliable and usable , as evidenced by Facebook-esque companies which have practically unlimited resources to throw at the problem and still fail . So , in summary - no , and don't worry too much about it .	O V P X V D R A & A N P V D , L V V P N P ^ R , N V V P V P V D A N , L R A P V A P V P D A ^ , & P O V A N O , L R R V T , ^ V T , P ^ V V N R P D N , O V R A D N P N D A A N , & N V P D N , Z N N R V D , P O V T , ^ V D A N P N , N R V P D N P O V D N R P D A N N , L R R R A P V R A & A , P V P A N O V R A N P V P D N & R V , P , P N , ! , & V V R A P O ,
1344131	If the jpeg image is progressive , you could stop uploading after a certain amount of resolution is acquired . This will require a bit of your own processing of the jpeg loader and http handling code . It's also a pretty big " IF " , since most jpegs are not progressive by default .	P D N N V A , O V V V P D A N P N V A , D V V D N P D N N P D N N & U V N , L R D R A , ! , , P A N V R A P N ,
1344131	" If this were possible with Flash , that would seem like the best option . " As I understand it , it is possible with Flash Player 10 . Here's an example : http://blog.kukiel.net/2009/02/file-manipulation-client-side-with.html Flash Player 10 currently has a general market penetration of about 85-90% , so if you hesitate to use Java because only 96.52 % of your user have it installed , I guess you wouldn't want to require Flash Player 10 either .	, P D V A P ^ , O V V P D A N , , P O V O , O V R P ^ ^ $ , L D N , U ^ ^ $ R V D A N N P P $ , R P O V P V ^ P A $ N P D N V O V , O V O V V P V ^ ^ $ & ,
1344131	Good Link . Since FlashPlayer 10 , it's possible to manipulate , or , better said , interpret data on client side .	A N , P ^ $ , L A P V , & , R V , V N P N N ,
1344131	Another way is to use Google's Gears , ex . : Gears Uploader .	D N V P V ^ ^ , N , , ^ ^ ,
1344131	I think that you can upload the image to server , then show it in the browser , then the user will be resize it using javascript , but not real resize , only capture the coordenate of it , then you can use the coordeante to resize the image in the server and save the new image ( thumb ) and discard the original .	O V P O V V D N P N , R V O P D N , R D N V V V O V N , & R A N , R V D N P O , R O V V D N P V D N P D N & V D A N , N , & V D N ,
