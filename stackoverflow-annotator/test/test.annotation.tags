123		a = b 	D G V /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		that's my fault 	L D N /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		that is faulty 	O V A /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		it's my fault 	L D N /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		I'm android What's the equivalent of Java's thread.sleep() in javascript ? 	L ^ Z D N P Z ^ P ^ , /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		What is the equivalent of Java's Thread.sleep() in Javascript ? 	O V D N P ^ ^ P ^ , /		Thu Aug 20 2015 22:04:15 GMT+0800 (SGT)
123		You can either write a spin loop ( a loop that just loops for a long period of time performing some sort of computation to delay the function ) or use : This will call ' Func1() ' after 3 seconds . Edit : Credit goes to the commenters , but you can pass anonymous functions to setTimeout . This is much more efficient and does not invoke javascript's eval function . 	O V D V D V N , D N P R V P D A N P N V D N P N P V D N , & V , D V V , ^ , P $ N , ! , N V P D N , & O V V A N P ^ , D V R R A & V R V L N N , /		Thu Aug 20 2015 22:04:15 GMT+0800 (SGT)
123		I want the current thread to go for waiting state for specified number of seconds 	O V D A N P V P V N P A N P N /		Thu Aug 20 2015 22:04:15 GMT+0800 (SGT)
123		Spinning a loop cause High CPU utilization . 	V D N R A N N , /		Thu Aug 20 2015 22:04:15 GMT+0800 (SGT)
123		I'd prefer to provide the function directly as an argument instead of quoting the function name : setTimeout ( function() { ... } , 3000 ); 	L V P V D N R P D N R P V D N N , E E E E ~ , , $ G /		Thu Aug 20 2015 22:04:15 GMT+0800 (SGT)
123		a = b 	D G V /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		that's my fault 	L D N /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		that is faulty 	O V A /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		it's my fault 	L D N /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
123		I'm android What's the equivalent of Java's thread.sleep() in javascript ? 	L ^ Z D N P Z ^ P ^ , /		Thu Aug 20 2015 22:04:09 GMT+0800 (SGT)
